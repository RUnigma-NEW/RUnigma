DRPMBUILD = --macros /usr/lib/rpm/macros:/home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/config/rpm/targets/sh4-linux:/home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/config/rpm/common:/home/piterkadet/RUNIGMA/RUnigma-308/tdt/cvs/cdk/localmacros
DRPM = --macros /usr/lib/rpm/macros:/home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/config/rpm/targets/sh4-linux:/home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/config/rpm/common:/home/piterkadet/RUNIGMA/RUnigma-308/tdt/cvs/cdk/localmacros
kernelprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/cvs/cdk
rpmdbprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/cdkroot-rpmdb
devkitprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/devkit
configprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/config
crossprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/devkit/sh4
GRAPHICFW_DEP = 
GRAPHICFW = framebuffer
MEDIAFW_DEP = libeplayer3
MEDIAFW = eplayer3
EXTERNALLCD_DEP = 
DISTCLEANUP = rm -rf
RPMDEPSCLEANUP = rm -f
DEPSCLEANUP = rm -f
CLEANUP = rm -rf
maxcachefiles = -1
maxcachesize = -1
ccachedir = /usr/bin
USE_CCACHEHOST = yes
CCACHE = ccache
ENABLE_CCACHE = yes
YFLAGS = 
YACC = bison -y
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LEX = flex
ac_ct_CXX = g++
CXXFLAGS = -g -O2
CXX = g++
MAKEINFO = /usr/bin/makeinfo
BZIP2 = /bin/bzip2
M4 = /usr/bin/m4
srcdir = .
archivedir = /home/piterkadet/Archive
hostappsdir = 
driverdir = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/cvs/driver
appsdir = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/cvs/apps
PKDIR = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/cvs/cdk/packagingtmpdir
ipkgbuilddir = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/cvs/cdk/ipkgbuild
packagingtmpdir = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/cvs/cdk/packagingtmpdir
bootprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/cdkroot-tftpboot
buildprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/cvs/cdk
workprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/work
hostprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/host
targetprefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox/cdkroot
TARGET_LDFLAGS = 
TARGET_CXXFLAGS = -pipe -Os
TARGET_CFLAGS = -pipe -Os
E2PD3 = 
ENABLE_E2PD3 = 
E2PD2 = 
ENABLE_E2PD2 = 
E2PD1 = e2pd1
ENABLE_E2PD1 = yes
E2PD0 = 
ENABLE_E2PD0 = 
SPARK = 
ENABLE_SPARK = 
HL101 = hl101
ENABLE_HL101 = yes
DATA_PARTITION_SIZE = 0x400000
ROOT_PARTITION_SIZE = 0x240000
VAR = 
ENABLE_VAR = 
NFSSERVER = 
ENABLE_NFSSERVER = 
NTFS = 
ENABLE_NTFS = 
XFSPROGS = 
ENABLE_XFS = 
LIRC = 
ENABLE_LIRC = 
EXTERNALLCD = no
ENABLE_EXTERNALLCD = 
GRAPHICFWDIRECTFB = 
ENABLE_GRAPHICFWDIRECTFB = 
EPLAYER3 = 
ENABLE_EPLAYER3 = yes
MEDIAFWGSTREAMER = 
ENABLE_MEDIAFWGSTREAMER = 
ASSUME_KERNELSOURCES_OLD = 
CPU_MODEL = sh4
DEBUG = 
P0308 = p0308
ENABLE_P0308 = yes
P0215 = 
ENABLE_P0215 = 
P0211 = 
ENABLE_P0211 = 
PY332 = 
ENABLE_PY332 = 
PY276 = py276
ENABLE_PY276 = yes
PY273 = 
ENABLE_PY273 = 
STM24 = yes
MULTICOM406 = 
ENABLE_MULTICOM406 = 
MULTICOM324 = multicom324
ENABLE_MULTICOM324 = yes
PLAYER191 = player191
ENABLE_PLAYER191 = yes
OBJEXT = o
EXEEXT = 
ac_ct_CC = gcc
CPPFLAGS = 
LDFLAGS = 
CFLAGS = -g -O2
CC = gcc
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
INSTALL_PROGRAM = ${INSTALL}
target_os = linux-gnu
target_vendor = unknown
target_cpu = sh4
target = sh4-linux
host_arch = i686
host_os = linux-gnu
host_vendor = pc
host_cpu = i686
host = i686-pc-linux-gnu
build_os = linux-gnu
build_vendor = pc
build_cpu = i686
build = i686-pc-linux-gnu
target_alias = sh4-linux
host_alias = i686-pc-linux-gnu
build_alias = i686-pc-linux-gnu
LIBS = 
ECHO_T = 
ECHO_N = -n
ECHO_C = 
DEFS = -DPACKAGE_NAME=\"tufsbox-cdk\" -DPACKAGE_TARNAME=\"tufsbox-cdk\" -DPACKAGE_VERSION=\"0\" -DPACKAGE_STRING=\"tufsbox-cdk\ 0\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DNO_LCD=1 -DYYTEXT_POINTER=1
mandir = ${datarootdir}/man
localedir = ${datarootdir}/locale
libdir = ${exec_prefix}/lib
psdir = ${docdir}
pdfdir = ${docdir}
dvidir = ${docdir}
htmldir = ${docdir}
infodir = ${datarootdir}/info
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
oldincludedir = /usr/include
includedir = ${prefix}/include
localstatedir = ${prefix}/var
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
libexecdir = ${exec_prefix}/libexec
sbindir = ${exec_prefix}/sbin
bindir = ${exec_prefix}/bin
program_transform_name = s,x,x,
prefix = /home/piterkadet/RUNIGMA/RUnigma-308/tdt/tufsbox
exec_prefix = ${prefix}
PACKAGE_URL = 
PACKAGE_BUGREPORT = 
PACKAGE_STRING = tufsbox-cdk 0
PACKAGE_VERSION = 0
PACKAGE_TARNAME = tufsbox-cdk
PACKAGE_NAME = tufsbox-cdk
PATH_SEPARATOR = :
SHELL = /bin/sh
## Makefile for Tuxbox

.PRECIOUS: Makefile

$(srcdir)/configure: configure.ac aclocal.m4
	cd '$(srcdir)' && autoconf

Makefile: Config.in Makefile.in config.status smart-rules.pl *.mk make/*.mk
	./config.status

config.status: configure
	./config.status --recheck

# this makes sure we do not build top-level dependencies in parallel
# (which would not be too helpful anyway, running many configure and
# downloads in parallel...), but the sub-targets are still built in
# parallel, which is useful on multi-processor / multi-core machines
.NOTPARALLEL:
#######################################      #########################################

export CFLAGS
export CXXFLAGS

export DRPM
export DRPMBUILD

#######################################      #########################################

ifdef ENABLE_P0211
KERNELVERSION := 2.6.32.59_stm24_0211
endif

ifdef ENABLE_P0215
KERNELVERSION := 2.6.32.61_stm24_0215
endif

ifdef ENABLE_P0308
KERNELVERSION := 3.4.58_stm24_0308
endif

KERNEL_DIR := linux-sh4-$(KERNELVERSION)
KERNELSTMLABEL := _$(word 2,$(subst _, ,$(KERNELVERSION)))_$(word 3,$(subst _, ,$(KERNELVERSION)))
KERNELLABEL := $(shell x=$(KERNELVERSION); echo $${x: -3})

#######################################      #########################################

STLINUX := stlinux24
STM_SRC := $(STLINUX)
STM_RELOCATE := /opt/STM/STLinux-2.4

#######################################      #########################################
# PATH is exported automatically

ifdef ENABLE_CCACHE
PATH := $(hostprefix)/ccache-bin:$(crossprefix)/bin:$(PATH):/usr/sbin
else
PATH := $(crossprefix)/bin:$(PATH):/usr/sbin
endif

DEPMOD = $(hostprefix)/bin/depmod
SOCKSIFY=
CMD_CVS=$(SOCKSIFY) $(shell which cvs)
WGET=$(SOCKSIFY) wget

INSTALL_DIR=$(INSTALL) -d
INSTALL_BIN=$(INSTALL) -m 755
INSTALL_FILE=$(INSTALL) -m 644
LN_SF=$(shell which ln) -sf
CP_D=$(shell which cp) -d
CP_P=$(shell which cp) -p
CP_RD=$(shell which cp) -rd
SED=$(shell which sed)

MAKE_PATH := $(hostprefix)/bin:$(PATH)

ADAPTED_ETC_FILES =
ETC_RW_FILES =

# rpm helper-"functions":
PKG_CONFIG_PATH = $(targetprefix)/usr/lib/pkgconfig
REWRITE_LIBDIR = sed -i "s,^libdir=.*,libdir='$(targetprefix)/usr/lib'," $(targetprefix)/usr/lib
REWRITE_LIBDEP = sed -i -e "s,\(^dependency_libs='\| \|-L\|^dependency_libs='\)/usr/lib,\$(targetprefix)/usr/lib," $(targetprefix)/usr/lib

BUILDENV := \
	source $(buildprefix)/build.env &&

EXPORT_BUILDENV := \
	export PATH=$(MAKE_PATH) && \
	export AR=$(target)-ar && \
	export AS=$(target)-as && \
	export LD=$(target)-ld && \
	export NM=$(target)-nm && \
	export CC=$(target)-gcc && \
	export GCC=$(target)-gcc && \
	export CXX=$(target)-g++ && \
	export RANLIB=$(target)-ranlib && \
	export STRIP=$(target)-strip && \
	export OBJCOPY=$(target)-objcopy && \
	export OBJDUMP=$(target)-objdump && \
	export SIZE=$(target)-size && \
	export LN_S="ln -s" && \
	export CFLAGS="$(TARGET_CFLAGS)" && \
	export CXXFLAGS="$(TARGET_CFLAGS)" && \
	export LDFLAGS="$(TARGET_LDFLAGS) -Wl,-rpath-link,$(packagingtmpdir)/usr/lib" && \
	export PKG_CONFIG_SYSROOT_DIR="$(targetprefix)" && \
	export PKG_CONFIG_PATH="$(targetprefix)/usr/lib/pkgconfig" && \
	export PKG_CONFIG_LIBDIR="$(targetprefix)/usr/lib/pkgconfig"

build.env:
	echo '$(EXPORT_BUILDENV)' |sed 's/&&/\n/g' |sed 's/^ //' > $@

MAKE_OPTS := \
	CC=$(target)-gcc \
	CXX=$(target)-g++ \
	LD=$(target)-ld \
	NM=$(target)-nm \
	AR=$(target)-ar \
	AS=$(target)-as \
	RANLIB=$(target)-ranlib \
	STRIP=$(target)-strip \
	OBJCOPY=$(target)-objcopy \
	OBJDUMP=$(target)-objdump \
	LN_S="ln -s" \
	ARCH=sh \
	CROSS_COMPILE=$(target)-

MAKE_ARGS := \
	CC=$(target)-gcc \
	CXX=$(target)-g++ \
	LD=$(target)-ld \
	NM=$(target)-nm \
	AR=$(target)-ar \
	AS=$(target)-as \
	RANLIB=$(target)-ranlib \
	STRIP=$(target)-strip \
	OBJCOPY=$(target)-objcopy \
	OBJDUMP=$(target)-objdump \
	LN_S="ln -s"

PLATFORM_CPPFLAGS := $(CPPFLAGS) -I$(driverdir)/include -I $(buildprefix)/$(KERNEL_DIR)/include -I$(appsdir)/misc/tools

PLATFORM_CPPFLAGS += -DPLATFORM_HL101

PLATFORM_CPPFLAGS := CPPFLAGS="$(PLATFORM_CPPFLAGS)"

DEPDIR = .deps

VPATH = $(DEPDIR)

CONFIGURE_OPTS = \
	--build=$(build) \
	--host=$(target) \
	--prefix=$(targetprefix)/usr \
	--with-driver=$(driverdir) \
	--with-dvbincludes=$(driverdir)/include \
	--with-target=cdk

ifdef ENABLE_CCACHE
CONFIGURE_OPTS += --enable-ccache 
endif

ifdef MAINTAINER_MODE
CONFIGURE_OPTS += --enable-maintainer-mode
endif

CONFIGURE = \
	./autogen.sh && \
	CC=$(target)-gcc \
	CXX=$(target)-g++ \
	CFLAGS="-Wall $(TARGET_CFLAGS)" \
	CXXFLAGS="-Wall $(TARGET_CXXFLAGS)" \
	LDFLAGS="$(TARGET_LDFLAGS)" \
	./configure $(CONFIGURE_OPTS)

PYTHON_VERSION = $(word 1,$(subst ., ,$(VERSION_python))).$(word 2,$(subst ., ,$(VERSION_python)))
PYTHON_DIR = /usr/lib/python$(PYTHON_VERSION)

query: %query:
	rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) -qa

query-%:
	@for i in sh4 noarch ${host_arch} ; do \
		FOUND=`ls RPMS/$$i | grep $*` || true && \
		( for j in $$FOUND ; do \
			echo "RPMS/$$i/$$j:" && \
			rpm $(DRPM) -qplv --scripts RPMS/$$i/$$j || true; echo;done ) || true ; done


# -----------------------------------------
# Config gui
# Usage:
#   palce $(eval $(call guiconfig,util_name)) somewhere in *mk file
#   then call make util_name.xcofig
#
define guiconfig

$(1).menuconfig $(1).xconfig: \
$(1).%:
	$(MAKE) -C $(DIR_$(1)) ARCH=sh CROSS_COMPILE=sh4-linux- $$*
	@echo
	@echo "You have to edit m a n u a l l y Patches/...$(1)...*config to make changes permanent !!!"
	@echo ""
	diff $(DIR_$(1))/.config.old $(DIR_$(1))/.config
	@echo ""

endef
PARENT_PK = ''

PACKAGE_PARAMS_LIST := PKGV PKGR DESCRIPTION SECTION PRIORITY MAINTAINER LICENSE PACKAGE_ARCH HOMEPAGE RDEPENDS RREPLACES RCONFLICTS SRC_URI FILES NAME preinst postinst prerm postrm conffiles PACKAGES

EXPORT_ALLENV = $(shell echo '$(.VARIABLES) ' | awk -v RS=' ' '/^[a-zA-Z0-9_]+$$/')
EXPORT_ENV = $(filter PARENT_PK, $(EXPORT_ALLENV))
EXPORT_ENV += $(filter $(addsuffix _%, $(PACKAGE_PARAMS_LIST)), $(EXPORT_ALLENV))
export $(EXPORT_ENV)

export packagingtmpdir
export ipkgbuilddir
IPKGBUILDDIR := $(ipkgbuilddir)
export IPKGBUILDDIR

ipkcdk := $(prefix)/ipkcdk
ipkprefix := $(prefix)/ipkbox
ipkextras := $(prefix)/ipkextras
workprefix := $(prefix)/work

$(ipkcdk):
	$(INSTALL) -d $@

$(ipkprefix):
	$(INSTALL) -d $@

$(ipkextras):
	$(INSTALL) -d $@

$(workprefix):
	$(INSTALL) -d $@

define extra_build
	rm -rf $(ipkgbuilddir)/*
	$(flash_prebuild)
	python split_packages.py
	$(call do_build_pkg,none,flash)
endef

define e2extra_build
	rm -rf $(ipkgbuilddir)/*
	$(flash_prebuild)
	python split_packages.py
	$(call do_build_pkg,none,extra)
endef


define toflash_build
	rm -rf $(ipkgbuilddir)/*
	$(flash_prebuild)
	python split_packages.py
	$(call do_build_pkg,install,flash)
endef

define tocdk_build_start
	rm -rf $(ipkgbuilddir)/*
	export FILES_$(PARENT_PK)="/" && \
	python split_packages.py
	$(rewrite_libtool)
#	$(rewrite_pkgconfig)
	$(rewrite_dependency)
endef

define tocdk_build
	$(tocdk_build_start)
	$(call do_build_pkg,install,cdk)
endef

define fromrpm_build
	$(fromrpm_get)
	$(remove_includedir)
	$(toflash_build)
endef

flash_ipkg_args = -f $(crossprefix)/etc/opkg.conf -o $(prefix)/pkgroot
cdk_ipkg_args = -f $(crossprefix)/etc/opkg-cdk.conf -o $(targetprefix)

define do_build_pkg
	@echo
	@echo "====> do_build_pkg $(1) $(2)"
	for pkg in `ls $(ipkgbuilddir)`; do \
		ipkg-build -o root -g root $(ipkgbuilddir)/$$pkg \
		$(if $(filter cdk,$(2)),$(ipkcdk)) \
		$(if $(filter extra,$(2)),$(ipkextras)) \
		$(if $(filter flash,$(2)),$(ipkprefix)) |tee tmpname \
		&& \
			pkgn=`cat tmpname |perl -ne 'if (m/Packaged contents/) { print ((split / /)[-1])}'` && \
			(opkg --force-depends remove $(if $(filter cdk,$(2)),$(cdk_ipkg_args),$(flash_ipkg_args)) `echo $${pkg//_/-}| tr A-Z a-z` || true) && \
			in_extra="`echo $(EXTRA_$(PARENT_PK)) |tr ' ' '\n' |grep -x $$pkg ||true`" && \
			in_dist="`echo $(DIST_$(PARENT_PK)) |tr ' ' '\n' |grep -x $$pkg ||true`" && \
			if [ "install" = "$(1)" -a \( -z "$$in_extra" -o "$(2)" = "cdk" \) \
			   -o "$(2)" != "cdk" -a -n "$$in_dist" ]; then \
			opkg install $(if $(filter cdk,$(2)),$(cdk_ipkg_args),$(flash_ipkg_args)) $$pkgn \
			; else \
				echo "Not installing $$pkg" ; \
			fi \
		; done
endef


define start_build
	$(eval export $(EXPORT_ENV))$(warning MANUAL_EXPORT)
	@echo
	@echo "====> checking for PARENT_PK variable"
	$(eval $(if $(filter '',$(PARENT_PK)), $@: PARENT_PK = $(subst -,_,$(notdir $@))))
	$(eval export PARENT_PK)
	@echo "====> start_build $(PARENT_PK)"
	rm -rf $(PKDIR)
	mkdir $(PKDIR)
	$(if $(findstring $(PKGV_$(PARENT_PK)),git),
	@echo determine version from git
	$(AUTOPKGV_$(PARENT_PK))
	)
	$(if $(findstring $(PKGV_$(PARENT_PK)),svn),
	@echo determine version from svn
	$(AUTOPKGV_$(PARENT_PK))
	)
endef

define package_rpm_get
	$(shell rpm --dbpath $(prefix)/cdkroot-rpmdb --queryformat $1)
endef

define fromrpm_get
	$(eval export DESCRIPTION_$(PARENT_PK) = $(call package_rpm_get,'%{SUMMARY}' -qp $(lastword $^)))
	$(eval export PKGV_$(PARENT_PK) = $(call package_rpm_get,'%{VERSION}-%{RELEASE}' -qp $(lastword $^)))
	$(eval export SRC_URI_$(PARENT_PK) = "stlinux.com")
	@echo "rpm got descr $(DESCRIPTION_$(PARENT_PK))"
	@echo "rpm got version $(PKGV_$(PARENT_PK))"
	rm -rf rpmtmpdir
	mkdir rpmtmpdir
	bsdtar xf $(lastword $^) -C rpmtmpdir
	mv -v rpmtmpdir/$(targetprefix)/* $(PKDIR)
endef

define flash_prebuild
	$(remove_libs)
	$(remove_pkgconfigs)
	$(strip_libs)
	$(remove_docs)
endef

define remove_docs
	rm -rf $(PKDIR)/usr/share/doc
	rm -rf $(PKDIR)/usr/share/man
	rm -rf $(PKDIR)/usr/share/gtk-doc
endef

define strip_libs
	find $(PKDIR) -type f -regex '.*/lib/.*\.so\(\.[0-9]+\)*' \
		-exec echo strip {} \; \
		-exec sh4-linux-strip --strip-unneeded {} \;
endef

define remove_libs
	rm -f $(PKDIR)/lib/*.{a,la,o}
	rm -f $(PKDIR)/usr/lib/*.{a,la,o}
endef

define remove_pkgconfigs
	rm -rf $(PKDIR)/usr/lib/pkgconfig
endef

define remove_includedir
	rm -rf $(PKDIR)/usr/include
endef

define remove_pyo
	find $(PKDIR) -name "*.pyo" -type f -exec rm -f {} \;
	rm -rf $(PKDIR)/usr/lib/python$(PYTHON_VERSION)/site-packages/*-py$(PYTHON_VERSION).egg-info
endef

define remove_pyc
	find $(PKDIR) -name "*.pyc" -type f -exec rm -f {} \;
	rm -rf $(PKDIR)/usr/lib/python$(PYTHON_VERSION)/site-packages/*-py$(PYTHON_VERSION).egg-info
endef

define prepare_pkginfo_for_flash
	export OPKG_OFFLINE_ROOT=$(flashprefix)/root/ \
	for i in $(flashprefix)/root/usr/lib/opkg/info/*.preinst; do \
		if [ -f $i ] && ! sh $i; then \
			opkg-cl $(flash_ipkg_args) flag unpacked `basename $i .preinst` \
		fi \
	done \
	for i in $(flashprefix)/root/usr/lib/opkg/info/*.postinst; do \
		if [ -f $i ] && ! sh $i configure; then \
			opkg-cl $(flash_ipkg_args) flag unpacked `basename $i .postinst` \
		fi \
	done
endef

define rewrite_libtool
	 find $(ipkgbuilddir)/* -name "*.la" -type f -exec perl -pi -e "s,^libdir=.*$$,libdir='$(targetprefix)/usr/lib'," {} \;
endef

define rewrite_pkgconfig
	 find $(ipkgbuilddir)/* -name "*.pc" -type f -exec perl -pi -e "s,^prefix=.*$$,prefix=$(targetprefix)/usr," {} \;
endef

define rewrite_dependency
	find $(ipkgbuilddir)/* -name "*.la" -type f -exec \
		perl -pi -e "s, /usr/lib, $(targetprefix)/usr/lib,g if /^dependency_libs/" {} \;
endef

define parent_pk
	$(eval $@: PARENT_PK = $1)
endef

define git_fetch_prepare
	@echo git fetching $1
	$(eval DIR_$(1) ?= $(buildprefix)/$(1)-git)
	$(eval SRC_URI_$(1) += $(2))
	@echo 'setting dir DIR_$(1)=$(DIR_$(1))'
	@echo 'setting uri SRC_URI_$(1)=$(SRC_URI_$(1))'
	if [ -d $(DIR_$(1)) ]; then \
		cd $(DIR_$(1)) && git pull; \
	else \
		git clone $(2) $(DIR_$(1)); \
	fi
endef

opkgcdkl-%:
	opkg files $(cdk_ipkg_args) $*

opkgl-%:
	opkg files $(flash_ipkg_args) $*

opkgcdkl:
	opkg list-installed $(cdk_ipkg_args)

opkgl:
	opkg list-installed $(flash_ipkg_args)

opkg-sanitycheck:
	dup=`cat $(prefix)/pkgroot/usr/lib/opkg/info/*list |sort |uniq -d` && test -z $$dup \
		|| (echo "ERROR: opkg lists has duplicate files:"; echo $$dup; false)

.PHONY: package-index $(ipkprefix)/Packages package-index-extras $(ipkextras)/Packages
package-index: $(ipkprefix)/Packages
$(ipkprefix)/Packages: $(ipkprefix)
	cd $(ipkprefix) && \
		/usr/bin/python $(crossprefix)/bin/ipkg-make-index . > Packages && \
		cat Packages | gzip > Packages.gz

package-index-extras: $(ipkextras)/Packages
$(ipkextras)/Packages: $(ipkextras)
	cd $(ipkextras) && \
		/usr/bin/python $(crossprefix)/bin/ipkg-make-index . > Packages && \
		cat Packages | gzip > Packages.gz

svn_version := svn info | awk '/Revision:/ { print $$2 }'
get_svn_version = $(eval export PKGV_$(PARENT_PK) = $(shell cd $(DIR_$(PARENT_PK)) && $(svn_version)))

git_version := git log -1 --format=%cd --date=short -- . |sed s/-//g
get_git_version = $(eval export PKGV_$(PARENT_PK) = $(shell cd $(DIR_$(PARENT_PK)) && $(git_version)))

URLDIV1=ftp://mirrors.kernel.org/fedora/core/6/i386/os/Fedora/RPMS
URL4=ftp://ftp.stlinux.com/pub/stlinux/2.4/STLinux/sh4
URL4U=ftp://ftp.stlinux.com/pub/stlinux/2.4/updates/RPMS/sh4

URL4S=ftp://ftp.stlinux.com/pub/stlinux/2.4/SRPMS
URL4SU=ftp://ftp.stlinux.com/pub/stlinux/2.4/updates/SRPMS

$(archivedir)/bash-3.1-16.1.i386.rpm:
	[ ! -f $(archivedir)/$(notdir $@) ] && \
	(cd $(archivedir) && $(WGET) $(URLDIV1)/$(notdir $@)) || true
$(archivedir)/stlinux24-sh4-%.sh4.rpm:
	[ ! -f $(archivedir)/$(notdir $@) ] && \
	(cd $(archivedir) && $(WGET) $(URL4)/$(notdir $@) || $(WGET) $(URL4U)/$(notdir $@)) || true
$(archivedir)/stlinux24-host-%.src.rpm:
	[ ! -f $(archivedir)/$(notdir $@) ] && \
	(cd $(archivedir) && $(WGET) $(URL4S)/$(notdir $@) || $(WGET) $(URL4SU)/$(notdir $@)) || true
$(archivedir)/stlinux24-cross-%.src.rpm:
	[ ! -f $(archivedir)/$(notdir $@) ] && \
	(cd $(archivedir) && $(WGET) $(URL4S)/$(notdir $@) || $(WGET) $(URL4SU)/$(notdir $@)) || true
$(archivedir)/stlinux24-target-%.src.rpm:
	[ ! -f $(archivedir)/$@ ] && \
	(cd $(archivedir) && $(WGET) $(URL4S)/$(notdir $@) || $(WGET) $(URL4SU)/$(notdir $@)) || true
$(hostappsdir)/config.status: bootstrap
	cd $(hostappsdir); \
	./autogen.sh; \
	./configure --prefix=$(hostprefix)

hostapps: $(hostappsdir)/config.status
	$(MAKE) -C $(hostappsdir)
#	touch $@

#
# MKCRAMFS
#
BEGIN[[
cramfs
  1.1
  {PN}-{PV}
  extract:http://heanet.dl.sourceforge.net/sourceforge/{PN}/{PN}-{PV}.tar.gz
  install:mk{PN}:HOST/bin
;
]]END

mkcramfs: @MKCRAMFS@

$(hostprefix)/bin/mkcramfs: $(DEPENDS_cramfs)
	$(PREPARE_cramfs)
	cd $(DIR_cramfs); \
		$(MAKE) mkcramfs; \
		$(INSTALL_cramfs)
#	$(DISTCLEANUP_cramfs)

#
# MKSQUASHFS with LZMA support
#
BEGIN[[
squashfs
  3.0
  mk{PN}
  pdircreate:mk{PN}
  extract:http://heanet.dl.sourceforge.net/sourceforge/sevenzip/lzma442.tar.bz2
  patch:file://lzma_zlib-stream.diff
  extract:http://heanet.dl.sourceforge.net/sourceforge/{PN}/{PN}{PV}.tar.gz
  patch:file://mk{PN}_lzma.diff
;
squashfs
  4.0
  mk{PN}
  pdircreate:mk{PN}
  extract:http://heanet.dl.sourceforge.net/sourceforge/sevenzip/lzma465.tar.bz2
  extract:http://heanet.dl.sourceforge.net/sourceforge/{PN}/{PN}{PV}.tar.gz
  patch:file://{PN}-tools-{PV}-lzma.patch
;
]]END

MKSQUASHFS = $(hostprefix)/bin/mksquashfs
mksquashfs: $(MKSQUASHFS)

$(hostprefix)/bin/mksquashfs: $(DEPENDS_squashfs)
	rm -rf $(DIR_squashfs)
	mkdir -p $(DIR_squashfs)
	cd $(DIR_squashfs); \
	bunzip2 -cd $(archivedir)/lzma465.tar.bz2 | TAPE=- tar -x; \
	gunzip -cd $(archivedir)/squashfs4.0.tar.gz | TAPE=- tar -x; \
	cd squashfs4.0/squashfs-tools; patch -p1 < $(buildprefix)/Patches/squashfs-tools-4.0-lzma.patch
	$(MAKE) -C $(DIR_squashfs)/squashfs4.0/squashfs-tools
	$(INSTALL) -d $(@D)
	$(INSTALL) -m755 $(DIR_squashfs)/squashfs4.0/squashfs-tools/mksquashfs $@
	$(INSTALL) -m755 $(DIR_squashfs)/squashfs4.0/squashfs-tools/unsquashfs $(@D)
#	rm -rf $(DIR_squashfs)

#
# IPKG-UTILS
#
BEGIN[[
ipkg_utils
  050831
  {PN}-{PV}
  extract:ftp://ftp.gwdg.de/linux/handhelds/packages/{PN}/{PN}-{PV}.tar.gz
  patch:file://{PN}.diff
  make:install
;
]]END

IPKG_BUILD_BIN = $(crossprefix)/bin/ipkg-build

ipkg-utils: $(IPKG_BUILD_BIN)

$(crossprefix)/bin/ipkg-build: filesystem $(DEPENDS_ipkg_utils) | $(ipkprefix)
	$(PREPARE_ipkg_utils)
	cd $(DIR_ipkg_utils); \
		$(MAKE) all PREFIX=$(crossprefix); \
		$(MAKE) install PREFIX=$(crossprefix)
	$(DISTCLEANUP_ipkg-utils)
	touch $@

#
# OPKG-HOST
#
BEGIN[[
opkg_host
  0.1.8
  {PN}
  dirextract:http://opkg.googlecode.com/files/opkg-{PV}.tar.gz
;
]]END

OPKG_BIN = $(crossprefix)/bin/opkg
OPKG_CONF = $(crossprefix)/etc/opkg.conf
OPKG_CONFCDK = $(crossprefix)/etc/opkg-cdk.conf

opkg-host: $(OPKG_BIN) $(ipkcdk) $(ipkprefix) $(ipkextras)

$(crossprefix)/bin/opkg: $(DEPENDS_opkg_host)
	$(PREPARE_opkg_host)
	cd $(DIR_opkg_host)/opkg-$(VERSION_opkg_host); \
		./configure \
			--prefix=$(crossprefix); \
		$(MAKE); \
		$(MAKE) install; \
	$(LN_SF) opkg-cl $@
	install -d $(targetprefix)/usr/lib/opkg
	install -d $(prefix)/pkgroot/usr/lib/opkg
	echo "dest root /" >$(OPKG_CONF)
	( echo "lists_dir ext /usr/lib/opkg"; \
	  echo "arch sh4 10"; \
	  echo "arch all 1"; \
	  echo "src/gz cross file://$(ipkprefix)" ) >>$(OPKG_CONF)
	echo "dest cdkroot /" >$(OPKG_CONFCDK)
	( echo "lists_dir ext /usr/lib/opkg"; \
	  echo "arch sh4 10"; \
	  echo "arch all 1"; \
	  echo "src/gz cross file://$(ipkcdk)" ) >>$(OPKG_CONFCDK)
	  touch $@

#
# PYTHON-HOST
#
BEGIN[[
ifdef ENABLE_PY273
host_python
  2.7.3
  {PN}-{PV}
  extract:http://www.python.org/ftp/python/{PV}/Python-{PV}.tar.bz2
  pmove:Python-{PV}:{PN}-{PV}
  patch:file://python_{PV}.diff
  patch:file://python_{PV}-ctypes-libffi-fix-configure.diff
  patch:file://python_{PV}-pgettext.diff
  patch:file://python_{PV}-build-module-zlib.patch
;
endif
ifdef ENABLE_PY276
host_python
  2.7.6
  {PN}-{PV}
  extract:http://www.python.org/ftp/python/{PV}/Python-{PV}.tar.xz
  pmove:Python-{PV}:{PN}-{PV}
  patch:file://python-{PV}/python_{PV}.diff
  patch:file://python-{PV}/python-{PV}-pgettext.diff
;
endif
ifdef ENABLE_PY332
host_python
  3.3.2
  {PN}-{PV}
  extract:http://www.python.org/ftp/python/{PV}/Python-{PV}.tar.bz2
  pmove:Python-{PV}:{PN}-{PV}
  patch:file://python-{PV}/python_{PV}.diff
  patch:file://python-{PV}/python-{PV}-pgettext.diff
  patch:file://python-{PV}/12-distutils-prefix-is-inside-staging-area.patch
  patch:file://python-{PV}/080-distutils-dont_adjust_files.patch
  patch:file://python-{PV}/130-readline-setup.patch
  patch:file://python-{PV}/150-fix-setupterm.patch
  patch:file://python-{PV}/python-3.3-multilib.patch
  patch:file://python-{PV}/03-fix-tkinter-detection.patch
  patch:file://python-{PV}/avoid_warning_about_tkinter.patch
  patch:file://python-{PV}/06-ctypes-libffi-fix-configure.patch
  patch:file://python-{PV}/shutil-follow-symlink-fix.patch
  patch:file://python-{PV}/sysroot-include-headers.patch
;
endif
]]END

python := $(hostprefix)/bin/python$(PYTHON_VERSION)

$(DEPDIR)/host_python: $(DEPENDS_host_python)
	$(PREPARE_host_python); \
	( cd $(DIR_host_python); \
		rm -rf config.cache; \
		autoconf; \
		CONFIG_SITE= \
		OPT="$(HOST_CFLAGS)" \
		./configure \
			--without-cxx-main \
			--with-threads; \
		$(MAKE) python Parser/pgen; \
		mv python ./hostpython; \
		mv Parser/pgen ./hostpgen; \
		\
		$(MAKE) distclean; \
		./configure \
			--prefix=$(hostprefix) \
			--sysconfdir=$(hostprefix)/etc \
			--without-cxx-main \
			--with-threads; \
		$(MAKE) \
			TARGET_OS=$(build) \
			PYTHON_MODULES_INCLUDE="$(hostprefix)/include" \
			PYTHON_MODULES_LIB="$(hostprefix)/lib" \
			HOSTPYTHON=./hostpython \
			HOSTPGEN=./hostpgen \
			all install; \
		cp ./hostpgen $(hostprefix)/bin/pgen ); \
	$(DISTCLEANUP_host_python)
	touch $@
#
# U-BOOT
#
HOST_U_BOOT := host-u-boot
HOST_U_BOOT_VERSION := sh4-1.3.1_stm24_0057-57
HOST_U_BOOT_RAWVERSION := $(HOST_U_BOOT_VERSION)
HOST_U_BOOT_DIR := u-boot/u-boot-sh4-$(word 2, $(subst -, ,$(HOST_U_BOOT_VERSION)))
HOST_U_BOOT_SPEC := stm-$(HOST_U_BOOT).spec
HOST_U_BOOT_SPEC_PATCH := $(HOST_U_BOOT_SPEC).diff
HOST_U_BOOT_PATCHES := stm-$(HOST_U_BOOT)-lzma_stm24.patch

HOST_U_BOOT_RPM := RPMS/noarch/$(STLINUX)-$(HOST_U_BOOT)-source-$(HOST_U_BOOT_VERSION).noarch.rpm

$(HOST_U_BOOT_RPM): \
		$(if $(HOST_U_BOOT_SPEC_PATCH),Patches/$(HOST_U_BOOT_SPEC_PATCH)) \
		$(if $(HOST_U_BOOT_PATCHES),$(HOST_U_BOOT_PATCHES:%=Patches/%)) \
		$(archivedir)/$(STLINUX)-$(HOST_U_BOOT)-source-$(HOST_U_BOOT_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_U_BOOT_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_U_BOOT_SPEC) < $(buildprefix)/Patches/$(HOST_U_BOOT_SPEC_PATCH) ) &&) \
	$(if $(HOST_U_BOOT_PATCHES),cp $(HOST_U_BOOT_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_U_BOOT_SPEC)

$(DEPDIR)/u-boot-utils.do_prepare: $(HOST_U_BOOT_RPM)
	@rpm $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

### TO be fixed
$(DEPDIR)/u-boot-utils.do_compile: bootstrap $(DEPDIR)/u-boot-utils.do_prepare
#	cd $(HOST_U_BOOT_DIR) && \
#		$(MAKE) -C tools/env TOPDIR=$(buildprefix)/$(HOST_U_BOOT_DIR) ARCH=sh4 CROSS_COMPILE=$(target)- clean TARGETS=fw_printenv TARGETDIR=$(targetprefix) && \
#		$(MAKE) -C tools/env TOPDIR=$(buildprefix)/$(HOST_U_BOOT_DIR) ARCH=sh4 CROSS_COMPILE=$(target)- all TARGETS=fw_printenv TARGETDIR=$(targetprefix)
	touch $@

$(DEPDIR)/u-boot-utils: \
$(DEPDIR)/%u-boot-utils: $(DEPDIR)/u-boot-utils.do_compile
#	$(INSTALL) -d $(prefix)/$*cdkroot/{etc,usr/sbin} && \
#	cd $(HOST_U_BOOT_DIR) && \
#		$(INSTALL) -m 755 tools/env/fw_printenv $(prefix)/$*cdkroot/usr/sbin && \
#		$(LN_SF) fw_printenv $(prefix)/$*cdkroot/usr/sbin/fw_setenv
#	$(INSTALL) -m 644 $(buildprefix)/root/etc/fw_env.config $(prefix)/$*cdkroot/etc/
	[ "x$*" = "x" ] && touch $@ || true


$(DEPDIR)/u-boot-utils: $(DEPDIR)/u-boot-utils.do_compile


#stlinux20-host-u-boot ftp://ftp.stlinux.com/pub/stlinux/2.0/ST_Linux_2.0/SRPM_Distribution/sh4-SRPMS-updates/stlinux20-host-u-boot-sh4_stb7100ref_27-2.0-14.src.rpm
HOST_U_BOOT_SH4_STB7100REF_27 := host-u-boot-sh4_stb7100ref_27
RPMS/sh4/stlinux20-$(HOST_U_BOOT_SH4_STB7100REF_27)-2.0-14.sh4.rpm: $(archivedir)/stlinux20-$(HOST_U_BOOT_SH4_STB7100REF_27)-2.0-14.src.rpm
	rpm $(DRPM) --nosignature -Uhv $< && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/stm-$(HOST_U_BOOT_SH4_STB7100REF_27).spec
$(HOST_U_BOOT_SH4_STB7100REF_27): RPMS/sh4/stlinux20-$(HOST_U_BOOT_SH4_STB7100REF_27)-2.0-14.sh4.rpm
	@rpm $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch .deps/$(notdir $@)

#
# HOST-U-BOOT-TOOLS
#
HOST_U_BOOT_TOOLS := host-u-boot-tools
HOST_U_BOOT_TOOLS_VERSION := 1.3.1_stm24-9
HOST_U_BOOT_TOOLS_SPEC := stm-$(HOST_U_BOOT_TOOLS).spec
HOST_U_BOOT_TOOLS_SPEC_PATCH :=
HOST_U_BOOT_TOOLS_PATCHES :=

HOST_U_BOOT_TOOLS_RPM := RPMS/sh4/$(STLINUX)-$(HOST_U_BOOT_TOOLS)-$(HOST_U_BOOT_TOOLS_VERSION).sh4.rpm

$(HOST_U_BOOT_TOOLS_RPM): \
		$(if $(HOST_U_BOOT_TOOLS_SPEC_PATCH),Patches/$(HOST_U_BOOT_TOOLS_SPEC_PATCH)) \
		$(if $(HOST_U_BOOT_TOOLS_PATCHES),$(HOST_U_BOOT_TOOLS_PATCHES:%=Patches/%)) \
		$(archivedir)/$(STLINUX)-$(HOST_U_BOOT_TOOLS)-$(HOST_U_BOOT_TOOLS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_U_BOOT_TOOLS_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_U_BOOT_TOOLS_SPEC) < $(buildprefix)/Patches/$(HOST_U_BOOT_TOOLS_SPEC_PATCH) ) &&) \
	$(if $(HOST_U_BOOT_TOOLS_PATCHES),cp $(HOST_U_BOOT_TOOLS_PATCHES:%=Patches/%) SOURCES/ &&) \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_U_BOOT_TOOLS_SPEC)

$(DEPDIR)/$(HOST_U_BOOT_TOOLS): u-boot-utils.do_prepare $(HOST_U_BOOT_TOOLS_RPM) | bootstrap-cross
	@rpm $(DRPM) --ignorearch --nodeps -Uhv $(lastword $^)
	touch $@
############ Patches Kernel 24 ###############

ifdef ENABLE_P0211
PATCH_STR=_0211
endif

ifdef ENABLE_P0215
PATCH_STR=_0215
endif

ifdef ENABLE_P0308
PATCH_STR=_0308
endif

STM24_DVB_PATCH = linux-sh4-linuxdvb_stm24$(PATCH_STR).patch

COMMONPATCHES_24 = \
		$(STM24_DVB_PATCH) \
		linux-sh4-sound_stm24$(PATCH_STR).patch \
		linux-sh4-time_stm24$(PATCH_STR).patch \
		linux-sh4-init_mm_stm24$(PATCH_STR).patch \
		linux-sh4-copro_stm24$(PATCH_STR).patch \
		linux-sh4-strcpy_stm24$(PATCH_STR).patch \
		linux-squashfs-lzma_stm24$(PATCH_STR).patch \
		linux-sh4-ext23_as_ext4_stm24$(PATCH_STR).patch \
		bpa2_procfs_stm24$(PATCH_STR).patch \
		linux-ftdi_sio.c_stm24$(PATCH_STR).patch \
		linux-sh4-lzma-fix_stm24$(PATCH_STR).patch \
		linux-tune_stm24.patch \
		linux-sh4-mmap_stm24.patch \
		$(if $(P0211)$(P0215),linux-sh4-permit_gcc_command_line_sections_stm24.patch) \
		$(if $(P0308),linux-sh4-permit_gcc_command_line_sections_stm24$(PATCH_STR).patch) \
		$(if $(P0211)$(P0215),linux-sh4-remove_pcm_reader_stm24.patch) \
		$(if $(P0308),linux-sh4-remove_pcm_reader_stm24$(PATCH_STR).patch) \
		$(if $(P0211)$(P0215),patch_swap_notify_core_support.diff)

HL101_PATCHES_24 = $(COMMONPATCHES_24) \
		linux-sh4-hl101_setup_stm24$(PATCH_STR).patch \
		$(if $(P0211)$(P0215),linux-usbwait123_stm24.patch) \
		$(if $(P0308),linux-usbwait123_stm24$(PATCH_STR).patch) \
		linux-sh4-stmmac_stm24$(PATCH_STR).patch \
		linux-sh4-i2c-st40-pio_stm24$(PATCH_STR).patch \
		linux-sh4-hl101_i2c_st40_stm24.patch \
		$(if $(P0215)$(P0308),gpio$(PATCH_STR).patch)

KERNELPATCHES_24 =  \
		$(if $(HL101),$(HL101_PATCHES_24))

############ Patches Kernel 24 End ###############
#
# KERNEL-HEADERS
#
ifdef ENABLE_P0308
$(DEPDIR)/kernel-headers: linux-kernel.do_prepare
	cd $(KERNEL_DIR); \
		$(INSTALL) -d $(targetprefix)/usr/include; \
		cp -a include/linux $(targetprefix)/usr/include; \
		cp -ar include/asm-generic $(targetprefix)/usr/include; \
		cp -ar arch/sh/include/asm $(targetprefix)/usr/include; \
		mkdir -p $(buildprefix)/$(KERNEL_DIR)-Header; \
		$(MAKE) -C $(KERNEL_DIR_FULL) ARCH=sh headers_install INSTALL_HDR_PATH=$(buildprefix)/$(KERNEL_DIR)-Header; \
		cp -r --remove-destination  $(buildprefix)/$(KERNEL_DIR)-Header/include/* $(targetprefix)/usr/include/; \
		cp -a $(KERNEL_DIR_FULL)/arch/sh/include/cpu-common/cpu $(targetprefix)/usr/include/; \
		cp -a $(KERNEL_DIR_FULL)/arch/sh/include/cpu-sh4/cpu $(targetprefix)/usr/include/; \
		cd $(targetprefix)/usr/include; \
		ln -sf $(targetprefix)/usr/include/asm-generic/* $(targetprefix)/usr/include/asm/; \
		cp --remove-destination $(buildprefix)/$(KERNEL_DIR)-Header/include/asm/*  $(targetprefix)/usr/include/asm/; \
		patch -p0 < $(buildprefix)/Patches/linux-headers-308.diff; \
		cd $(buildprefix)
	touch $@

else
$(DEPDIR)/kernel-headers: linux-kernel.do_prepare
	cd $(KERNEL_DIR); \
		$(INSTALL) -d $(targetprefix)/usr/include; \
		cp -a include/linux $(targetprefix)/usr/include; \
		cp -a include/asm-sh $(targetprefix)/usr/include/asm; \
		cp -a include/asm-generic $(targetprefix)/usr/include; \
		cp -a include/mtd $(targetprefix)/usr/include
	touch $@

endif

KERNELHEADERS := linux-kernel-headers
ifdef ENABLE_P0211
KERNELHEADERS_VERSION := 2.6.32.46-48
else
ifdef ENABLE_P0215
KERNELHEADERS_VERSION := 2.6.32.46-48
else
ifdef ENABLE_P0308
KERNELHEADERS_VERSION := 2.6.32.46-48
endif
endif
endif

KERNELHEADERS_SPEC := stm-target-kernel-headers-kbuild.spec
KERNELHEADERS_SPEC_PATCH :=
KERNELHEADERS_PATCHES :=
KERNELHEADERS_RPM := RPMS/noarch/$(STLINUX)-sh4-$(KERNELHEADERS)-$(KERNELHEADERS_VERSION).noarch.rpm

ifdef ENABLE_P0308
$(KERNELHEADERS_RPM): \
		$(if $(KERNELHEADERS_SPEC_PATCH),Patches/$(KERNELHEADERS_SPEC_PATCH)) \
		$(if $(KERNELHEADERS_PATCHES),$(KERNELHEADERS_PATCHES:%=Patches/%)) \
		$(archivedir)/$(STLINUX)-target-$(KERNELHEADERS)-$(KERNELHEADERS_VERSION).src.rpm \
		| linux-kernel.do_prepare
	$(if $(KERNELHEADERS_SPEC_PATCH),( cd SPECS && patch -p1 $(KERNELHEADERS_SPEC) < $(buildprefix)/Patches/$(KERNELHEADERS_SPEC_PATCH) ) &&) \
	$(if $(KERNELHEADERS_PATCHES),cp $(KERNELHEADERS_PATCHES:%=Patches/%) SOURCES/ &&) \

else
$(KERNELHEADERS_RPM): \
		$(if $(KERNELHEADERS_SPEC_PATCH),Patches/$(KERNELHEADERS_SPEC_PATCH)) \
		$(if $(KERNELHEADERS_PATCHES),$(KERNELHEADERS_PATCHES:%=Patches/%)) \
		$(archivedir)/$(STLINUX)-target-$(KERNELHEADERS)-$(KERNELHEADERS_VERSION).src.rpm \
		| linux-kernel.do_prepare
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(KERNELHEADERS_SPEC_PATCH),( cd SPECS && patch -p1 $(KERNELHEADERS_SPEC) < $(buildprefix)/Patches/$(KERNELHEADERS_SPEC_PATCH) ) &&) \
	$(if $(KERNELHEADERS_PATCHES),cp $(KERNELHEADERS_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(KERNELHEADERS_SPEC)

endif

ifdef ENABLE_P0308
$(DEPDIR)/$(KERNELHEADERS): $(KERNELHEADERS_RPM)
	echo no extra Kernel-Header-File
	touch $@

else
$(DEPDIR)/$(KERNELHEADERS): $(KERNELHEADERS_RPM)
	rpm $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

endif

#
# HOST-KERNEL
#
# IMPORTANT: it is expected that only one define is set
MODNAME = $(HL101)

ifdef DEBUG
DEBUG_STR=.debug
else
DEBUG_STR=
endif

HOST_KERNEL := host-kernel

ifdef ENABLE_P0211
HOST_KERNEL_VERSION = 2.6.32.59$(KERNELSTMLABEL)-$(KERNELLABEL)
else
ifdef ENABLE_P0215
HOST_KERNEL_VERSION = 2.6.32.61$(KERNELSTMLABEL)-$(KERNELLABEL)
else
ifdef ENABLE_P0308
HOST_KERNEL_VERSION := 3.4.58$(KERNELSTMLABEL)-$(KERNELLABEL)
KERNEL_DIR_FULL = $(buildprefix)/linux-sh4-3.4.58-0308
KERNEL_DIR = linux-sh4-3.4.58-0308
KERNEL_VER = P03xx
endif
endif
endif

HOST_KERNEL_SPEC = stm-$(HOST_KERNEL)-sh4.spec
HOST_KERNEL_SPEC_PATCH =
HOST_KERNEL_PATCHES = $(KERNELPATCHES_24)
HOST_KERNEL_CONFIG = linux-sh4-$(subst _stm24_,-,$(KERNELVERSION))_$(MODNAME).config$(DEBUG_STR)
HOST_KERNEL_SRC_RPM = $(STLINUX)-$(HOST_KERNEL)-source-sh4-$(HOST_KERNEL_VERSION).src.rpm
HOST_KERNEL_RPM = RPMS/noarch/$(STLINUX)-$(HOST_KERNEL)-source-sh4-$(HOST_KERNEL_VERSION).noarch.rpm
GIT_VER_P0308 = commit f6f54444a01c2d071eddde6f8a81bb6e3ea0ac6b

$(HOST_KERNEL_RPM): \
		$(if $(HOST_KERNEL_SPEC_PATCH),Patches/$(HOST_KERNEL_SPEC_PATCH)) \
		$(archivedir)/$(HOST_KERNEL_SRC_RPM)
	rpm $(DRPM) --nosignature --nodeps -Uhv $(lastword $^); \
	$(if $(HOST_KERNEL_SPEC_PATCH),( cd SPECS; patch -p1 $(HOST_KERNEL_SPEC) < $(buildprefix)/Patches/$(HOST_KERNEL_SPEC_PATCH) ) &&) \
	rpmbuild $(DRPMBUILD) -ba -v --clean --target=sh4-linux SPECS/$(HOST_KERNEL_SPEC)

ifdef ENABLE_P0308
$(DEPDIR)/linux-kernel.do_prepare: \
		$(if $(HOST_KERNEL_PATCHES),$(HOST_KERNEL_PATCHES:%=Patches/%))
	if [ -d $(archivedir)/linux-sh4-3.4.58-0308 ]; then echo GIT already exists; \
	else git clone -b stmicro git://git.stlinux.com/stm/linux-stm.git $(archivedir)/linux-sh4-3.4.58-0308; fi; \
	cd $(archivedir)/linux-sh4-3.4.58-0308; \
	GIT_VER=`git show | grep commit`; \
	if [ "$$GIT_VER" == "$(GIT_VER_P0308)" ]; then echo GIT-Version already 308-rc3; \
	else git checkout stlinux24_0308-rc3; fi; \
	echo 'Copy Files .... (This can take a while)'; \
	rm -rf $(buildprefix)/$(KERNEL_DIR); \
	rm -rf $(buildprefix)/linux{,-sh4}; \
	cp -Prf $(archivedir)/linux-sh4-3.4.58-0308 $(buildprefix)/; \
	cd $(buildprefix); \
	ln -sf linux-sh4-3.4.58-0308 linux-sh4; \
	cd $(buildprefix)/linux-sh4/; \
	patch -p0 < $(buildprefix)/Patches/linux-sh4-3.4.58-0308_hl101.patch; \
	patch -p0 < $(buildprefix)/Patches/linux-sh4-stx7100_mb442-p308.diff; \
	echo ln -sf $(buildprefix)/include/generated/autoconf.h $(buildprefix)/include/linux/autoconf.h; \
	$(if $(HOST_KERNEL_PATCHES),cd $(KERNEL_DIR_FULL) && cat $(HOST_KERNEL_PATCHES:%=$(buildprefix)/Patches/%) | patch -p1); \
	$(INSTALL) -m644 $(buildprefix)/Patches/$(HOST_KERNEL_CONFIG) $(KERNEL_DIR_FULL)/.config; \
	rm $(KERNEL_DIR_FULL)/localversion*; \
	echo "$(KERNELSTMLABEL)" > $(KERNEL_DIR_FULL)/localversion-stm; \
	if [ `grep -c "CONFIG_BPA2_DIRECTFBOPTIMIZED" $(KERNEL_DIR_FULL)/.config` -eq 0 ]; then echo "# CONFIG_BPA2_DIRECTFBOPTIMIZED is not set" >> $(KERNEL_DIR_FULL)/.config; fi; \
	$(MAKE) -C $(KERNEL_DIR_FULL) ARCH=sh oldconfig; \
	$(MAKE) -C $(KERNEL_DIR_FULL) ARCH=sh include/linux/version.h; \
	rm $(KERNEL_DIR_FULL)/.config; \
	cd $(buildprefix)
	touch $@

else
$(DEPDIR)/linux-kernel.do_prepare: \
		$(if $(HOST_KERNEL_PATCHES),$(HOST_KERNEL_PATCHES:%=Patches/%)) \
		$(HOST_KERNEL_RPM)
	rpm $(DRPM) -ev $(HOST_KERNEL_SRC_RPM:%.src.rpm=%) || true
	rm -rf $(KERNEL_DIR)
	rm -rf linux{,-sh4}
	rpm $(DRPM) --ignorearch --nodeps -Uhv $(lastword $^)
	$(if $(HOST_KERNEL_PATCHES),cd $(KERNEL_DIR); cat $(HOST_KERNEL_PATCHES:%=$(buildprefix)/Patches/%) | patch -p1)
	$(INSTALL) -m644 Patches/$(HOST_KERNEL_CONFIG) $(KERNEL_DIR)/.config
	rm $(KERNEL_DIR)/localversion*
	echo "$(KERNELSTMLABEL)" > $(KERNEL_DIR)/localversion-stm
	if [ `grep -c "CONFIG_BPA2_DIRECTFBOPTIMIZED" $(KERNEL_DIR)/.config` -eq 0 ]; then echo "# CONFIG_BPA2_DIRECTFBOPTIMIZED is not set" >> $(KERNEL_DIR)/.config; fi
	$(MAKE) -C $(KERNEL_DIR) ARCH=sh oldconfig
	$(MAKE) -C $(KERNEL_DIR) ARCH=sh include/asm
	$(MAKE) -C $(KERNEL_DIR) ARCH=sh include/linux/version.h
	rm $(KERNEL_DIR)/.config
	touch $@

endif

ifdef ENABLE_GRAPHICFWDIRECTFB
GRAPHICFWDIRECTFB_SED_CONF=-i s"/^\# CONFIG_BPA2_DIRECTFBOPTIMIZED is not set/CONFIG_BPA2_DIRECTFBOPTIMIZED=y/"
else
GRAPHICFWDIRECTFB_SED_CONF=-i s"/^CONFIG_BPA2_DIRECTFBOPTIMIZED=y/\# CONFIG_BPA2_DIRECTFBOPTIMIZED is not set/"
endif

#dagobert: without stboard ->not sure if we need this
$(DEPDIR)/linux-kernel.do_compile: \
		bootstrap-cross \
		linux-kernel.do_prepare \
		Patches/$(HOST_KERNEL_CONFIG) \
		| $(HOST_U_BOOT_TOOLS)
	-rm $(DEPDIR)/linux-kernel*.do_compile
	cd $(KERNEL_DIR); \
		export PATH=$(hostprefix)/bin:$(PATH); \
		$(MAKE) ARCH=sh CROSS_COMPILE=$(target)- mrproper; \
		/usr/bin/m4 $(buildprefix)/Patches/$(HOST_KERNEL_CONFIG) > .config; \
	if [ `grep -c "CONFIG_BPA2_DIRECTFBOPTIMIZED" .config` -eq 0 ]; then echo "# CONFIG_BPA2_DIRECTFBOPTIMIZED is not set" >> .config; fi; \
		sed $(GRAPHICFWDIRECTFB_SED_CONF) .config; \
		$(MAKE) ARCH=sh CROSS_COMPILE=$(target)- uImage modules
	touch $@

NFS_FLASH_SED_CONF=$(foreach param,XCONFIG_NFS_FS XCONFIG_LOCKD XCONFIG_SUNRPC,-e s"/^.*$(param)[= ].*/$(param)=m/")

ifdef ENABLE_XFS
XFS_SED_CONF=$(foreach param,CONFIG_XFS_FS,-e s"/^.*$(param)[= ].*/$(param)=m/")
else
XFS_SED_CONF=-e ""
endif

ifdef ENABLE_NFSSERVER
#NFSSERVER_SED_CONF=$(foreach param,CONFIG_NFSD CONFIG_NFSD_V3 CONFIG_NFSD_TCP,-e s"/^.*$(param)[= ].*/$(param)=y/")
NFSSERVER_SED_CONF=$(foreach param,CONFIG_NFSD,-e s"/^.*$(param)[= ].*/$(param)=m\nCONFIG_NFSD_V3=y\n\# CONFIG_NFSD_V3_ACL is not set\n\# CONFIG_NFSD_V4 is not set\nCONFIG_NFSD_TCP=y/")
else
NFSSERVER_SED_CONF=-e ""
endif

ifdef ENABLE_NTFS
NTFS_SED_CONF=$(foreach param,CONFIG_NTFS_FS,-e s"/^.*$(param)[= ].*/$(param)=m/")
else
NTFS_SED_CONF=-e ""
endif

$(DEPDIR)/linux-kernel.cramfs.do_compile $(DEPDIR)/linux-kernel.squashfs.do_compile \
$(DEPDIR)/linux-kernel.focramfs.do_compile $(DEPDIR)/linux-kernel.fosquashfs.do_compile:
$(DEPDIR)/linux-kernel.%.do_compile: \
		bootstrap-cross \
		linux-kernel.do_prepare \
		Patches/linux-sh4-$(KERNELVERSION).stboards.c.m4 \
		Patches/$(HOST_KERNEL_CONFIG) \
		| $(DEPDIR)/$(HOST_U_BOOT_TOOLS)
	-rm $(DEPDIR)/linux-kernel*.do_compile
	cd $(KERNEL_DIR); \
		export PATH=$(hostprefix)/bin:$(PATH); \
		$(MAKE) ARCH=sh CROSS_COMPILE=$(target)- mrproper; \
		/usr/bin/m4 -Drootfs=$* --define=rootsize=$(ROOT_PARTITION_SIZE) --define=datasize=$(DATA_PARTITION_SIZE) ../$(word 3,$^) \
					> drivers/mtd/maps/stboards.c; \
		/usr/bin/m4 --define=btldrdef=$* $(buildprefix)/Patches/$(HOST_KERNEL_CONFIG) \
					> .config; \
		sed $(NFS_FLASH_SED_CONF) -i .config; \
		sed $(XFS_SED_CONF) $(NFSSERVER_SED_CONF) $(NTFS_SED_CONF) -i .config; \
		$(MAKE) ARCH=sh CROSS_COMPILE=$(target)- uImage modules
	touch $@

DESCRIPTION_linux_kernel = "The Linux Kernel and modules"
PKGV_linux_kernel = $(KERNELVERSION)
PKGR_linux_kernel = r4
SRC_URI_linux_kernel = stlinux.com
FILES_linux_kernel = \
/lib/modules/$(KERNELVERSION)/kernel \
/lib/modules/$(KERNELVERSION)/modules.* \
/boot/uImage

define postinst_linux_kernel
depmod
endef

$(DEPDIR)/linux-kernel: bootstrap $(DEPDIR)/linux-kernel.do_compile
	$(start_build)
	@$(INSTALL) -d $(PKDIR)/boot && \
	$(INSTALL) -d $(prefix)/$*$(notdir $(bootprefix)) && \
	$(INSTALL) -m644 $(KERNEL_DIR)/arch/sh/boot/uImage $(prefix)/$*$(notdir $(bootprefix))/vmlinux.ub && \
	$(INSTALL) -m644 $(KERNEL_DIR)/vmlinux $(PKDIR)/boot/vmlinux-sh4-$(KERNELVERSION) && \
	$(INSTALL) -m644 $(KERNEL_DIR)/System.map $(PKDIR)/boot/System.map-sh4-$(KERNELVERSION) && \
	$(INSTALL) -m644 $(KERNEL_DIR)/COPYING $(PKDIR)/boot/LICENSE
	cp $(KERNEL_DIR)/arch/sh/boot/uImage $(PKDIR)/boot/
	echo -e "ST Linux Distribution - Binary Kernel\n \
	CPU: sh4\n \
	PLATFORM: stb7109ref\n \
	KERNEL VERSION: $(KERNELVERSION)\n" > $(PKDIR)/README.ST && \
	$(MAKE) -C $(KERNEL_DIR) ARCH=sh INSTALL_MOD_PATH=$(PKDIR) modules_install && \
	rm $(PKDIR)/lib/modules/$(KERNELVERSION)/build || true && \
	rm $(PKDIR)/lib/modules/$(KERNELVERSION)/source || true
	$(tocdk_build)
	$(toflash_build)
	touch $@

linux-kernel-distclean: $(KERNELHEADERS)-distclean

BEGIN[[
driver
  git
  {PN}-{PV}
  plink:$(driverdir):{PN}-{PV}
;
]]END
DESCRIPTION_driver = Drivers for stm box
PKGR_driver = r3
#PACKAGES_driver = driver_pti driver
FILES_driver = /lib/modules/$(KERNELVERSION)/extra
SRC_URI_driver = "http://gitorious.org/~schpuntik/open-duckbox-project-sh4/tdt-amiko"
#DESCRIPTION_driver_pti = open source st-pti kernel module
#RCONFLICTS_driver_pti = driver_ptinp
#FILES_driver_pti = /lib/modules/$(KERNELVERSION)/extra/pti
#EXTRA_driver = driver_pti

define postinst_driver
#!/bin/sh
depmod
endef

$(DEPDIR)/driver: $(DEPENDS_driver) $(driverdir)/Makefile glibc-dev linux-kernel.do_compile
	$(PREPARE_driver)
#	$(MAKE) -C $(KERNEL_DIR) $(MAKE_OPTS) ARCH=sh modules_prepare
	$(start_build)
	$(get_git_version)
	$(eval export PKGV_driver = $(PKGV_driver)$(KERNELSTMLABEL))
	$(if $(PLAYER191),cp $(driverdir)/stgfb/stmfb/linux/drivers/video/stmfb.h $(targetprefix)/usr/include/linux)
	cp $(driverdir)/player2/linux/include/linux/dvb/stm_ioctls.h $(targetprefix)/usr/include/linux/dvb
	$(LN_SF) $(driverdir)/wireless/rtl8192cu/autoconf_rtl8192c_usb_linux.h $(buildprefix)/
	$(LN_SF) $(driverdir)/wireless/rtl8188eu/autoconf_rtl8188e_usb_linux.h $(buildprefix)/
	$(if $(ENABLE_P0308),$(LN_SF) $(buildprefix)/linux-sh4/include/generated/autoconf.h $(buildprefix)/linux-sh4/include/linux/autoconf.h)
	$(MAKE) -C $(driverdir) ARCH=sh \
		CONFIG_MODULES_PATH=$(targetprefix) \
		KERNEL_LOCATION=$(buildprefix)/$(KERNEL_DIR) \
		DRIVER_TOPDIR=$(driverdir) \
		HL101=$(HL101) \
		PLAYER191=$(PLAYER191) \
		CROSS_COMPILE=$(target)-
	$(MAKE) -C $(driverdir) ARCH=sh \
		CONFIG_MODULES_PATH=$(targetprefix) \
		KERNEL_LOCATION=$(buildprefix)/$(KERNEL_DIR) \
		DRIVER_TOPDIR=$(driverdir) \
		BIN_DEST=$(PKDIR)/bin \
		INSTALL_MOD_PATH=$(PKDIR) \
		DEPMOD=$(DEPMOD) \
		HL101=$(HL101) \
		PLAYER191=$(PLAYER191) \
		install
	if [ $(KERNELVERSION) != 3.4.58_stm24_0308 ]; then \
	$(DEPMOD) -ae -b $(PKDIR) -F $(buildprefix)/$(KERNEL_DIR)/System.map -r $(KERNELVERSION); \
	else \
	$(DEPMOD) -ae -b $(PKDIR) -F $(buildprefix)/$(KERNEL_DIR)/System.map -r $(KERNELVERSION)+; \
	fi; \
	$(tocdk_build)
	$(toflash_build)
	touch $@

# overwrite make driver-distclean
define DISTCLEANUP_driver
	rm -f $(DEPDIR)/driver
	rm -f $(buildprefix)/autoconf_rtl8192c_usb_linux.h
	$(MAKE) -C $(driverdir) ARCH=sh \
		KERNEL_LOCATION=$(buildprefix)/$(KERNEL_DIR) \
		distclean
endef
define DEPSCLEANUP_driver
	rm -f $(DEPDIR)/driver
	rm -f $(buildprefix)/autoconf_rtl8192c_usb_linux.h
	$(MAKE) -C $(driverdir) ARCH=sh \
		KERNEL_LOCATION=$(buildprefix)/$(KERNEL_DIR) \
		distclean
endef

#------------------- Helper

linux-kernel.menuconfig linux-kernel.xconfig: \
linux-kernel.%:
	$(MAKE) -C $(KERNEL_DIR) ARCH=sh CROSS_COMPILE=sh4-linux- $*
	@echo
	@echo "You have to edit m a n u a l l y Patches/linux-$(KERNELVERSION).config to make changes permanent !!!"
	@echo ""
	diff $(KERNEL_DIR)/.config.old $(KERNEL_DIR)/.config
	@echo ""
#-------------------
#
# FILESYSTEM
#
$(DEPDIR)/filesystem: \
$(DEPDIR)/%filesystem: bootstrap-cross
	$(INSTALL) -d $(targetprefix)/{bin,boot,dev,dev.static,etc,lib,mnt,opt,proc,root,sbin,sys,tmp,usr,var}
	$(INSTALL) -d $(targetprefix)/etc/{default,opt}
	$(INSTALL) -d $(targetprefix)/lib/lsb
	$(INSTALL) -d $(targetprefix)/usr/{bin,include,lib,local,sbin,share,src}
	$(INSTALL) -d $(targetprefix)/usr/local/{bin,include,lib,sbin,share,src}
	$(INSTALL) -d $(targetprefix)/usr/share/{aclocal,doc,info,locale,man,misc,nls}
	$(INSTALL) -d $(targetprefix)/usr/share/man/man{1..9}
	$(INSTALL) -d $(targetprefix)/var/{backups,cache,lib,local,lock,log,mail,opt,run,spool}
#	ln -sf $(targetprefix)/lib $(targetprefix)/lib64
#	ln -sf $(targetprefix)/usr/lib $(targetprefix)/usr/lib64
	$(INSTALL) -d $(targetprefix)/var/lib/misc
	$(INSTALL) -d $(targetprefix)/var/lock/subsys
	$(INSTALL) -d $(targetprefix)/etc/{init.d,rc.d,samba}
	$(INSTALL) -d $(targetprefix)/etc/rc.d/{rc3.d,rcS.d}
	ln -s ../init.d $(targetprefix)/etc/rc.d/init.d
	$(INSTALL) -d $(targetprefix)/etc/samba/private
	$(INSTALL) -d $(targetprefix)/media
	$(INSTALL) -d $(targetprefix)/var/bin
	touch $@

#
# GLIBC
#
GLIBC := glibc
GLIBC_DEV := glibc-dev
FILES_glibc = /lib
FILES_glibc_dev = /lib /usr/lib
GLIBC_VERSION := 2.14.1-50
GLIBC_RAWVERSION := $(firstword $(subst -, ,$(GLIBC_VERSION)))
GLIBC_SPEC := stm-target-$(GLIBC).spec
GLIBC_SPEC_PATCH :=
GLIBC_PATCHES :=

GLIBC_RPM := RPMS/sh4/$(STLINUX)-sh4-$(GLIBC)-$(GLIBC_VERSION).sh4.rpm
GLIBC_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(GLIBC_DEV)-$(GLIBC_VERSION).sh4.rpm

$(GLIBC_RPM) $(GLIBC_DEV_RPM): \
		$(addprefix Patches/,$(GLIBC_SPEC_PATCH) $(GLIBC_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(GLIBC)-$(GLIBC_VERSION).src.rpm \
		| filesystem
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(GLIBC_SPEC_PATCH),( cd SPECS && patch -p1 $(GLIBC_SPEC) < $(buildprefix)/Patches/$(GLIBC_SPEC_PATCH) ) &&) \
	$(if $(GLIBC_PATCHES),cp $(addprefix Patches/,$(GLIBC_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(GLIBC_SPEC)

$(DEPDIR)/$(GLIBC): $(GLIBC_RPM) | $(DEPDIR)/filesystem
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@

$(DEPDIR)/$(GLIBC_DEV): $(DEPDIR)/$(GLIBC) $(GLIBC_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@

#
# BINUTILS
#
BINUTILS := binutils
FILES_binutils = \
usr/lib/*.so \
usr/bin/ar \
usr/bin/ld

BINUTILS_DEV := binutils-dev
BINUTILS_VERSION := 2.23.2-76
BINUTILS_SPEC := stm-target-$(BINUTILS).spec
BINUTILS_SPEC_PATCH := $(BINUTILS_SPEC).$(BINUTILS_VERSION).diff
BINUTILS_PATCHES := stm-target-$(BINUTILS).$(BINUTILS_VERSION).diff

BINUTILS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(BINUTILS)-$(BINUTILS_VERSION).sh4.rpm
BINUTILS_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(BINUTILS_DEV)-$(BINUTILS_VERSION).sh4.rpm

$(BINUTILS_RPM) $(BINUTILS_DEV_RPM): \
		$(addprefix Patches/,$(BINUTILS_SPEC_PATCH) $(BINUTILS_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(BINUTILS)-$(BINUTILS_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(BINUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(BINUTILS_SPEC) < $(buildprefix)/Patches/$(BINUTILS_SPEC_PATCH) ) &&) \
	$(if $(BINUTILS_PATCHES),cp $(addprefix Patches/,$(BINUTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(BINUTILS_SPEC)

$(DEPDIR)/$(BINUTILS): $(BINUTILS_RPM)
	@rpm $(DRPM) --ignorearch --nodeps -Uhv $< \
	$(start_build)
	$(fromrpm_build)
	touch $@

$(DEPDIR)/$(BINUTILS_DEV): $(BINUTILS_DEV_RPM)
	@rpm $(DRPM) --ignorearch --nodeps --noscripts -Uhv $<
	touch $@

#
# GMP
#
GMP := gmp
GMP_VERSION := 5.1.3-10
GMP_SPEC := stm-target-$(GMP).spec
GMP_SPEC_PATCH :=
GMP_PATCHES :=

GMP_RPM := RPMS/sh4/$(STLINUX)-sh4-$(GMP)-$(GMP_VERSION).sh4.rpm

$(GMP_RPM): \
		$(addprefix Patches/,$(GMP_SPEC_PATCH) $(GMP_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(GMP)-$(GMP_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(GMP_SPEC_PATCH),( cd SPECS && patch -p1 $(GMP_SPEC) < $(buildprefix)/Patches/$(GMP_SPEC_PATCH) ) &&) \
	$(if $(GMP_PATCHES),cp $(addprefix Patches/,$(GMP_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(GMP_SPEC)

$(DEPDIR)/$(GMP): $(GMP_RPM)
	@rpm $(DRPM) --ignorearch --nodeps -Uhv $(lastword $^) && \
	sed -i "/^libdir/s|'/usr/lib'|'$(targetprefix)/usr/lib'|" $(targetprefix)/usr/lib/libgmp.la
	sed -i "/^dependency_libs/s|-L/usr/lib -L/lib ||" $(targetprefix)/usr/lib/libgmp.la
	$(start_build)
	$(fromrpm_build)
	touch $@

#
# MPFR
#
MPFR := mpfr
MPFR_VERSION := 3.1.2-10
MPFR_SPEC := stm-target-$(MPFR).spec
MPFR_SPEC_PATCH :=
MPFR_PATCHES :=

MPFR_RPM := RPMS/sh4/$(STLINUX)-sh4-$(MPFR)-$(MPFR_VERSION).sh4.rpm

$(MPFR_RPM): \
		$(addprefix Patches/,$(MPFR_SPEC_PATCH) $(MPFR_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(MPFR)-$(MPFR_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(MPFR_SPEC_PATCH),( cd SPECS && patch -p1 $(MPFR_SPEC) < $(buildprefix)/Patches/$(MPFR_SPEC_PATCH) ) &&) \
	$(if $(MPFR_PATCHES),cp $(addprefix Patches/,$(MPFR_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(MPFR_SPEC)

$(DEPDIR)/$(MPFR): $(MPFR_RPM)
	@rpm $(DRPM) --ignorearch --nodeps -Uhv $(lastword $^) && \
	sed -i "/^libdir/s|'/usr/lib'|'$(targetprefix)/usr/lib'|" $(targetprefix)/usr/lib/libmpfr.la
	sed -i "/^dependency_libs/s|-L/usr/lib -L/lib ||" $(targetprefix)/usr/lib/libmpfr.la
	$(start_build)
	$(fromrpm_build)
	touch $@

#
# MPC
#
MPC := mpc
MPC_VERSION := 1.0.2-6
MPC_SPEC := stm-target-$(MPC).spec
MPC_SPEC_PATCH :=
MPC_PATCHES :=

MPC_RPM := RPMS/sh4/$(STLINUX)-sh4-$(MPC)-$(MPC_VERSION).sh4.rpm

$(MPC_RPM): \
		$(addprefix Patches/,$(MPC_SPEC_PATCH) $(MPC_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(MPC)-$(MPC_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(MPC_SPEC_PATCH),( cd SPECS && patch -p1 $(MPC_SPEC) < $(buildprefix)/Patches/$(MPC_SPEC_PATCH) ) &&) \
	$(if $(MPC_PATCHES),cp $(addprefix Patches/,$(MPC_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(MPC_SPEC)

$(DEPDIR)/$(MPC): $(MPC_RPM)
	@rpm $(DRPM) --ignorearch --nodeps -Uhv $(lastword $^) && \
	sed -i "/^libdir/s|'/usr/lib'|'$(targetprefix)/usr/lib'|" $(targetprefix)/usr/lib/libmpc.la
	sed -i "/^dependency_libs/s|-L/usr/lib -L/lib ||" $(targetprefix)/usr/lib/libmpc.la
	$(start_build)
	$(fromrpm_build)
	touch $@

#
# LIBELF
#
LIBELF := libelf
LIBELF_VERSION := 0.8.13-2
LIBELF_SPEC := stm-target-$(LIBELF).spec
LIBELF_SPEC_PATCH :=
LIBELF_PATCHES :=

LIBELF_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBELF)-$(LIBELF_VERSION).sh4.rpm

$(LIBELF_RPM): \
		$(addprefix Patches/,$(LIBELF_SPEC_PATCH) $(LIBELF_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(LIBELF)-$(LIBELF_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(LIBELF_SPEC_PATCH),( cd SPECS && patch -p1 $(LIBELF_SPEC) < $(buildprefix)/Patches/$(LIBELF_SPEC_PATCH) ) &&) \
	$(if $(LIBELF_PATCHES),cp $(addprefix Patches/,$(LIBELF_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(LIBELF_SPEC)

$(DEPDIR)/$(LIBELF): $(LIBELF_RPM)
	@rpm $(DRPM) --ignorearch --nodeps -Uhv $(lastword $^) && \
	touch $@

#
# GCC LIBSTDC++
#
LIBSTDC := libstdc++
LIBSTDC_DEV := libstdc++-dev
FILES_libstdc++ = \
/usr/lib/*.so \
/usr/lib/*.so*
FILES_libstdc++-dev = \
/usr/lib/*.so \
/usr/lib/*.so*

LIBGCC := libgcc
GCC := gcc
GCC_VERSION := 4.8.2-137
GCC_SPEC := stm-target-$(GCC).spec
GCC_SPEC_PATCH := $(GCC_SPEC).$(GCC_VERSION).diff
GCC_PATCHES := stm-target-$(GCC).$(GCC_VERSION).diff

GCC_RPM := RPMS/sh4/$(STLINUX)-sh4-$(GCC)-$(GCC_VERSION).sh4.rpm
LIBSTDC_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBSTDC)-$(GCC_VERSION).sh4.rpm
LIBSTDC_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBSTDC_DEV)-$(GCC_VERSION).sh4.rpm
LIBGCC_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBGCC)-$(GCC_VERSION).sh4.rpm

$(GCC_RPM) $(LIBSTDC_RPM) $(LIBSTDC_DEV_RPM) $(LIBGCC_RPM): \
		$(addprefix Patches/,$(GCC_SPEC_PATCH) $(GCC_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(GCC)-$(GCC_VERSION).src.rpm \
		| $(DEPDIR)/$(GLIBC_DEV) $(MPFR) $(MPC) $(LIBELF)
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(GCC_SPEC_PATCH),( cd SPECS && patch -p1 $(GCC_SPEC) < $(buildprefix)/Patches/$(GCC_SPEC_PATCH) ) &&) \
	$(if $(GCC_PATCHES),cp $(addprefix Patches/,$(GCC_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(GCC_SPEC)

$(DEPDIR)/$(GCC): $(DEPDIR)/$(GLIBC_DEV) $(GCC_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

$(DEPDIR)/$(LIBSTDC): $(LIBSTDC_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@

$(DEPDIR)/$(LIBSTDC_DEV): $(DEPDIR)/$(LIBSTDC) $(LIBSTDC_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@
	sed -i "/^libdir/s|'/usr/lib'|'$(targetprefix)/usr/lib'|" $(targetprefix)/usr/lib/lib{std,sup}c++.la
	sed -i "/^dependency_libs/s|-L/usr/lib -L/lib ||" $(targetprefix)/usr/lib/lib{std,sup}c++.la

$(DEPDIR)/$(LIBGCC): $(LIBGCC_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@

# END OF BOOTSTRAP

#
# LIBTERMCAP
#
LIBTERMCAP := libtermcap
LIBTERMCAP_DEV := libtermcap-dev
LIBTERMCAP_DOC := libtermcap-doc
FILES_libtermcap = \
/usr/lib/*.so \
/usr/lib/*.so*
FILES_libtermcap_dev = \
/usr/lib/*.so \
/usr/lib/*.so*

LIBTERMCAP_VERSION := 2.0.8-10
LIBTERMCAP_RAWVERSION := $(firstword $(subst -, ,$(LIBTERMCAP_VERSION)))
LIBTERMCAP_SPEC := stm-target-$(LIBTERMCAP).spec
LIBTERMCAP_SPEC_PATCH :=
LIBTERMCAP_PATCHES :=

LIBTERMCAP_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBTERMCAP)-$(LIBTERMCAP_VERSION).sh4.rpm
LIBTERMCAP_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBTERMCAP_DEV)-$(LIBTERMCAP_VERSION).sh4.rpm
LIBTERMCAP_DOC_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBTERMCAP_DOC)-$(LIBTERMCAP_VERSION).sh4.rpm

$(LIBTERMCAP_RPM) $(LIBTERMCAP_DEV_RPM) $(LIBTERMCAP_DOC_RPM): \
		$(addprefix Patches/,$(LIBTERMCAP_SPEC_PATCH) $(LIBTERMCAP_PATCHES)) \
		$(archivedir)/$(STM_SRC)-target-$(LIBTERMCAP)-$(LIBTERMCAP_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(LIBTERMCAP_SPEC_PATCH),( cd SPECS && patch -p1 $(LIBTERMCAP_SPEC) < $(buildprefix)/Patches/$(LIBTERMCAP_SPEC_PATCH) ) &&) \
	$(if $(LIBTERMCAP_PATCHES),cp $(addprefix Patches/,$(LIBTERMCAP_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(LIBTERMCAP_SPEC)

$(DEPDIR)/$(LIBTERMCAP): bootstrap $(LIBTERMCAP_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	ln -sf libtermcap.so.2 $(prefix)/$*cdkroot/usr/lib/libtermcap.so && \
	$(INSTALL) -m 644 $(buildprefix)/root/etc/termcap $(prefix)/$*cdkroot/etc
	$(start_build)
	$(fromrpm_build)
	touch $@
	

$(DEPDIR)/$(LIBTERMCAP_DEV): $(DEPDIR)/$(LIBTERMCAP) $(LIBTERMCAP_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@

$(DEPDIR)/$(LIBTERMCAP_DOC): $(LIBTERMCAP_DOC_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# NCURSES
#
NCURSES := ncurses
NCURSES_BASE := ncurses-base
NCURSES_DEV := ncurses-dev
NCURSES_VERSION := 5.5-10
NCURSES_SPEC := stm-target-$(NCURSES).spec
NCURSES_SPEC_PATCH :=
NCURSES_PATCHES :=

NCURSES_RPM := RPMS/sh4/$(STLINUX)-sh4-$(NCURSES)-$(NCURSES_VERSION).sh4.rpm
NCURSES_BASE_RPM := RPMS/sh4/$(STLINUX)-sh4-$(NCURSES_BASE)-$(NCURSES_VERSION).sh4.rpm
NCURSES_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(NCURSES_DEV)-$(NCURSES_VERSION).sh4.rpm

$(NCURSES_RPM) $(NCURSES_BASE_RPM) $(NCURSES_DEV_RPM): \
		$(addprefix Patches/,$(NCURSES_SPEC_PATCH) $(NCURSES_PATCHES)) \
		$(archivedir)/$(STM_SRC)-target-$(NCURSES)-$(NCURSES_VERSION).src.rpm \
		| $(DEPDIR)/$(LIBSTDC_DEV)
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(NCURSES_SPEC_PATCH),( cd SPECS && patch -p1 $(NCURSES_SPEC) < $(buildprefix)/Patches/$(NCURSES_SPEC_PATCH) ) &&) \
	$(if $(NCURSES_PATCHES),cp $(addprefix Patches/,$(NCURSES_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(NCURSES_SPEC)

$(DEPDIR)/$(NCURSES_BASE): $(NCURSES_BASE_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $<)
	touch $@

$(DEPDIR)/$(NCURSES): $(DEPDIR)/$(NCURSES_BASE) $(NCURSES_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@
	
$(DEPDIR)/$(NCURSES_DEV): $(DEPDIR)/$(NCURSES_BASE) $(NCURSES_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@

#
# BASE-PASSWD
#
BASE_PASSWD := base-passwd
BASE_PASSWD_VERSION := 3.5.9-11
BASE_PASSWD_SPEC := stm-target-$(BASE_PASSWD).spec
BASE_PASSWD_SPEC_PATCH :=
BASE_PASSWD_PATCHES :=

BASE_PASSWD_RPM := RPMS/sh4/$(STLINUX)-sh4-$(BASE_PASSWD)-$(BASE_PASSWD_VERSION).sh4.rpm

$(BASE_PASSWD_RPM): \
		$(addprefix Patches/,$(BASE_PASSWD_SPEC_PATCH) $(BASE_PASSWD_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(BASE_PASSWD)-$(BASE_PASSWD_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(BASE_PASSWD_SPEC_PATCH),( cd SPECS && patch -p1 $(BASE_PASSWD_SPEC) < $(buildprefix)/Patches/$(BASE_PASSWD_SPEC_PATCH) ) &&) \
	$(if $(BASE_PASSWD_PATCHES),cp $(addprefix Patches/,$(BASE_PASSWD_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(BASE_PASSWD_SPEC)

$(DEPDIR)/$(BASE_PASSWD): $(BASE_FILES_ADAPTED_ETC_FILES:%=root/etc/%) $(BASE_PASSWD_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps  --nopost -Uhv \
		--replacepkgs --badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
		$(hostprefix)/bin/update-passwd -L -p $(prefix)/$*cdkroot/usr/share/base-passwd/passwd.master \
			-g $(prefix)/$*cdkroot/usr/share/base-passwd/group.master -P $(prefix)/$*cdkroot/etc/passwd \
			-S $(prefix)/$*cdkroot/etc/shadow -G $(prefix)/$*cdkroot/etc/group && \
	chmod 600 $(prefix)/$*cdkroot/etc/shadow && \
	( cd $(prefix)/$*cdkroot/etc && sed -e "s|/bin/bash|/bin/sh|g" -i passwd ) && \
	rm -f $(prefix)/$*cdkroot/etc/shadow
	touch $@

#
# MAKEDEV
#
MAKEDEV := makedev
MAKEDEV_VERSION := 2.3.1-27
MAKEDEV_SPEC := stm-target-$(MAKEDEV).spec
MAKEDEV_SPEC_PATCH :=
MAKEDEV_PATCHES :=

MAKEDEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(MAKEDEV)-$(MAKEDEV_VERSION).sh4.rpm

$(MAKEDEV_RPM): \
		$(addprefix Patches/,$(MAKEDEV_SPEC_PATCH) $(MAKEDEV_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(MAKEDEV)-$(MAKEDEV_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(MAKEDEV_SPEC_PATCH),( cd SPECS && patch -p1 $(MAKEDEV_SPEC) < $(buildprefix)/Patches/$(MAKEDEV_SPEC_PATCH) ) &&) \
	$(if $(MAKEDEV_PATCHES),cp $(addprefix Patches/,$(MAKEDEV_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(MAKEDEV_SPEC)

$(DEPDIR)/$(MAKEDEV): root/sbin/MAKEDEV $(MAKEDEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --nopost -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(INSTALL) -m 755 root/sbin/MAKEDEV $(prefix)/$*cdkroot/sbin
	touch $@

#
# BASE-FILES
#
BASE_FILES := base-files
BASE_FILES_VERSION := 2.0-8
BASE_FILES_SPEC := stm-target-$(BASE_FILES).spec
BASE_FILES_SPEC_PATCH :=
BASE_FILES_PATCHES :=

BASE_FILES_RPM := RPMS/sh4/$(STLINUX)-sh4-$(BASE_FILES)-$(BASE_FILES_VERSION).sh4.rpm

$(BASE_FILES_RPM): \
		$(addprefix Patches/,$(BASE_FILES_SPEC_PATCH) $(BASE_FILES_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(BASE_FILES)-$(BASE_FILES_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(BASE_FILES_SPEC_PATCH),( cd SPECS && patch -p1 $(BASE_FILES_SPEC) < $(buildprefix)/Patches/$(BASE_FILES_SPEC_PATCH) ) &&) \
	$(if $(BASE_FILES_PATCHES),cp $(addprefix Patches/,$(BASE_FILES_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(BASE_FILES_SPEC)

$(DEPDIR)/$(BASE_FILES): $(BASE_FILES_ADAPTED_ETC_FILES:%=root/etc/%) $(BASE_FILES_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  -Uhv \
		--replacepkgs --badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	( cd root/etc && for i in $(BASE_FILES_ADAPTED_ETC_FILES); do \
		[ -f $$i ] && $(INSTALL) -m644 $$i $(prefix)/$*cdkroot/etc/$$i || true; \
		[ "$${i%%/*}" = "init.d" ] && chmod 755 $(prefix)/$*cdkroot/etc/$$i || true; done ) && \
	echo "proc          /proc               proc    defaults                        0 0" >> $(prefix)/$*cdkroot/etc/fstab && \
	echo "tmpfs         /tmp                tmpfs   defaults                        0 0" >> $(prefix)/$*cdkroot/etc/fstab && \
	touch $@

#
# LIBATTR
#
LIBATTR := libattr
LIBATTR_DEV := libattr-dev
LIBATTR_VERSION := 2.4.47-5
LIBATTR_SPEC := stm-target-$(LIBATTR).spec
LIBATTR_SPEC_PATCH :=
LIBATTR_PATCHES :=

LIBATTR_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBATTR)-$(LIBATTR_VERSION).sh4.rpm
LIBATTR_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBATTR_DEV)-$(LIBATTR_VERSION).sh4.rpm

$(LIBATTR_RPM) $(LIBATTR_DEV_RPM): \
		$(addprefix Patches/,$(LIBATTR_SPEC_PATCH) $(LIBATTR_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(LIBATTR)-$(LIBATTR_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(LIBATTR_SPEC_PATCH),( cd SPECS && patch -p1 $(LIBATTR_SPEC) < $(buildprefix)/Patches/$(LIBATTR_SPEC_PATCH) ) &&) \
	$(if $(LIBATTR_PATCHES),cp $(addprefix Patches/,$(LIBATTR_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(LIBATTR_SPEC)

$(DEPDIR)/$(LIBATTR): $(LIBATTR_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --noscripts -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@

$(DEPDIR)/$(LIBATTR_DEV): $(LIBATTR_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --noscripts -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(REWRITE_LIBDIR)/libattr.la
	touch $@

#
# LIBACL
#
LIBACL := libacl
LIBACL_DEV := libacl-dev
LIBACL_VERSION := 2.2.47-6
LIBACL_SPEC := stm-target-$(LIBACL).spec
LIBACL_SPEC_PATCH :=
LIBACL_PATCHES :=

LIBACL_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBACL)-$(LIBACL_VERSION).sh4.rpm
LIBACL_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBACL_DEV)-$(LIBACL_VERSION).sh4.rpm

$(LIBACL_RPM) $(LIBACL_DEV_RPM): \
		libattr libattr-dev \
		$(addprefix Patches/,$(LIBACL_SPEC_PATCH) $(LIBACL_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(LIBACL)-$(LIBACL_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(LIBACL_SPEC_PATCH),( cd SPECS && patch -p1 $(LIBACL_SPEC) < $(buildprefix)/Patches/$(LIBACL_SPEC_PATCH) ) &&) \
	$(if $(LIBACL_PATCHES),cp $(addprefix Patches/,$(LIBACL_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(LIBACL_SPEC)

$(DEPDIR)/$(LIBACL): $(LIBACL_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --noscripts -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@
	$(start_build)
	$(fromrpm_build)

$(DEPDIR)/$(LIBACL_DEV): $(LIBACL_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --noscripts -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(REWRITE_LIBDIR)/libacl.la
	$(REWRITE_LIBDEP)/libacl.la
	touch $@

#
# USBUTILS
#
USBUTILS := usbutils
USBUTILS_VERSION := 0.86-11
USBUTILS_SPEC := stm-target-$(USBUTILS).spec
USBUTILS_SPEC_PATCH :=
USBUTILS_PATCHES :=
USBUTILS_usbutils = libusb
USBUTILS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(USBUTILS)-$(USBUTILS_VERSION).sh4.rpm

$(USBUTILS_RPM): \
		$(addprefix Patches/,$(USBUTILS_SPEC_PATCH) $(USBUTILS_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(USBUTILS)-$(USBUTILS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(USBUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(USBUTILS_SPEC) < $(buildprefix)/Patches/$(USBUTILS_SPEC_PATCH) ) &&) \
	$(if $(USBUTILS_PATCHES),cp $(addprefix Patches/,$(USBUTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(USBUTILS_SPEC)

$(DEPDIR)/$(USBUTILS): $(USBUTILS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --noscripts -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# UDEV
#

UDEV := udev
UDEV_DEV := udev-dev
UDEV_VERSION := 162-39
PKGR_udev := r0
UDEV_SPEC := stm-target-$(UDEV).spec
UDEV_SPEC_PATCH := stm-target-udev.spec.diff
UDEV_PATCHES := usbhd-automount.rules

UDEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(UDEV)-$(UDEV_VERSION).sh4.rpm
UDEV_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(UDEV_DEV)-$(UDEV_VERSION).sh4.rpm

RDEPENDS_udev := libattr libacl

$(UDEV_RPM) $(UDEV_DEV_RPM): \
		glib2 libacl libacl-dev libusb usbutils \
		$(addprefix Patches/,$(UDEV_SPEC_PATCH) $(UDEV_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(UDEV)-$(UDEV_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(UDEV_SPEC_PATCH),( cd SPECS && patch -p1 $(UDEV_SPEC) < $(buildprefix)/Patches/$(UDEV_SPEC_PATCH) ) &&) \
	$(if $(UDEV_PATCHES),cp $(addprefix Patches/,$(UDEV_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(UDEV_SPEC)

$(DEPDIR)/$(UDEV): $(UDEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --noscripts -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	( export HHL_CROSS_TARGET_DIR=$(prefix)/$*cdkroot && cd $(prefix)/$*cdkroot/etc/init.d && \
		for s in sysfs udev ; do \
			$(hostprefix)/bin/target-initdconfig --add $$s || \
			echo "Unable to enable initd service: $$s" ; done && rm *rpmsave 2>/dev/null || true )
	$(start_build)
	$(fromrpm_get)
# start udevadm earlier
	sed -i 's/# chkconfig: S 99 0/# chkconfig: S 6 0/' $(PKDIR)/etc/init.d/udevadm
	$(INSTALL_udev)
	$(toflash_build)
	touch $@

$(DEPDIR)/$(UDEV_DEV): $(UDEV_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --noscripts -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@
	$(REWRITE_LIBDEP)/libgudev-1.0.la
#################################################
#  ccache
#
# You can use ccache for compiling if it is installed on your system or Tuxbox-CDK in ~/cdk/bin.
# With this rule you can install ccache independ from your system. 
# Use <make ccache> for installing in cdk/bin. This own ccache-binary is preferred from configure.
# Isn't ccache installed on your system, you can also install later, but you must configure again.
# Most distributions contain the required packages or
# get the sources from http://samba.org/ftp/ccache

ifdef ENABLE_CCACHE
# tuxbox-cdk ccache install path
CCACHE_TUXBOX_BIN = $(ccachedir)/ccache

# tuxbox-cdk ccache environment dir
CCACHE_BINDIR = $(hostprefix)/ccache-bin

# generate links
CCACHE_LINKS = \
	ln -sfv $(CCACHE_TUXBOX_BIN) $(CCACHE_BINDIR)/gcc;\
	ln -sfv $(CCACHE_TUXBOX_BIN) $(CCACHE_BINDIR)/g++; \
	ln -sfv $(CCACHE_TUXBOX_BIN) $(CCACHE_BINDIR)/$(target)-gcc; \
	ln -sfv $(CCACHE_TUXBOX_BIN) $(CCACHE_BINDIR)/$(target)-g++; \
	ln -sfv $(CCACHE_TUXBOX_BIN) $(CCACHE_BINDIR)/$(target)-cpp;\
	ln -sfv $(CCACHE_TUXBOX_BIN) $(hostprefix)/bin/$(target)-gcc; \
	ln -sfv $(CCACHE_TUXBOX_BIN) $(hostprefix)/bin/$(target)-g++

# ccache test will show you ccache statistics
CCACHE_TEST = $(CCACHE_TUXBOX_BIN) -s

# sets the options for ccache which are configured
CCACHE_SETUP = \
	test "$(maxcachesize)" != -1 && $(CCACHE_TUXBOX_BIN) -M $(maxcachesize); \
	test "$(maxcachefiles)" != -1 && $(CCACHE_TUXBOX_BIN) -F $(maxcachefiles); \
	true

# create ccache environment
CCACHE_ENV = $(INSTALL) -d $(CCACHE_BINDIR); \
		$(CCACHE_LINKS); \
		$(CCACHE_SETUP)

# use ccache from your host if is installed
ifdef USE_CCACHEHOST
$(DEPDIR)/ccache:
	$(CCACHE_ENV); \
	$(CCACHE_TEST)
	touch $@
else

#
# build own tuxbox-cdk ccache
#
BEGIN[[
ccache
  3.1.9
  {PN}-{PV}
  extract:http://samba.org/ftp/{PN}/{PN}-{PV}.tar.xz
  make:install:DESTDIR=HOST
;
]]END

$(hostprefix)/bin/ccache: $(DEPENDS_ccache)
	$(PREPARE_ccache)
	$(start_build)
	cd $(DIR_ccache) && \
		./configure \
			--build=$(build) \
			--host=$(build) \
			--prefix= && \
			$(MAKE) all && \
		$(CCACHE_ENV); \
		$(CCACHE_TEST); \
		$(INSTALL_ccache)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_ccache)
	[ "x$*" = "x" ] && touch $@ || true

endif

endif

##############################   BOOTSTRAP-HOST    #############################
#
# HOST-RPMCONFIG
#
HOST_RPMCONFIG = host-rpmconfig
HOST_RPMCONFIG_VERSION = 2.4-33
HOST_RPMCONFIG_SPEC = stm-$(HOST_RPMCONFIG).spec
HOST_RPMCONFIG_SPEC_PATCH = $(HOST_RPMCONFIG_SPEC).$(HOST_RPMCONFIG_VERSION).diff
HOST_RPMCONFIG_PATCHES = stm-$(HOST_RPMCONFIG)-$(HOST_RPMCONFIG_VERSION)-ignore-skip-cvs-errors.patch \
			 stm-$(HOST_RPMCONFIG)-$(HOST_RPMCONFIG_VERSION)-autoreconf-add-libtool-macros.patch

HOST_RPMCONFIG_RPM = RPMS/noarch/$(STLINUX)-$(HOST_RPMCONFIG)-$(HOST_RPMCONFIG_VERSION).noarch.rpm

$(HOST_RPMCONFIG_RPM): \
		$(addprefix Patches/,$(HOST_RPMCONFIG_SPEC_PATCH) $(HOST_RPMCONFIG_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(HOST_RPMCONFIG)-$(HOST_RPMCONFIG_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_RPMCONFIG_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_RPMCONFIG_SPEC) < $(buildprefix)/Patches/$(HOST_RPMCONFIG_SPEC_PATCH) ) &&) \
	$(if $(HOST_RPMCONFIG_PATCHES),cp $(addprefix Patches/,$(HOST_RPMCONFIG_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_RPMCONFIG_SPEC)

$(DEPDIR)/$(HOST_RPMCONFIG): $(HOST_RPMCONFIG_RPM)
	@rpm $(DRPM) --ignorearch --nodeps -Uhv --badreloc --relocate $(STM_RELOCATE)=$(prefix) $<
	touch $@

#
# HOST-LIBTOOL
#
HOST_LIBTOOL = host-libtool
HOST_LIBTOOL_VERSION = 2.2.8-4
HOST_LIBTOOL_SPEC = stm-$(HOST_LIBTOOL).spec
HOST_LIBTOOL_SPEC_PATCH =
HOST_LIBTOOL_PATCHES =

HOST_LIBTOOL_RPM = RPMS/sh4/$(STLINUX)-$(HOST_LIBTOOL)-$(HOST_LIBTOOL_VERSION).sh4.rpm

$(HOST_LIBTOOL_RPM): \
		$(addprefix Patches/,$(HOST_LIBTOOL_SPEC_PATCH) $(HOST_LIBTOOL_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(HOST_LIBTOOL)-$(HOST_LIBTOOL_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_LIBTOOL_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_LIBTOOL_SPEC) < $(buildprefix)/Patches/$(HOST_LIBTOOL_SPEC_PATCH) ) &&) \
	$(if $(HOST_LIBTOOL_PATCHES),cp $(addprefix Patches/,$(HOST_LIBTOOL_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_LIBTOOL_SPEC)

$(DEPDIR)/$(HOST_LIBTOOL): $(HOST_LIBTOOL_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $<
	touch $@

#
# HOST-BASE-PASSWD
#
HOST_BASE_PASSWD = host-base-passwd
HOST_BASE_PASSWD_VERSION = 3.5.9-7
HOST_BASE_PASSWD_SPEC = stm-$(HOST_BASE_PASSWD).spec
HOST_BASE_PASSWD_SPEC_PATCH =
HOST_BASE_PASSWD_PATCHES =

HOST_BASE_PASSWD_RPM = RPMS/sh4/$(STLINUX)-$(HOST_BASE_PASSWD)-$(HOST_BASE_PASSWD_VERSION).sh4.rpm

$(HOST_BASE_PASSWD_RPM): \
		$(addprefix Patches/,$(HOST_BASE_PASSWD_SPEC_PATCH) $(HOST_BASE_PASSWD_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(HOST_BASE_PASSWD)-$(HOST_BASE_PASSWD_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_BASE_PASSWD_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_BASE_PASSWD_SPEC) < $(buildprefix)/Patches/$(HOST_BASE_PASSWD_SPEC_PATCH) ) &&) \
	$(if $(HOST_BASE_PASSWD_PATCHES),cp $(addprefix Patches/,$(HOST_BASE_PASSWD_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_BASE_PASSWD_SPEC)

$(DEPDIR)/$(HOST_BASE_PASSWD): $(HOST_BASE_PASSWD_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

#
# HOST-DISTRIBUTIONUTILS
#
HOST_DISTRIBUTIONUTILS = host-distributionutils
HOST_DISTRIBUTIONUTILS_VERSION = 2.8.4-6
HOST_DISTRIBUTIONUTILS_SPEC = stm-$(HOST_DISTRIBUTIONUTILS).spec
HOST_DISTRIBUTIONUTILS_SPEC_PATCH =
HOST_DISTRIBUTIONUTILS_PATCHES =

HOST_DISTRIBUTIONUTILS_RPM = RPMS/$(host_arch)/$(STLINUX)-$(HOST_DISTRIBUTIONUTILS)-$(HOST_DISTRIBUTIONUTILS_VERSION).$(host_arch).rpm

$(HOST_DISTRIBUTIONUTILS_RPM): \
		$(addprefix Patches/,$(HOST_DISTRIBUTIONUTILS_SPEC_PATCH) $(HOST_DISTRIBUTIONUTILS_PATCHES)) \
		$(archivedir)/$(STM_SRC)-$(HOST_DISTRIBUTIONUTILS)-$(HOST_DISTRIBUTIONUTILS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_DISTRIBUTIONUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_DISTRIBUTIONUTILS_SPEC) < $(buildprefix)/Patches/$(HOST_DISTRIBUTIONUTILS_SPEC_PATCH) ) &&) \
	$(if $(HOST_DISTRIBUTIONUTILS_PATCHES),cp $(addprefix Patches/,$(HOST_DISTRIBUTIONUTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_DISTRIBUTIONUTILS_SPEC)

$(DEPDIR)/$(HOST_DISTRIBUTIONUTILS): $(HOST_DISTRIBUTIONUTILS_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

#
# HOST AUTOTOOLS
#
HOST_AUTOTOOLS = host-autotools
HOST_AUTOTOOLS_VERSION = dev-20091012-3
HOST_AUTOTOOLS_SPEC = stm-$(HOST_AUTOTOOLS)-dev.spec
HOST_AUTOTOOLS_SPEC_PATCH =
HOST_AUTOTOOLS_PATCHES =

HOST_AUTOTOOLS_RPM = RPMS/sh4/$(STLINUX)-$(HOST_AUTOTOOLS)-$(HOST_AUTOTOOLS_VERSION).sh4.rpm

$(HOST_AUTOTOOLS_RPM): \
		$(addprefix Patches/,$(HOST_AUTOTOOLS_SPEC_PATCH) $(HOST_AUTOTOOLS_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(HOST_AUTOTOOLS)-$(HOST_AUTOTOOLS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_AUTOTOOLS_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_AUTOTOOLS_SPEC) < $(buildprefix)/Patches/$(HOST_AUTOTOOLS_SPEC_PATCH) ) &&) \
	$(if $(HOST_AUTOTOOLS_PATCHES),cp $(addprefix Patches/,$(HOST_AUTOTOOLS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_AUTOTOOLS_SPEC)

$(DEPDIR)/$(HOST_AUTOTOOLS): $(HOST_AUTOTOOLS_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

#
# HOST AUTOMAKE
#
#HOST_AUTOMAKE = host-automake
#HOST_AUTOMAKE_VERSION = 1.11.1-3
#HOST_AUTOMAKE_SPEC = stm-$(HOST_AUTOMAKE).spec
#HOST_AUTOMAKE_SPEC_PATCH =
#HOST_AUTOMAKE_PATCHES =
#
#HOST_AUTOMAKE_RPM = RPMS/sh4/$(STLINUX)-$(HOST_AUTOMAKE)-$(HOST_AUTOMAKE_VERSION).sh4.rpm
#
#$(HOST_AUTOMAKE_RPM): \
#		$(addprefix Patches/,$(HOST_AUTOMAKE_SPEC_PATCH) $(HOST_AUTOMAKE_PATCHES)) \
#		$(archivedir)/$(STLINUX)-$(HOST_AUTOMAKE)-$(HOST_AUTOMAKE_VERSION).src.rpm
#	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
#	$(if $(HOST_AUTOMAKE_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_AUTOMAKE_SPEC) < $(buildprefix)/Patches/$(HOST_AUTOMAKE_SPEC_PATCH) ) &&) \
#	$(if $(HOST_AUTOMAKE_PATCHES),cp $(addprefix Patches/,$(HOST_AUTOMAKE_PATCHES)) SOURCES/ &&) \
#	export PATH=$(hostprefix)/bin:$(PATH) && \
#	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_AUTOMAKE_SPEC)
#
#$(DEPDIR)/$(HOST_AUTOMAKE): $(HOST_AUTOMAKE_RPM)
#	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $<
#	touch $@

#
# HOST AUTOCONF
#
#HOST_AUTOCONF = host-autoconf
#HOST_AUTOCONF_VERSION = 2.64-6
#HOST_AUTOCONF_SPEC = stm-$(HOST_AUTOCONF).spec
#HOST_AUTOCONF_SPEC_PATCH = stm-$(HOST_AUTOCONF).$(HOST_AUTOCONF_VERSION).spec.diff
#HOST_AUTOCONF_PATCHES = stm-$(HOST_AUTOCONF).$(HOST_AUTOCONF_VERSION).diff
#
#HOST_AUTOCONF_RPM = RPMS/sh4/$(STLINUX)-$(HOST_AUTOCONF)-$(HOST_AUTOCONF_VERSION).sh4.rpm
#
#$(HOST_AUTOCONF_RPM): \
#		$(addprefix Patches/,$(HOST_AUTOCONF_SPEC_PATCH) $(HOST_AUTOCONF_PATCHES)) \
#		$(archivedir)/$(STLINUX)-$(HOST_AUTOCONF)-$(HOST_AUTOCONF_VERSION).src.rpm
#	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
#	$(if $(HOST_AUTOCONF_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_AUTOCONF_SPEC) < $(buildprefix)/Patches/$(HOST_AUTOCONF_SPEC_PATCH) ) &&) \
#	$(if $(HOST_AUTOCONF_PATCHES),cp $(addprefix Patches/,$(HOST_AUTOCONF_PATCHES)) SOURCES/ &&) \
#	export PATH=$(hostprefix)/bin:$(PATH) && \
#	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_AUTOCONF_SPEC)
#
#$(DEPDIR)/$(HOST_AUTOCONF): $(HOST_AUTOCONF_RPM)
#	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $<
#	touch $@

#
# HOST MODULE INIT TOOLS
#
HOST_MODINIT = host-module-init-tools
HOST_MODINIT_VERSION = 3.16-3
HOST_MODINIT_SPEC = stm-$(HOST_MODINIT).spec
HOST_MODINIT_SPEC_PATCH = $(HOST_MODINIT_SPEC).$(HOST_MODINIT_VERSION).diff
HOST_MODINIT_PATCHES = stm-$(HOST_MODINIT).$(HOST_MODINIT_VERSION)-no-man.diff

HOST_MODINIT_RPM = RPMS/sh4/$(STLINUX)-$(HOST_MODINIT)-$(HOST_MODINIT_VERSION).sh4.rpm

$(HOST_MODINIT_RPM): \
		$(addprefix Patches/,$(HOST_MODINIT_SPEC_PATCH) $(HOST_MODINIT_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(HOST_MODINIT)-$(HOST_MODINIT_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_MODINIT_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_MODINIT_SPEC) < $(buildprefix)/Patches/$(HOST_MODINIT_SPEC_PATCH) ) &&) \
	$(if $(HOST_MODINIT_PATCHES),cp $(addprefix Patches/,$(HOST_MODINIT_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_MODINIT_SPEC)

$(DEPDIR)/$(HOST_MODINIT): $(HOST_MODINIT_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

#
# HOST PKGCONFIG
#
HOST_PKGCONFIG = host-pkg-config
HOST_PKGCONFIG_VERSION = 0.23-3
HOST_PKGCONFIG_SPEC = stm-$(HOST_PKGCONFIG).spec
HOST_PKGCONFIG_SPEC_PATCH =
HOST_PKGCONFIG_PATCHES =

HOST_PKGCONFIG_RPM = RPMS/sh4/$(STLINUX)-$(HOST_PKGCONFIG)-$(HOST_PKGCONFIG_VERSION).sh4.rpm

$(HOST_PKGCONFIG_RPM): \
		$(addprefix Patches/,$(HOST_PKGCONFIG_SPEC_PATCH) $(HOST_PKGCONFIG_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(HOST_PKGCONFIG)-$(HOST_PKGCONFIG_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_PKGCONFIG_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_PKGCONFIG_SPEC) < $(buildprefix)/Patches/$(HOST_PKGCONFIG_SPEC_PATCH) ) &&) \
	$(if $(HOST_PKGCONFIG_PATCHES),cp $(addprefix Patches/,$(HOST_PKGCONFIG_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_PKGCONFIG_SPEC)

$(DEPDIR)/$(HOST_PKGCONFIG): $(HOST_PKGCONFIG_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

#
# host-liblzo
#
BEGIN[[
host-liblzo
  2.06
  lzo-{PV}
  extract:http://www.oberhumer.com/opensource/{PN}/download/lzo-{PV}.tar.gz
  make:install
;
]]END

$(DEPDIR)/host-liblzo: $(DEPENDS_host-liblzo)
	$(PREPARE_host-liblzo)
	cd $(DIR_host-liblzo); \
		./configure \
			--prefix=$(hostprefix) && \
		$(MAKE) all; \
		$(INSTALL_host-liblzo)
	$(DISTCLEANUP_host-liblzo)
	touch $@

#
# HOST-MTD-UTILS
#
HOST_MTD_UTILS = host-mtd-utils
HOST_MTD_UTILS_VERSION = 1.5.0-17
HOST_MTD_UTILS_SPEC = stm-$(HOST_MTD_UTILS).spec
HOST_MTD_UTILS_SPEC_PATCH = stm-$(HOST_MTD_UTILS).spec.diff
HOST_MTD_UTILS_PATCHES = stm-$(HOST_MTD_UTILS).diff

HOST_MTD_UTILS_RPM = RPMS/sh4/$(STLINUX)-$(HOST_MTD_UTILS)-$(HOST_MTD_UTILS_VERSION).sh4.rpm

$(HOST_MTD_UTILS_RPM): \
		$(addprefix Patches/,$(HOST_MTD_UTILS_SPEC_PATCH) $(HOST_MTD_UTILS_PATCHES)) \
		$(archivedir)/stlinux24-$(HOST_MTD_UTILS)-$(HOST_MTD_UTILS_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_MTD_UTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_MTD_UTILS_SPEC) < $(buildprefix)/Patches/$(HOST_MTD_UTILS_SPEC_PATCH) ) &&) \
	$(if $(HOST_MTD_UTILS_PATCHES),cp $(addprefix Patches/,$(HOST_MTD_UTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_MTD_UTILS_SPEC)

$(DEPDIR)/$(HOST_MTD_UTILS): $(HOST_MTD_UTILS_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

#
# HOST FLEX
#
HOST_FLEX = host-flex
HOST_FLEX_VERSION = 2.5.35-2
HOST_FLEX_SPEC = stm-$(HOST_FLEX).spec
HOST_FLEX_SPEC_PATCH =
HOST_FLEX_PATCHES =

HOST_FLEX_RPM = RPMS/sh4/$(STLINUX)-$(HOST_FLEX)-$(HOST_FLEX_VERSION).sh4.rpm

$(HOST_FLEX_RPM): \
		$(addprefix Patches/,$(HOST_FLEX_SPEC_PATCH) $(HOST_FLEX_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(HOST_FLEX)-$(HOST_FLEX_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_FLEX_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_FLEX_SPEC) < $(buildprefix)/Patches/$(HOST_FLEX_SPEC_PATCH) ) &&) \
	$(if $(HOST_FLEX_PATCHES),cp $(addprefix Patches/,$(HOST_FLEX_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_FLEX_SPEC)

$(DEPDIR)/$(HOST_FLEX): $(HOST_FLEX_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

#
# HOST LIBFFI
#
HOST_LIBFFI = host-libffi-dev
HOST_LIBFFI_VERSION = 3.0.10-2
HOST_LIBFFI_SPEC = stm-$(HOST_LIBFFI).spec
HOST_LIBFFI_SPEC_PATCH = #$(HOST_LIBFFI_SPEC).$(HOST_LIBFFI_VERSION).diff
HOST_LIBFFI_PATCHES =

HOST_LIBFFI_RPM = RPMS/sh4/$(STLINUX)-$(HOST_LIBFFI)-$(HOST_LIBFFI_VERSION).sh4.rpm

$(HOST_LIBFFI_RPM): \
		$(addprefix Patches/,$(HOST_LIBFFI_SPEC_PATCH) $(HOST_LIBFFI_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(HOST_LIBFFI)-$(HOST_LIBFFI_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_LIBFFI_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_LIBFFI_SPEC) < $(buildprefix)/Patches/$(HOST_LIBFFI_SPEC_PATCH) ) &&) \
	$(if $(HOST_LIBFFI_PATCHES),cp $(addprefix Patches/,$(HOST_LIBFFI_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_LIBFFI_SPEC)

$(DEPDIR)/$(HOST_LIBFFI): $(HOST_LIBFFI_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $<
	touch $@

#
# HOST GLIB2
#
HOST_GLIB2 = host-glib2
HOST_GLIB2_VERSION = 2.32.1-26
HOST_GLIB2_SPEC = stm-$(HOST_GLIB2).spec
HOST_GLIB2_SPEC_PATCH = $(HOST_GLIB2_SPEC).$(HOST_GLIB2_VERSION).diff
HOST_GLIB2_PATCHES =

HOST_GLIB2_RPM = RPMS/sh4/$(STLINUX)-$(HOST_GLIB2)-$(HOST_GLIB2_VERSION).sh4.rpm

$(HOST_GLIB2_RPM): \
		$(addprefix Patches/,$(HOST_GLIB2_SPEC_PATCH) $(HOST_GLIB2_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(HOST_GLIB2)-$(HOST_GLIB2_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(HOST_GLIB2_SPEC_PATCH),( cd SPECS && patch -p1 $(HOST_GLIB2_SPEC) < $(buildprefix)/Patches/$(HOST_GLIB2_SPEC_PATCH) ) &&) \
	$(if $(HOST_GLIB2_PATCHES),cp $(addprefix Patches/,$(HOST_GLIB2_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(HOST_GLIB2_SPEC)

$(DEPDIR)/$(HOST_GLIB2): $(HOST_LIBFFI) $(HOST_GLIB2_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $<
	touch $@

########################################   BOOTSTRAP-CROSS   ########################################
#
# CROSS_DISTRIBUTIONUTILS
#
CROSS_DISTRIBUTIONUTILS = cross-sh4-distributionutils
CROSS_DISTRIBUTIONUTILS_VERSION = 1.14-6
CROSS_DISTRIBUTIONUTILS_SPEC = stm-$(subst cross-sh4,cross,$(CROSS_DISTRIBUTIONUTILS)).spec
CROSS_DISTRIBUTIONUTILS_SPEC_PATCH =
CROSS_DISTRIBUTIONUTILS_PATCHES =

CROSS_DISTRIBUTIONUTILS_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_DISTRIBUTIONUTILS)-$(CROSS_DISTRIBUTIONUTILS_VERSION).$(host_arch).rpm

$(CROSS_DISTRIBUTIONUTILS_RPM): \
		$(addprefix Patches/,$(CROSS_DISTRIBUTIONUTILS_SPEC_PATCH) $(CROSS_DISTRIBUTIONUTILS_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(subst cross-sh4,cross,$(CROSS_DISTRIBUTIONUTILS))-$(CROSS_DISTRIBUTIONUTILS_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(CROSS_DISTRIBUTIONUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(CROSS_DISTRIBUTIONUTILS_SPEC) < $(buildprefix)/Patches/$(CROSS_DISTRIBUTIONUTILS_SPEC_PATCH) ) &&) \
	$(if $(CROSS_DISTRIBUTIONUTILS_PATCHES),cp $(addprefix Patches/,$(CROSS_DISTRIBUTIONUTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(CROSS_DISTRIBUTIONUTILS_SPEC)

$(DEPDIR)/$(CROSS_DISTRIBUTIONUTILS): $(CROSS_DISTRIBUTIONUTILS_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

#
# CROSS BINUTILS
#
CROSS_BINUTILS = cross-sh4-binutils
CROSS_BINUTILS_DEV = cross-sh4-binutils-dev
CROSS_BINUTILS_VERSION = 2.23.2-73
CROSS_BINUTILS_SPEC = stm-$(subst cross-sh4,cross,$(CROSS_BINUTILS)).spec
CROSS_BINUTILS_SPEC_PATCH = $(CROSS_BINUTILS_SPEC).$(CROSS_BINUTILS_VERSION).diff
CROSS_BINUTILS_PATCHES = stm-cross-binutils.$(CROSS_BINUTILS_VERSION).diff

CROSS_BINUTILS_RPM = RPMS/${host_arch}/$(STLINUX)-$(CROSS_BINUTILS)-$(CROSS_BINUTILS_VERSION).${host_arch}.rpm
CROSS_BINUTILS_DEV_RPM = RPMS/${host_arch}/$(STLINUX)-$(CROSS_BINUTILS_DEV)-$(CROSS_BINUTILS_VERSION).${host_arch}.rpm

$(CROSS_BINUTILS_RPM) $(CROSS_BINUTILS_DEV_RPM) : \
		$(addprefix Patches/,$(CROSS_BINUTILS_SPEC_PATCH) $(CROSS_BINUTILS_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(subst cross-sh4-,cross-,$(CROSS_BINUTILS))-$(CROSS_BINUTILS_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(CROSS_BINUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(CROSS_BINUTILS_SPEC) < $(buildprefix)/Patches/$(CROSS_BINUTILS_SPEC_PATCH) ) &&) \
	$(if $(CROSS_BINUTILS_PATCHES),cp $(addprefix Patches/,$(CROSS_BINUTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(CROSS_BINUTILS_SPEC)

$(DEPDIR)/$(CROSS_BINUTILS): $(CROSS_BINUTILS_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

$(DEPDIR)/$(CROSS_BINUTILS_DEV): $(CROSS_BINUTILS_DEV_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps --noscripts -Uhv $< && \
	touch $@

#
# CROSS GMP
#
CROSS_GMP = cross-sh4-gmp
CROSS_GMP_VERSION = 5.1.3-13
CROSS_GMP_SPEC = stm-$(subst cross-sh4,cross,$(CROSS_GMP)).spec
CROSS_GMP_SPEC_PATCH = #$(CROSS_GMP_SPEC).$(CROSS_GMP_VERSION).diff
CROSS_GMP_PATCHES =

CROSS_GMP_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_GMP)-$(CROSS_GMP_VERSION).$(host_arch).rpm

$(CROSS_GMP_RPM): \
		$(addprefix Patches/,$(CROSS_GMP_SPEC_PATCH) $(CROSS_GMP_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(subst cross-sh4-,cross-,$(CROSS_GMP))-$(CROSS_GMP_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(CROSS_GMP_SPEC_PATCH),( cd SPECS && patch -p1 $(CROSS_GMP_SPEC) < $(buildprefix)/Patches/$(CROSS_GMP_SPEC_PATCH) ) &&) \
	$(if $(CROSS_GMP_PATCHES),cp $(addprefix Patches/,$(CROSS_GMP_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --target=sh4-linux SPECS/$(CROSS_GMP_SPEC)

$(DEPDIR)/$(CROSS_GMP): $(CROSS_GMP_RPM)
	@rpm $(DRPM) --nodeps -Uhv $(lastword $^) && \
	touch $@
#
# CROSS MPFR
#
CROSS_MPFR = cross-sh4-mpfr
CROSS_MPFR_VERSION = 3.1.2-13
CROSS_MPFR_SPEC = stm-$(subst cross-sh4,cross,$(CROSS_MPFR)).spec
CROSS_MPFR_SPEC_PATCH =
CROSS_MPFR_PATCHES =

CROSS_MPFR_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_MPFR)-$(CROSS_MPFR_VERSION).$(host_arch).rpm

$(CROSS_MPFR_RPM): \
		$(addprefix Patches/,$(CROSS_MPFR_SPEC_PATCH) $(CROSS_MPFR_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(subst cross-sh4-,cross-,$(CROSS_MPFR))-$(CROSS_MPFR_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(CROSS_MPFR_SPEC_PATCH),( cd SPECS && patch -p1 $(CROSS_MPFR_SPEC) < $(buildprefix)/Patches/$(CROSS_MPFR_SPEC_PATCH) ) &&) \
	$(if $(CROSS_MPFR_PATCHES),cp $(addprefix Patches/,$(CROSS_MPFR_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(CROSS_MPFR_SPEC)

$(DEPDIR)/$(CROSS_MPFR): $(CROSS_MPFR_RPM)
	@rpm $(DRPM) --nodeps -Uhv $(lastword $^) && \
	touch $@

#
# CROSS MPC
#
CROSS_MPC = cross-sh4-mpc
CROSS_MPC_VERSION = 1.0.2-7
CROSS_MPC_SPEC = stm-$(subst cross-sh4,cross,$(CROSS_MPC)).spec
CROSS_MPC_SPEC_PATCH =
CROSS_MPC_PATCHES =

CROSS_MPC_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_MPC)-$(CROSS_MPC_VERSION).$(host_arch).rpm

$(CROSS_MPC_RPM): \
		$(addprefix Patches/,$(CROSS_MPC_SPEC_PATCH) $(CROSS_MPC_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(subst cross-sh4-,cross-,$(CROSS_MPC))-$(CROSS_MPC_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(CROSS_MPC_SPEC_PATCH),( cd SPECS && patch -p1 $(CROSS_MPC_SPEC) < $(buildprefix)/Patches/$(CROSS_MPC_SPEC_PATCH) ) &&) \
	$(if $(CROSS_MPC_PATCHES),cp $(addprefix Patches/,$(CROSS_MPC_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(CROSS_MPC_SPEC)

$(DEPDIR)/$(CROSS_MPC): $(CROSS_MPC_RPM)
	@rpm $(DRPM) --nodeps -Uhv $(lastword $^) && \
	touch $@

#
# CROSS LIBELF
#
CROSS_LIBELF = cross-sh4-libelf
CROSS_LIBELF_VERSION = 0.8.13-2
CROSS_LIBELF_SPEC = stm-$(subst cross-sh4,cross,$(CROSS_LIBELF)).spec
CROSS_LIBELF_SPEC_PATCH =
CROSS_LIBELF_PATCHES =

CROSS_LIBELF_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_LIBELF)-$(CROSS_LIBELF_VERSION).$(host_arch).rpm

$(CROSS_LIBELF_RPM): \
		$(addprefix Patches/,$(CROSS_LIBELF_SPEC_PATCH) $(CROSS_LIBELF_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(subst cross-sh4-,cross-,$(CROSS_LIBELF))-$(CROSS_LIBELF_VERSION).src.rpm
	rpm  $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(CROSS_LIBELF_SPEC_PATCH),( cd SPECS && patch -p1 $(CROSS_LIBELF_SPEC) < $(buildprefix)/Patches/$(CROSS_LIBELF_SPEC_PATCH) ) &&) \
	$(if $(CROSS_LIBELF_PATCHES),cp $(addprefix Patches/,$(CROSS_LIBELF_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(CROSS_LIBELF_SPEC)

$(DEPDIR)/$(CROSS_LIBELF): $(CROSS_LIBELF_RPM)
	@rpm $(DRPM) --nodeps -Uhv $(lastword $^) && \
	touch $@

#
# CROSS GCC
#
CROSS_GCC = cross-sh4-gcc
CROSS_CPP = cross-sh4-cpp
CROSS_G++ = cross-sh4-g++
CROSS_PROTOIZE = cross-sh4-protoize
CROSS_LIBGCC = cross-sh4-libgcc
CROSS_GCC_VERSION = 4.8.2-132
CROSS_GCC_RAWVERSION = $(firstword $(subst -, ,$(CROSS_GCC_VERSION)))
CROSS_GCC_SPEC = stm-$(subst cross-sh4-,cross-,$(CROSS_GCC)).spec
CROSS_GCC_SPEC_PATCH = $(CROSS_GCC_SPEC).$(CROSS_GCC_VERSION).diff
CROSS_GCC_PATCHES = stm-cross-$(GCC).$(CROSS_GCC_VERSION).diff
CROSS_GCC_KERNELHEADERS = linux-kernel-headers
CROSS_GCC_INVALIDATE =
CROSS_GCC_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_GCC)-$(CROSS_GCC_VERSION).$(host_arch).rpm
CROSS_CPP_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_CPP)-$(CROSS_GCC_VERSION).$(host_arch).rpm
CROSS_G++_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_G++)-$(CROSS_GCC_VERSION).$(host_arch).rpm
CROSS_PROTOIZE_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_PROTOIZE)-$(CROSS_GCC_VERSION).$(host_arch).rpm
CROSS_LIBGCC_RPM = RPMS/$(host_arch)/$(STLINUX)-$(CROSS_LIBGCC)-$(CROSS_GCC_VERSION).$(host_arch).rpm

$(CROSS_GCC_RPM) $(CROSS_CPP_RPM) $(CROSS_G++_RPM) $(CROSS_PROTOIZE_RPM) $(CROSS_LIBGCC_RPM): \
		$(addprefix Patches/,$(CROSS_GCC_SPEC_PATCH) $(CROSS_GCC_PATCHES)) \
		$(archivedir)/$(STLINUX)-$(subst cross-sh4-,cross-,$(CROSS_GCC))-$(CROSS_GCC_VERSION).src.rpm \
		| $(archivedir)/$(STLINUX)-sh4-$(GLIBC)-$(GLIBC_VERSION).sh4.rpm \
		$(archivedir)/$(STLINUX)-sh4-$(GLIBC_DEV)-$(GLIBC_VERSION).sh4.rpm \
		$(if $(KERNELHEADERS),$(KERNELHEADERS)) \
		kernel-headers
	rpm $(DRPM) --nosignature --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(STM_RELOCATE)/devkit/sh4/target=$(targetprefix) $(word 1,$|) && \
	rpm $(DRPM) --nosignature --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(STM_RELOCATE)/devkit/sh4/target=$(targetprefix) $(word 2,$|)
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(CROSS_GCC_SPEC_PATCH),( cd SPECS && patch -p1 $(CROSS_GCC_SPEC) < $(buildprefix)/Patches/$(CROSS_GCC_SPEC_PATCH) ) &&) \
	$(if $(CROSS_GCC_PATCHES),cp $(addprefix Patches/,$(CROSS_GCC_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild  $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(CROSS_GCC_SPEC)
	rpm $(DRPM) --nodeps -ev $(STLINUX)-sh4-$(GLIBC_DEV) && \
	rpm $(DRPM) --nodeps -ev $(STLINUX)-sh4-$(GLIBC)

$(DEPDIR)/$(CROSS_GCC): $(CROSS_GCC_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	$(if $(CROSS_GCC_INVALIDATE),sh4-linux-objcopy -v --redefine-sym __ic_invalidate_syscall=__ic_invalidate $(prefix)/devkit/sh4/lib/gcc/sh4-linux/$(CROSS_GCC_RAWVERSION)/libgcc.a &&) \
	touch $@

$(DEPDIR)/$(CROSS_CPP): $(CROSS_CPP_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

$(DEPDIR)/$(CROSS_G++): $(CROSS_G++_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $< && \
	touch $@

$(DEPDIR)/$(CROSS_LIBGCC): \
$(DEPDIR)/%$(CROSS_LIBGCC): $(CROSS_LIBGCC_RPM) | $(DEPDIR)/%$(GLIBC)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb  $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	touch $@
	$(start_build)
	$(fromrpm_build)

$(DEPDIR)/$(CROSS_PROTOIZE): $(CROSS_PROTOIZE_RPM)
	@rpm  $(DRPM) --ignorearch --nodeps -Uhv $<
	touch $@

##############################                     #############################

#
# HOST-FILESYSTEM
#
host-filesystem:
	$(INSTALL) -d $(prefix)
	$(INSTALL) -d $(prefix)/work
	$(INSTALL) -d $(configprefix)
	$(INSTALL) -d $(devkitprefix)
	$(INSTALL) -d $(hostprefix)
	$(INSTALL) -d $(hostprefix)/{bin,doc,etc,include,info,lib,man,share,var}
#	ln -sf $(hostprefix)/lib $(hostprefix)/lib64
	$(INSTALL) -d $(hostprefix)/man/man{1..9}
	touch .deps/$@

#
# CROSS_FILESYSTEM
#
cross-sh4-filesystem:
	$(INSTALL) -d $(targetprefix)
	$(INSTALL) -d $(crossprefix)
	$(INSTALL) -d $(crossprefix)/{bin,doc,etc,include,lib,man,sh4-linux,share,var}
#	ln -s /$(crossprefix)/lib $(crossprefix)/lib64
	$(INSTALL) -d $(crossprefix)/man/man{1..9}
	$(INSTALL) -d $(crossprefix)/sh4-linux/{bin,include,lib}
	touch .deps/$@

#
# BOOTSTRAP-HOST
#
bootstrap-host: | \
	host-filesystem \
	cross-sh4-filesystem \
	$(CCACHE) \
	host_libtool \
	host-rpmconfig \
	host_autoconf \
	host_pkgconfig \
	host-autotools \
	host_automake \
	host-base-passwd \
	host-distributionutils \
	host-liblzo \
	host-mtd-utils \
	host-module-init-tools \
	host-flex
	touch .deps/$@

#
# BOOTSTRAP-CROSS
#
$(DEPDIR)/bootstrap-cross: | \
	bootstrap-host \
	cross-sh4-distributionutils \
	cross-sh4-gmp \
	cross-sh4-mpfr \
	cross-sh4-mpc \
	cross-sh4-binutils \
	cross-sh4-binutils-dev \
	cross-sh4-cpp \
	cross-sh4-gcc \
	cross-sh4-g++ \
	ipkg-utils \
	opkg-host \
	cross-sh4-libgcc
	touch -r $(CROSS_G++_RPM) $@

$(DEPDIR)/setup-cross-doc: \
	cross-binutils-doc \
	cross-sh4-cpp-doc \
	cross-sh4-gcc-doc \
	cross-sh4-g++-doc

$(DEPDIR)/setup-cross-optional: \
	cross-sh4-protoize

#
# host_libtool
#
BEGIN[[
host_libtool
  2.4.2
  libtool-{PV}
  extract:http://ftp.gnu.org/gnu/libtool/libtool-{PV}.tar.xz
  patch:file://libtool-{PV}-duckbox-branding.patch
  make:install
;
]]END

$(DEPDIR)/host_libtool: $(DEPENDS_libtool)
	$(PREPARE_host_libtool)
	cd $(DIR_host_libtool) && \
		./configure \
			lt_cv_sys_dlsearch_path="" \
			--prefix=$(hostprefix) && \
		$(MAKE) && \
		$(INSTALL_host_libtool)
	$(DISTCLEANUP_host_libtool)
	touch $@

#
# host_autoconf
#
BEGIN[[
host_autoconf
  2.64
  autoconf-{PV}
  extract:http://ftp.gnu.org/gnu/autoconf/autoconf-{PV}.tar.xz
  patch:file://autoconf-remove-usr-local-lib-from-m4.patch
  make:install
;
]]END

$(DEPDIR)/host_autoconf: $(DEPENDS_host_autoconf)
	$(PREPARE_host_autoconf)
	cd $(DIR_host_autoconf) && \
		./configure \
			--prefix=$(hostprefix) && \
		$(MAKE) && \
		$(INSTALL_host_autoconf)
	$(DISTCLEANUP_host_autoconf)
	touch $@

#
# host_automake
#
BEGIN[[
host_automake
  1.11.6
  automake-{PV}
  extract:http://ftp.gnu.org/gnu/automake/automake-{PV}.tar.xz
  patch:file://automake-py-compile-compile-only-optimized-byte-code.patch
  make:install
;
]]END

$(DEPDIR)/host_automake: $(DEPENDS_host_automake)
	$(PREPARE_host_automake)
	cd $(DIR_host_automake) && \
		./configure \
			--prefix=$(hostprefix) && \
		$(MAKE) && \
		$(INSTALL_host_automake)
	$(DISTCLEANUP_host_automake)
	touch $@

#
# host_pkgconfig
#			--with-system-include-path=$(TARGETINCLUDE)
#			--with-system-library-path=$(TARGETLIB)
BEGIN[[
host_pkgconfig
  0.28
  pkg-config-{PV}
  extract:http://pkgconfig.freedesktop.org/releases/pkg-config-{PV}.tar.gz
  make:install
;
]]END

$(DEPDIR)/host_pkgconfig: $(DEPENDS_host_pkgconfig)
	$(PREPARE_host_pkgconfig)
	cd $(DIR_host_pkgconfig) && \
		./configure \
			--prefix=$(hostprefix) \
			--with-pc_path=$(PKG_CONFIG_PATH) && \
		$(MAKE) && \
		$(INSTALL_host_pkgconfig)
		ln -sf $(hostprefix)/bin/pkg-config $(crossprefix)/bin/$(target)-pkg-config
	$(DISTCLEANUP_host_pkgconfig)
	touch $@
#
# Adapted etc files and etc read-write files
#
GLIBC_ADAPTED_ETC_FILES =
ETC_RW_FILES += host.conf init.d/nscd ld.so.cache ld.so.conf nsswitch.conf rpc

BASE_PASSWD_ADAPTED_ETC_FILES =
ETC_RW_FILES += passwd passwd.org group group.org shadow

#BASE_FILES_ADAPTED_ETC_FILES = hosts issue.net motd profile resolv.conf
BASE_FILES_ADAPTED_ETC_FILES = timezone.xml fstab issue.net motd profile resolv.conf
ETC_RW_FILES += hosts issue.net motd profile resolv.conf \
	inputrc issue skel

BUSYBOX_ADAPTED_ETC_FILES =
ETC_RW_FILES += shells shells.conf init.d/httpd

INITSCRIPTS_ADAPTED_ETC_FILES = hostname init.d/mountvirtfs init.d/checkroot.sh init.d/mountall.sh init.d/rcS$(if $(HL101),_$(HL101)) vdstandby.cfg
ETC_RW_FILES +=  nologin hostname \
		default/halt default/tmpfs \
		init.d/bootmisc.sh \
		init.d/halt init.d/hostname.sh init.d/mountnfs.sh \
		init.d/rc init.d/reboot init.d/rmnologin init.d/sendsigs init.d/single init.d/skeleton \
		init.d/stop-bootlogd init.d/umountfs init.d/umountnfs.sh init.d/urandom

OPENRDATE_ADAPTED_ETC_FILES = init.d/rdate.sh
ETC_RW_FILES += init.d/rdate.sh \
	localtime

NETBASE_ADAPTED_ETC_FILES = network/interfaces
ETC_RW_FILES += network/interfaces \
	gateways init.d/networking network network/options protocols services

MODULE_INIT_TOOLS_ADAPTED_ETC_FILES = modules init.d/module-init-tools
ETC_RW_FILES += modules init.d/module-init-tools

SYSVINIT_ADAPTED_ETC_FILES = inittab
#ETC_RW_FILES +=

AUTOFS_ADAPTED_ETC_FILES = auto.master timezone.xml default/autofs init.d/autofs
ETC_RW_FILES += auto.master timezone.xml default/autofs init.d/autofs \
	auto.misc

TCP_WRAPPERS_ADAPTED_ETC_FILES =
ETC_RW_FILES += hosts.allow hosts.deny

PORTMAP_ADAPTED_ETC_FILES =
ETC_RW_FILES += init.d/portmap

#NFS_UTILS_ADAPTED_ETC_FILES = init.d/nfs-common init.d/nfs-kernel-server
NFS_UTILS_ADAPTED_ETC_FILES = exports init.d/nfs-common init.d/nfs-kernel-server
ETC_RW_FILES += exports init.d/nfs-common init.d/nfs-kernel-server

E2FSPROGS_ADAPTED_ETC_FILES =
ETC_RW_FILES += mke2fs.conf

SG3_UTILS_ADAPTED_ETC_FILES = default/sg_down init.d/sg_down
ETC_RW_FILES += default/sg_down init.d/sg_down

DIVERSE_TOOLS_ADAPTED_ETC_FILES = default/swap init.d/allerlei init.d/swap default/framebuffer
ETC_RW_FILES += default/swap init.d/allerlei init.d/swap default/framebuffer

FUSE_ADAPTED_ETC_FILES = init.d/fuse
#ETC_RW_FILES +=


#
# Functions for copying customized etc files from cvs/cdk/root/etc into yaud targets and
# for updating init scripts in runlevel for yaud targets
#
define adapted-etc-files
	cd root/etc && \
	for i in $(1); do \
		[ -f $$i ] && $(INSTALL) -m644 $$i $(prefix)/$*cdkroot/etc/$$i || true; \
		[ "$${i%%/*}" = "init.d" ] && chmod 755 $(prefix)/$*cdkroot/etc/$$i || true; \
	done
endef

define initdconfig
	export HHL_CROSS_TARGET_DIR=$(prefix)/release && \
	cd $(prefix)/release/etc/init.d && \
		for s in $(1) ; do \
			$(hostprefix)/bin/target-initdconfig --add $$s || echo "Unable to enable initd service: $$s" ; \
		done && \
		rm *rpmsave 2>/dev/null || true
endef
#
# busybox
#

PKGR_busybox = r3
BEGIN[[
busybox
  1.22.1
  {PN}-{PV}
  extract:http://www.{PN}.net/downloads/{PN}-{PV}.tar.bz2
  nothing:file://{PN}-{PV}.config
  pmove:{PN}-{PV}/{PN}-{PV}.config:{PN}-{PV}/.config
  patch:file://{PN}-{PV}-ash.patch
  patch:file://{PN}-{PV}-date.patch
  patch:file://{PN}-{PV}-iplink.patch
  make:install:CONFIG_PREFIX=PKDIR
;
]]END

DESCRIPTION_busybox = "Utilities for embedded systems"

$(DEPDIR)/busybox: bootstrap $(DEPENDS_busybox)
	$(PREPARE_busybox)
	$(start_build)
	cd $(DIR_busybox) && \
		export CROSS_COMPILE=$(target)- && \
		$(MAKE) all \
			CROSS_COMPILE=$(target)- \
			CONFIG_EXTRA_CFLAGS="$(TARGET_CFLAGS)" && \
		$(INSTALL_busybox)
	install -m644 -D /dev/null $(PKDIR)/etc/shells
	export HHL_CROSS_TARGET_DIR=$(PKDIR) && $(hostprefix)/bin/target-shellconfig --add /bin/ash 5
	$(tocdk_build)
	$(toflash_build)
#	$(CLEANUP_busybox)
	touch $@

$(eval $(call guiconfig,busybox))
#
# libboost
#
BEGIN[[
libboost
  boost-1.55.0
  boost_1_55_0
  extract:http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.bz2
  patch:file://{PN}.diff
  remove:TARGETS/include/boost
  move:boost:TARGETS/usr/include/boost
;
]]END

$(DEPDIR)/libboost: bootstrap $(DEPENDS_libboost)
	$(PREPARE_libboost)
	cd $(DIR_libboost); \
		$(INSTALL_libboost)
	$(DISTCLEANUP_libboost)
	touch $@

#
# libz
#
BEGIN[[
libz
  1.2.8
  zlib-{PV}
  extract:http://zlib.net/zlib-{PV}.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libz = "Compression library implementing the deflate compression method found in gzip and PKZIP"
FILES_libz = \
/usr/lib/*

LIBZ_ORDER = binutils-dev

$(DEPDIR)/libz: bootstrap $(DEPENDS_libz) $(if $(LIBZ_ORDER),| $(LIBZ_ORDER))
	$(PREPARE_libz)
	$(start_build)
	cd $(DIR_libz); \
		ln -sf /bin/true ./ldconfig; \
		$(BUILDENV) \
		./configure \
			--prefix=/usr \
			--shared; \
		$(MAKE) all libz.a AR="$(target)-ar " CFLAGS="-fpic -O2"; \
		$(INSTALL_libz)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libz)
	touch $@

#
# libreadline
#
BEGIN[[
libreadline
  6.3
  readline-{PV}
  extract:ftp://ftp.cwru.edu/pub/bash/readline-{PV}.tar.gz
  patch:file://readline-6.3.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libreadline = GNU readline library
FILES_libreadline = \
/usr/lib

$(DEPDIR)/libreadline: bootstrap ncurses-dev $(DEPENDS_libreadline)
	$(PREPARE_libreadline)
	$(start_build)
	cd $(DIR_libreadline); \
		autoconf; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			bash_cv_must_reinstall_sighandlers=no \
			bash_cv_func_sigsetjmp=present \
			bash_cv_func_strcoll_broken=no \
			bash_cv_have_mbstate_t=yes \
			--prefix=/usr \
		$(MAKE) all \
		$(INSTALL_libreadline)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libreadline)
	touch $@

#
# libfreetype
#
BEGIN[[
libfreetype
  2.5.0.1
  freetype-{PV}
  extract:http://download.savannah.gnu.org/releases/freetype/freetype-{PV}.tar.bz2
  patch:file://libfreetype-{PV}.patch
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libfreetype = "libfreetype"

FILES_libfreetype = \
/usr/lib/*.so* \
/usr/bin/freetype-config

$(DEPDIR)/libfreetype: bootstrap libpng12 $(DEPENDS_libfreetype)
	$(PREPARE_libfreetype)
	$(start_build)
	cd $(DIR_libfreetype); \
		sed -i '/#define FT_CONFIG_OPTION_OLD_INTERNALS/d' include/freetype/config/ftoption.h; \
		sed -i '/^FONT_MODULES += \(type1\|cid\|pfr\|type42\|pcf\|bdf\)/d' modules.cfg; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		sed -e "s,^prefix=,prefix=$(targetprefix)," < builds/unix/freetype-config > $(crossprefix)/bin/freetype-config; \
		chmod 755 $(crossprefix)/bin/freetype-config; \
		ln -sf $(crossprefix)/bin/freetype-config $(crossprefix)/bin/$(target)-freetype-config; \
		ln -sf $(targetprefix)/usr/include/freetype2/freetype $(targetprefix)/usr/include/freetype; \
		$(INSTALL_libfreetype)
		rm -f $(targetprefix)/usr/bin/freetype-config
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libfreetype)
	touch $@

#
# lirc
#
BEGIN[[
lirc
  0.9.0
  {PN}-{PV}
  extract:http://prdownloads.sourceforge.net/{PN}/{PN}-{PV}.tar.gz
  patch:file://{PN}-{PV}-try_first_last_remote.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_lirc ="lirc"
PKGR_lirc = r3
FILES_lirc = \
/usr/bin/lircd \
/usr/lib/*.so* \
/etc/*lircd*

$(DEPDIR)/lirc: bootstrap $(DEPENDS_lirc)
	$(PREPARE_lirc)
	$(start_build)
	cd $(DIR_lirc); \
		$(BUILDENV) \
		ac_cv_path_LIBUSB_CONFIG= \
		CFLAGS="$(TARGET_CFLAGS) -Os -D__KERNEL_STRICT_NAMES" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--sbindir=\$${exec_prefix}/bin \
			--mandir=\$${prefix}/share/man \
			--with-kerneldir=$(buildprefix)/$(KERNEL_DIR) \
			--without-x \
			--with-devdir=/dev \
			--with-moduledir=/lib/modules \
			--with-major=61 \
			--with-driver=userspace \
			--enable-debug \
			--with-syslog=LOG_DAEMON \
			--enable-sandboxed; \
		$(MAKE) all; \
		$(INSTALL_lirc)
	$(tocdk_build)
	$(INSTALL_DIR) $(PKDIR)/etc
	$(INSTALL_DIR) $(PKDIR)/var/run/lirc/
	$(INSTALL_FILE) $(buildprefix)/root/etc/03_00_02.lircd.conf $(PKDIR)/etc/03_00_02.lircd.conf
	$(INSTALL_FILE) $(buildprefix)/root/etc/03_00_07.lircd.conf $(PKDIR)/etc/03_00_07.lircd.conf
	$(toflash_build)
	$(DISTCLEANUP_lirc)
	touch $@

#
# libjpeg
#
BEGIN[[
libjpeg
  8d
  jpeg-{PV}
  extract:http://www.ijg.org/files/jpegsrc.v{PV}.tar.gz
  patch:file://jpeg.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libjpeg = "libjpeg"

FILES_libjpeg = \
/usr/lib/*.so* 

$(DEPDIR)/libjpeg: bootstrap $(DEPENDS_libjpeg)
	$(PREPARE_libjpeg)
	$(start_build)
	cd $(DIR_libjpeg); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--enable-shared \
			--enable-static \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libjpeg)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libjpeg)
	touch $@

#
# libjpeg_turbo
#
BEGIN[[
libjpeg_turbo
  1.2.1
  libjpeg-turbo-{PV}
  extract:http://sourceforge.net/projects/libjpeg-turbo/files/1.2.1/libjpeg-turbo-1.2.1.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libjpeg_turbo = "libjpeg_turbo"

FILES_libjpeg_turbo = \
/usr/lib/*.so* 


$(DEPDIR)/libjpeg_turbo: bootstrap $(DEPENDS_libjpeg_turbo)
	$(PREPARE_libjpeg_turbo)
	$(start_build)
	cd $(DIR_libjpeg_turbo); \
		export CC=$(target)-gcc; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--enable-shared \
			--disable-static \
			--with-jpeg8 \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libjpeg_turbo)
	cd $(DIR_libjpeg_turbo); \
		make clean; \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--enable-shared \
			--disable-static \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libjpeg_turbo)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libjpeg_turbo)
	touch $@

#
# libpng12
#
BEGIN[[
libpng12
  1.2.50
  libpng-{PV}
  extract:http://ftp.de.debian.org/debian/pool/main/libp/libpng/libpng_{PV}.orig.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libpng12 = "libpng12"

FILES_libpng12 = \
/usr/lib/libpng12.so*

$(DEPDIR)/libpng12: bootstrap $(DEPENDS_libpng12)
	$(PREPARE_libpng12)
	$(start_build)
	cd $(DIR_libpng12); \
		./autogen.sh; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		export ECHO="echo"; \
		echo "Echo cmd =" $(ECHO); \
		$(MAKE) all; \
		sed -e "s,^prefix=,prefix=$(PKDIR)," < libpng-config > $(crossprefix)/bin/libpng-config; \
		chmod 755 $(crossprefix)/bin/libpng-config; \
		$(INSTALL_libpng12)
		rm -f $(PKDIR)/usr/bin/libpng*-config
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libpng12)
	touch $@

#
# libpng
#
BEGIN[[
libpng
  1.6.8
  {PN}-{PV}
  extract:http://prdownloads.sourceforge.net/libpng/{PN}/{PN}-{PV}.tar.xz
  nothing:file://{PN}.diff
  patch:file://{PN}-workaround_for_stmfb_alpha_error.patch
  make:install:prefix=PKDIR/usr
;
]]END

DESCRIPTION_libpng = "libpng"

FILES_libpng = \
/usr/lib/*.so*

$(DEPDIR)/libpng: bootstrap $(DEPENDS_libpng)
	$(PREPARE_libpng)
	$(start_build)
	cd $(DIR_libpng); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--enable-maintainer-mode \
			--prefix=/usr; \
		export ECHO="echo"; \
		echo "Echo cmd =" $(ECHO); \
		$(MAKE) all; \
		sed -e "s,^prefix=,prefix=$(PKDIR)," < libpng-config > $(crossprefix)/bin/libpng-config; \
		chmod 755 $(crossprefix)/bin/libpng-config; \
		$(INSTALL_libpng)
		rm -f $(PKDIR)/usr/bin/libpng*-config
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libpng)
	touch $@

#
# libungif
#
BEGIN[[
libungif
  4.1.4
  {PN}-{PV}
  extract:http://heanet.dl.sourceforge.net/sourceforge/giflib/{PN}-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libungif = "libungif"

FILES_libungif = \
/usr/lib/*.so*

$(DEPDIR)/libungif: bootstrap $(DEPENDS_libungif)
	$(PREPARE_libungif)
	$(start_build)
	cd $(DIR_libungif); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--without-x; \
		$(MAKE); \
		$(INSTALL_libungif)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libungif)
	touch $@

#
# libgif
#
BEGIN[[
libgif
  5.0.5
  giflib-{PV}
  extract:http://heanet.dl.sourceforge.net/sourceforge/giflib/giflib-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libgif = "libgif"

FILES_libgif = \
/usr/lib/*.so*

$(DEPDIR)/libgif: bootstrap $(DEPENDS_libgif)
	$(PREPARE_libgif)
	$(start_build)
	cd $(DIR_libgif); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--without-x; \
		$(MAKE); \
		$(INSTALL_libgif)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libgif)
	touch $@

#
# libcurl
#
BEGIN[[
curl
  7.35.0
  {PN}-{PV}
  extract:http://{PN}.haxx.se/download/{PN}-{PV}.tar.bz2
  patch:file://lib{PN}.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_curl = "Curl is a command line tool for transferring data specified with URL syntax"

FILES_curl = \
/usr/lib/*.so* \
/usr/bin/curl

$(DEPDIR)/curl: bootstrap openssl rtmpdump $(DEPENDS_curl)
	$(PREPARE_curl)
	$(start_build)
	cd $(DIR_curl); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--with-ssl \
			--disable-debug \
			--disable-verbose \
			--disable-manual \
			--mandir=/usr/share/man \
			--with-random; \
		$(MAKE) all; \
		sed -e "s,^prefix=,prefix=$(targetprefix)," < curl-config > $(crossprefix)/bin/curl-config; \
		chmod 755 $(crossprefix)/bin/curl-config; \
		$(INSTALL_curl)
		rm -f $(PKDIR)/usr/bin/curl-config
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_curl)
	touch $@

#
# libfribidi
#
BEGIN[[
libfribidi
  0.19.6
  fribidi-{PV}
  extract:http://fribidi.org/download/fribidi-{PV}.tar.bz2
  patch:file://glib.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libfribidi = "libfribidi"

FILES_libfribidi = \
/usr/lib/*.so* \
/usr/bin/*

$(DEPDIR)/libfribidi: bootstrap $(DEPENDS_libfribidi)
	$(PREPARE_libfribidi)
	$(start_build)
	cd $(DIR_libfribidi); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
		$(MAKE) all; \
		$(INSTALL_libfribidi)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libfribidi)
	touch $@

#
# libsigc
#
BEGIN[[
libsigc
  1.2.7
  {PN}++-{PV}
  extract:http://ftp.gnome.org/pub/GNOME/sources/{PN}++/1.2/{PN}++-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libsigc = "libsigc"

FILES_libsigc = \
/usr/lib/*.so*

$(DEPDIR)/libsigc: bootstrap libstdc++-dev $(DEPENDS_libsigc)
	$(PREPARE_libsigc)
	$(start_build)
	cd $(DIR_libsigc); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--disable-checks; \
		$(MAKE) all; \
		$(INSTALL_libsigc)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libsigc)
	touch $@

#
# libmad
#
BEGIN[[
libmad
  0.15.1b
  {PN}-{PV}
  extract:ftp://ftp.mars.org/pub/mpeg/{PN}-{PV}.tar.gz
  patch:file://{PN}.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libmad = "libmad - MPEG audio decoder library"

FILES_libmad = \
/usr/lib/*.so*

$(DEPDIR)/libmad: bootstrap $(DEPENDS_libmad)
	$(PREPARE_libmad)
	$(start_build)
	cd $(DIR_libmad); \
		aclocal -I $(hostprefix)/share/aclocal; \
		autoconf; \
		autoheader; \
		automake --foreign; \
		libtoolize --force; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--disable-debugging \
			--enable-shared=yes \
			--enable-speed \
			--enable-sso; \
		$(MAKE) all; \
		$(INSTALL_libmad)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libmad)
	touch $@

#
# libid3tag
#
BEGIN[[
libid3tag
  0.15.1b
  {PN}-{PV}
  extract:ftp://ftp.mars.org/pub/mpeg/{PN}-{PV}.tar.gz
  patch:file://{PN}.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libid3tag = "libid3tag"

FILES_libid3tag = \
/usr/lib/*.so*

$(DEPDIR)/libid3tag: bootstrap $(DEPENDS_libid3tag)
	$(PREPARE_libid3tag)
	$(start_build)
	cd $(DIR_libid3tag); \
		touch NEWS AUTHORS ChangeLog; \
		autoreconf -fi; \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--enable-shared=yes; \
		$(MAKE) all; \
		$(INSTALL_libid3tag)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libid3tag)
	touch $@

#
# libvorbisidec
#
BEGIN[[
libvorbisidec
  1.0.2+svn16259
  {PN}-{PV}
  extract:http://ftp.debian.org/debian/pool/main/libv/{PN}/{PN}_{PV}.orig.tar.gz
  patch:file://tremor.diff
  make:install:DESTDIR=PKDIR
;
]]END
DESCRIPTION_libvorbisidec = "libvorbisidec"

FILES_libvorbisidec = \
/usr/lib/*.so*

$(DEPDIR)/libvorbisidec: bootstrap $(DEPENDS_libvorbisidec)
	$(PREPARE_libvorbisidec)
	$(start_build)
	cd $(DIR_libvorbisidec); \
		$(BUILDENV) \
		./autogen.sh \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libvorbisidec)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libvorbisidec)
	touch $@

#
# libffi
#
BEGIN[[
libffi
  3.1
  {PN}-{PV}
  extract:ftp://sourceware.org/pub/{PN}/{PN}-{PV}.tar.gz
  patch:file://{PN}-{PV}.patch
  make:install:DESTDIR=PKDIR
;
]]END
DESCRIPTION_libffi = libffi

FILES_libffi = \
/usr/lib/*.so*

$(DEPDIR)/libffi: bootstrap libjpeg lcms $(DEPENDS_libffi)
	$(PREPARE_libffi)
	$(start_build)
	cd $(DIR_libffi); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--target=$(target) \
			--disable-static \
			--enable-builddir=libffi \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libffi)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libffi)
	touch $@

#
# libglib2
# You need libglib2.0-dev on host system
#
BEGIN[[
glib2
  2.37.1
  glib-{PV}
  extract:http://ftp.acc.umu.se/pub/GNOME/sources/glib/2.37/glib-{PV}.tar.xz
  patch:file://glib-{PV}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_glib2 = "libglib2"

FILES_glib2 = \
/usr/lib/*.so*

DESCRIPTION_glib2 = "libglib2"

FILES_glib2 = \
/usr/lib/*.so*

$(DEPDIR)/glib2: bootstrap libffi $(DEPENDS_glib2)
	$(PREPARE_glib2)
	$(start_build)
	echo "glib_cv_va_copy=no" > $(DIR_glib2)/config.cache
	echo "glib_cv___va_copy=yes" >> $(DIR_glib2)/config.cache
	echo "glib_cv_va_val_copy=yes" >> $(DIR_glib2)/config.cache
	echo "ac_cv_func_posix_getpwuid_r=yes" >> $(DIR_glib2)/config.cache
	echo "ac_cv_func_posix_getgrgid_r=yes" >> $(DIR_glib2)/config.cache
	echo "glib_cv_stack_grows=no" >> $(DIR_glib2)/config.cache
	echo "glib_cv_uscore=no" >> $(DIR_glib2)/config.cache
	cd $(DIR_glib2); \
		$(BUILDENV) \
		PKG_CONFIG=$(hostprefix)/bin/pkg-config \
		./configure \
			--cache-file=config.cache \
			--disable-gtk-doc \
			--with-threads="posix" \
			--enable-static \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--mandir=/usr/share/man; \
		$(MAKE) all; \
		$(INSTALL_glib2)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_glib2)
	touch $@

#
# libiconv
#
BEGIN[[
libiconv
  1.14
  {PN}-{PV}
  extract:http://ftp.gnu.org/gnu/{PN}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libiconv = "libiconv"

FILES_libiconv = \
/usr/lib/*.so* \
/usr/bin/iconv

$(DEPDIR)/libiconv: bootstrap $(DEPENDS_libiconv)
	$(PREPARE_libiconv)
	$(start_build)
	cd $(DIR_libiconv); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		cp ./srcm4/* $(hostprefix)/share/aclocal/; \
		$(INSTALL_libiconv)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libiconv)
	touch $@

#
# libmng
#
BEGIN[[
libmng
  2.0.2
  {PN}-{PV}
  extract:http://dfn.dl.sourceforge.net/sourceforge/{PN}/{PN}-{PV}.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libmng = "libmng - Multiple-image Network Graphics"

FILES_libmng = \
/usr/lib/*.so*

$(DEPDIR)/libmng: bootstrap libjpeg lcms $(DEPENDS_libmng)
	$(PREPARE_libmng)
	$(start_build)
	cd $(DIR_libmng); \
		cat unmaintained/autogen.sh | tr -d \\r > autogen.sh && chmod 755 autogen.sh; \
		[ ! -x ./configure ] && ./autogen.sh --help || true; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--enable-shared \
			--enable-static \
			--with-zlib \
			--with-jpeg \
			--with-gnu-ld \
			--with-lcms; \
		$(MAKE); \
		$(INSTALL_libmng)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libmng)
	touch $@
#
# lcms
#
BEGIN[[
lcms
  2.5
  lcms2-{PV}
  extract:http://sourceforge.net/projects/lcms/files/lcms/{PV}/lcms2-{PV}.tar.gz
  patch:file://{PN}2.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_lcms = "lcms"

FILES_lcms = \
/usr/lib/*

$(DEPDIR)/lcms: bootstrap libjpeg $(DEPENDS_lcms)
	$(PREPARE_lcms)
	$(start_build)
	cd $(DIR_lcms); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--enable-shared \
			--enable-static; \
		$(MAKE); \
		$(INSTALL_lcms)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_lcms)
	touch $@
#
# directfb
#
BEGIN[[
directfb
  1.4.11
  DirectFB-{PV}
  extract:http://{PN}.org/downloads/Core/DirectFB-1.4/DirectFB-{PV}.tar.gz
  patch:file://{PN}-{PV}+STM2010.12.15-4.diff
  patch:file://{PN}-{PV}+STM2010.12.15-4.no-vt.diff
  patch:file://{PN}-libpng.diff
  patch:file://{PN}-{PV}+STM2010.12.15-4.enigma2remote.diff
  make:install:DESTDIR=PKDIR:LD=sh4-linux-ld
;
]]END

DESCRIPTION_directfb = "directfb"

FILES_directfb = \
/usr/lib/*.so* \
/usr/lib/directfb-1.4-5/gfxdrivers/*.so* \
/usr/lib/directfb-1.4-5/inputdrivers/*.so* \
/usr/lib/directfb-1.4-5/interfaces/*.so* \
/usr/lib/directfb-1.4-5/systems/libdirectfb_stmfbdev.so \
/usr/lib/directfb-1.4-5/wm/*.so* \
/usr/bin/*

$(DEPDIR)/directfb: bootstrap libfreetype $(DEPENDS_directfb)
	$(PREPARE_directfb)
	$(start_build)
	cd $(DIR_directfb); \
		cp $(hostprefix)/share/libtool/config/ltmain.sh .; \
		cp $(hostprefix)/share/libtool/config/ltmain.sh ..; \
		libtoolize -f -c; \
		autoreconf --verbose --force --install -I$(hostprefix)/share/aclocal; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--enable-static \
			--disable-sdl \
			--disable-x11 \
			--disable-devmem \
			--disable-multi \
			--with-gfxdrivers=stgfx \
			--with-inputdrivers=linuxinput,enigma2remote \
			--without-software \
			--enable-stmfbdev \
			--disable-fbdev \
			--enable-mme=yes; \
			export top_builddir=`pwd`; \
		$(MAKE); \
		$(INSTALL_directfb)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_directfb)
	touch $@

#
# DFB++
#
BEGIN[[
dfbpp
  1.2.0
  DFB++-{PV}
  extract:http://www.directfb.org/downloads/Extras/DFB++-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END
DESCRIPTION_dfbpp = ""

FILES_dfbpp = \
/usr/lib/*.so*

$(DEPDIR)/dfbpp: bootstrap libjpeg directfb $(DEPENDS_dfbpp)
	$(PREPARE_dfbpp)
	$(start_build)
	cd $(DIR_dfbpp); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_dfbpp)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_dfbpp)
	touch $@

#
# LIBSTGLES
#
BEGIN[[
libstgles
  git
  {PN}-{PV}
  plink:../apps/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libstgles = "libstgles"
SRC_URI_libstgles = "https://code.google.com/p/tdt-amiko/"
PKGR_libstgles =r1
FILES_libstgles = \
/usr/lib/*

$(DEPDIR)/libstgles: bootstrap directfb $(DEPENDS_libstgles)
	$(PREPARE_libstgles)
	$(start_build)
	cd $(DIR_libstgles); \
		cp --remove-destination $(hostprefix)/share/libtool/config/ltmain.sh .; \
		aclocal -I $(hostprefix)/share/aclocal; \
		autoconf; \
		automake --foreign --add-missing; \
		libtoolize --force; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) $(MAKE_OPTS); \
		$(INSTALL_libstgles)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libstgles)
	touch $@

#
# libexpat
#
BEGIN[[
libexpat
  2.1.0
  expat-{PV}
  extract:http://prdownloads.sourceforge.net/sourceforge/expat/expat-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END
DESCRIPTION_libexpat = "Expat is an XML parser library written in C. It is a stream-oriented parser in which an application registers handlers for things the parser might find in the XML document"

FILES_libexpat = \
/usr/lib/libexpat.so* \
/usr/bin/xmlwf

$(DEPDIR)/libexpat: bootstrap $(DEPENDS_libexpat)
	$(PREPARE_libexpat)
	$(start_build)
	cd $(DIR_libexpat); \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libexpat)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libexpat)
	touch $@

#
# fontconfig
#
BEGIN[[
fontconfig
  2.11.0
  {PN}-{PV}
  extract:http://{PN}.org/release/{PN}-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END
DESCRIPTION_fontconfig = "Fontconfig is a library for configuring and customizing font access."

FILES_fontconfig = \
/etc \
/usr/lib/*

$(DEPDIR)/fontconfig: bootstrap libexpat libfreetype $(DEPENDS_fontconfig)
	$(PREPARE_fontconfig)
	$(start_build)
	cd $(DIR_fontconfig); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--with-arch=sh4 \
			--with-freetype-config=$(crossprefix)/bin/freetype-config \
			--with-expat-includes=$(targetprefix)/usr/include \
			--with-expat-lib=$(targetprefix)/usr/lib \
			--sysconfdir=/etc \
			--localstatedir=/var \
			--disable-docs \
			--without-add-fonts; \
		$(MAKE); \
		$(INSTALL_fontconfig)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_fontconfig)
	touch $@

#
# libxmlccwrap
#
BEGIN[[
libxmlccwrap
  0.0.12
  {PN}-{PV}
  extract:http://www.ant.uni-bremen.de/whomes/rinas/{PN}/download/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libxmlccwrap = "libxmlccwrap is a small C++ wrapper around libxml2 and libxslt "

FILES_libxmlccwrap = \
/usr/lib/*.so*

$(DEPDIR)/libxmlccwrap: bootstrap libxslt $(DEPENDS_libxmlccwrap)
	$(PREPARE_libxmlccwrap)
	$(start_build)
	cd $(DIR_libxmlccwrap); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--target=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libxmlccwrap); \
		sed -e "/^dependency_libs/ s,-L/usr/lib,-L$(PKDIR)/usr/lib,g" -i $(PKDIR)/usr/lib/libxmlccwrap.la; \
		sed -e "/^dependency_libs/ s, /usr/lib, $(PKDIR)/usr/lib,g" -i $(PKDIR)/usr/lib/libxmlccwrap.la
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libxmlccwrap)
	touch $@

#
# a52dec
#
BEGIN[[
a52dec
  0.7.4
  {PN}-{PV}
  extract:http://liba52.sourceforge.net/files/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_a52dec = "liba52 is a free library for decoding ATSC A/52 streams. It is released under the terms of the GPL license"

FILES_a52dec = \
/usr/lib/*

$(DEPDIR)/a52dec: bootstrap $(DEPENDS_a52dec)
	$(PREPARE_a52dec)
	$(start_build)
	cd $(DIR_a52dec); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_a52dec)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_a52dec)
	touch $@

#
# libdvdcss
#
BEGIN[[
libdvdcss
  1.2.13
  {PN}-{PV}
  extract:http://download.videolan.org/pub/{PN}/{PV}/{PN}-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libdvdcss = "libdvdcss"

FILES_libdvdcss = \
/usr/lib/libdvdcss.so*

$(DEPDIR)/libdvdcss: bootstrap $(DEPENDS_libdvdcss)
	$(PREPARE_libdvdcss)
	$(start_build)
	cd $(DIR_libdvdcss); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--disable-doc \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libdvdcss)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libdvdcss)
	touch $@

#
# libdvdnav
#
BEGIN[[
libdvdnav
  4.2.1
  {PN}-{PV}
  extract:http://dvdnav.mplayerhq.hu/releases/{PN}-{PV}.tar.xz
  patch:file://{PN}_{PV}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libdvdnav = "libdvdnav"

FILES_libdvdnav = \
/usr/lib/*.so* \
/usr/bin/dvdnav-config

$(DEPDIR)/libdvdnav: bootstrap libdvdread $(DEPENDS_libdvdnav)
	$(PREPARE_libdvdnav)
	$(start_build)
	cd $(DIR_libdvdnav); \
		$(BUILDENV) \
		cp $(hostprefix)/share/libtool/config/ltmain.sh .; \
		autoreconf --verbose --force --install -I$(hostprefix)/share/aclocal; \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--enable-static \
			--enable-shared \
			--with-dvdread-config=$(crossprefix)/bin/dvdread-config; \
		$(MAKE) all; \
		sed -e "s,^prefix=,prefix=$(targetprefix)," < misc/dvdnav-config > $(crossprefix)/bin/dvdnav-config; \
		chmod 755 $(crossprefix)/bin/dvdnav-config; \
		$(INSTALL_libdvdnav)
		rm -f $(targetprefix)/usr/bin/dvdnav-config
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libdvdnav)
	touch $@

#
# libdvdread
#
BEGIN[[
libdvdread
  4.2.1
  {PN}-{PV}
  extract:http://dvdnav.mplayerhq.hu/releases/{PN}-{PV}.tar.xz
  patch:file://{PN}_{PV}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libdvdread = "libdvdread"

FILES_libdvdread = \
/usr/lib/*.so* \
/usr/bin/dvdread-config

$(DEPDIR)/libdvdread: bootstrap $(DEPENDS_libdvdread)
	$(PREPARE_libdvdread)
	$(start_build)
	cd $(DIR_libdvdread); \
		cp $(hostprefix)/share/libtool/config/ltmain.sh .; \
		cp $(hostprefix)/share/libtool/config/ltmain.sh ..; \
		autoreconf -f -i -I$(hostprefix)/share/aclocal; \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--enable-static \
			--enable-shared \
			--prefix=/usr; \
		$(MAKE) all; \
		sed -e "s,^prefix=,prefix=$(targetprefix)," < misc/dvdread-config > $(crossprefix)/bin/dvdread-config; \
		chmod 755 $(crossprefix)/bin/dvdread-config; \
		$(INSTALL_libdvdread)
		rm -f $(targetprefix)/usr/bin/dvdread-config
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libdvdread)
	touch $@

#
# ffmpeg
#
BEGIN[[
ffmpeg
  2.2.2
  {PN}-{PV}
  extract:http://{PN}.org/releases/{PN}-{PV}.tar.bz2
  patch:file://{PN}-{PV}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_ffmpeg = "ffmpeg"

FILES_ffmpeg = \
/usr/lib/*.so* \
/sbin/ffmpeg

$(DEPDIR)/ffmpeg: bootstrap libass libaacplus libfaac rtmpdump libx264 $(DEPENDS_ffmpeg)
	$(PREPARE_ffmpeg)
	$(start_build)
	cd $(DIR_ffmpeg); \
		PKG_CONFIG_PATH=$(targetprefix)/usr/lib/pkgconfig \
		./configure \
		--disable-static \
		--enable-shared \
		--disable-runtime-cpudetect \
		--disable-ffserver \
		--disable-ffplay \
		--disable-ffprobe \
		--disable-doc \
		--disable-htmlpages \
		--disable-manpages \
		--disable-podpages \
		--disable-txtpages \
		--disable-asm \
		--disable-altivec \
		--disable-amd3dnow \
		--disable-amd3dnowext \
		--disable-mmx \
		--disable-mmxext \
		--disable-sse \
		--disable-sse2 \
		--disable-sse3 \
		--disable-ssse3 \
		--disable-sse4 \
		--disable-sse42 \
		--disable-avx \
		--disable-fma4 \
		--disable-armv5te \
		--disable-armv6 \
		--disable-armv6t2 \
		--disable-vfp \
		--disable-neon \
		--disable-vis \
		--disable-inline-asm \
		--disable-yasm \
		--disable-mips32r2 \
		--disable-mipsdspr1 \
		--disable-mipsdspr2 \
		--disable-mipsfpu \
		--disable-fast-unaligned \
		--disable-muxers \
		--enable-muxer=flac \
		--enable-muxer=mp3 \
		--enable-muxer=h261 \
		--enable-muxer=h263 \
		--enable-muxer=h264 \
		--enable-muxer=image2 \
		--enable-muxer=mpeg1video \
		--enable-muxer=mpeg2video \
		--enable-muxer=ogg \
		--disable-encoders \
		--enable-encoder=aac \
		--enable-encoder=h261 \
		--enable-encoder=h263 \
		--enable-encoder=h263p \
		--enable-encoder=ljpeg \
		--enable-encoder=mjpeg \
		--enable-encoder=mpeg1video \
		--enable-encoder=mpeg2video \
		--enable-encoder=png \
		--disable-decoders \
		--enable-decoder=aac \
		--enable-decoder=dvbsub \
		--enable-decoder=flac \
		--enable-decoder=pcm_s16le \
		--enable-decoder=flv \
		--enable-decoder=h261 \
		--enable-decoder=h263 \
		--enable-decoder=h263i \
		--enable-decoder=h263p \
		--enable-decoder=h264 \
		--enable-decoder=h264_crystalhd \
		--enable-decoder=iff_byterun1 \
		--enable-decoder=mjpeg \
		--enable-decoder=mp3 \
		--enable-decoder=mpegvideo \
		--enable-decoder=mpeg1video \
		--enable-decoder=mpeg2video \
		--enable-decoder=mpeg2video_crystalhd \
		--enable-decoder=mpeg4 \
		--enable-decoder=mpeg4_crystalhd \
		--enable-decoder=png \
		--enable-decoder=theora \
		--enable-decoder=vorbis \
		--enable-parser=mjpeg \
		--enable-demuxer=mjpeg \
		--enable-demuxer=wav \
		--enable-demuxer=hls \
		--enable-protocol=file \
		--enable-protocol=hls \
		--enable-protocol=udp \
		--enable-libaacplus \
		--enable-libfaac \
		--enable-nonfree \
		--enable-libass \
		--enable-libx264 \
		--enable-gpl \
		--enable-demuxer=rtsp \
		--disable-indevs \
		--disable-outdevs \
		--enable-avresample \
		--enable-pthreads \
		--enable-bzlib \
		--disable-zlib \
		--disable-bsfs \
		--enable-librtmp \
		--pkg-config="pkg-config" \
		--disable-parser=hevc \
		--enable-cross-compile \
		--cross-prefix=$(target)- \
		--target-os=linux \
		--arch=sh4 \
		--disable-debug \
		--extra-cflags="-fno-strict-aliasing" \
		--enable-stripping \
		--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_ffmpeg)
	$(tocdk_build)
	mv $(PKDIR)/usr/bin $(PKDIR)/sbin
	$(toflash_build)
	$(DISTCLEANUP_ffmpeg)
	touch $@

#
# libass
#
BEGIN[[
libass
  0.10.2
  {PN}-{PV}
  extract:http://{PN}.googlecode.com/files/{PN}-{PV}.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libass = "libass"

FILES_libass = \
/usr/lib/*.so*

$(DEPDIR)/libass: bootstrap libfreetype libfribidi $(DEPENDS_libass)
	$(PREPARE_libass)
	$(start_build)
	cd $(DIR_libass); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--host=$(target) \
			--disable-fontconfig \
			--disable-enca \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libass)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libass)
	touch $@

#
# WebKitDFB
#
BEGIN[[
webkitdfb
  2010-11-18
  {PN}_{PV}
  extract:http://www.duckbox.info/files/packages/{PN}_{PV}.tar.gz
  patch:file://{PN}.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_webkitdfb = "webkitdfb"
RDEPENDS_webkitdfb = lite enchant fontconfig sqlite cairo enchant
FILES_webkitdfb = \
/usr/lib*

$(DEPDIR)/webkitdfb: bootstrap glib2 icu4c libxml2 enchant lite curl fontconfig sqlite libsoup cairo libjpeg $(DEPENDS_webkitdfb)
	$(PREPARE_webkitdfb)
	$(start_build)
	export PATH=$(buildprefix)/$(DIR_icu4c)/host/config:$(PATH); \
	cd $(DIR_webkitdfb); \
		$(BUILDENV) \
		./autogen.sh \
			--with-target=directfb \
			--without-gtkplus \
			--host=$(target) \
			--prefix=/usr \
			--with-cairo-directfb \
			--disable-shared-workers \
			--enable-optimizations \
			--disable-channel-messaging \
			--disable-javascript-debugger \
			--enable-offline-web-applications \
			--enable-dom-storage \
			--enable-database \
			--disable-eventsource \
			--enable-icon-database \
			--enable-datalist \
			--disable-video \
			--enable-svg \
			--enable-xpath \
			--disable-xslt \
			--disable-dashboard-support \
			--disable-geolocation \
			--disable-workers \
			--disable-web-sockets \
			--with-networking-backend=soup; \
		$(MAKE); \
		$(INSTALL_webkitdfb)
	$(tocdk_build)
	$(e2extra_build)
	$(DISTCLEANUP_webkitdfb)
	touch $@

#
# icu4c
#
BEGIN[[
icu4c
  4_4_1
  icu/source
  extract:http://download.icu-project.org/files/{PN}/4.4.1/{PN}-4_4_1-src.tgz
  nothing:file://{PN}-4_4_1_locales.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_icu4c = "icu4c"

FILES_icu4c = \
/usr/lib/*.so* \
/usr/bin/* \
/usr/sbin/*

$(DEPDIR)/icu4c: bootstrap $(DEPENDS_icu4c)
	$(PREPARE_icu4c)
	$(start_build)
	cd $(DIR_icu4c); \
		rm data/mappings/ucm*.mk; \
		patch -p1 < $(buildprefix)/Patches/icu4c-4_4_1_locales.patch;
		echo "Building host icu"
		mkdir -p $(DIR_icu4c)/host; \
		cd $(DIR_icu4c)/host; \
		sh ../configure --disable-samples --disable-tests; \
		unset TARGET; \
		make
		echo "Building cross icu"
		cd $(DIR_icu4c); \
		$(BUILDENV) \
		./configure \
			--with-cross-build=$(buildprefix)/$(DIR_icu4c)/host \
			--host=$(target) \
			--prefix=/usr \
			--disable-extras \
			--disable-layout \
			--disable-tests \
			--disable-samples; \
		unset TARGET; \
		$(INSTALL_icu4c)
	$(tocdk_build)
	$(e2extra_build)
	$(DISTCLEANUP_icu4c)
	touch $@

#
# enchant
#
BEGIN[[
enchant
  1.5.0
  {PN}-{PV}
  extract:http://www.abisource.com/downloads/{PN}/{PV}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_enchant = "libenchant -- Generic spell checking library"

FILES_enchant = \
/usr/lib/*.so* \
/usr/bin/*

$(DEPDIR)/enchant: bootstrap $(DEPENDS_enchant)
	$(PREPARE_enchant)
	$(start_build)
	cd $(DIR_enchant); \
		libtoolize -f -c; \
		autoreconf --verbose --force --install -I$(hostprefix)/share/aclocal; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--disable-aspell \
			--disable-ispell \
			--disable-myspell \
			--disable-zemberek \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) LD=$(target)-ld; \
		$(INSTALL_enchant)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_enchant)
	touch $@

#
# lite
#
BEGIN[[
lite
  0.9.0
  {PN}-{PV}+git0.7982ccc
  extract:http://www.duckbox.info/files/packages/{PN}-{PV}+git0.7982ccc.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_lite = "LiTE is a Toolkit Engine"

FILES_lite = \
/usr/lib/*.so* \
/usr/bin/*

$(DEPDIR)/lite: bootstrap directfb $(DEPENDS_lite)
	$(PREPARE_lite)
	$(start_build)
	cd $(DIR_lite); \
		cp $(hostprefix)/share/libtool/config/ltmain.sh ..; \
		libtoolize -f -c; \
		autoreconf --verbose --force --install -I$(hostprefix)/share/aclocal; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--disable-debug; \
		$(MAKE); \
		$(INSTALL_lite)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_lite)
	touch $@

#
# sqlite
#
BEGIN[[
sqlite
  3.8.0
  {PN}-autoconf-3080300
  extract:http://www.sqlite.org/2014/sqlite-autoconf-3080300.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_sqlite = "sqlite"

FILES_sqlite = \
/usr/lib/*.so* \
/usr/bin/sqlite3

$(DEPDIR)/sqlite: bootstrap $(DEPENDS_sqlite)
	$(PREPARE_sqlite)
	$(start_build)
	cd $(DIR_sqlite); \
		$(BUILDENV) \
		libtoolize -f -c; \
		autoreconf --verbose --force --install -I$(hostprefix)/share/aclocal; \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--disable-tcl \
			--disable-debug \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_sqlite)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_sqlite)
	touch $@

#
# libsoup
#
BEGIN[[
libsoup
  2.43.92
  {PN}-{PV}
  extract:http://ftp.acc.umu.se/pub/GNOME/sources/libsoup/2.43/{PN}-{PV}.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libsoup = "libsoup is an HTTP client/server library"

FILES_libsoup = \
/usr/lib/*.so*

$(DEPDIR)/libsoup: bootstrap $(DEPENDS_libsoup)
	$(PREPARE_libsoup)
	$(start_build)
	cd $(DIR_libsoup); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--disable-more-warnings \
			--without-gnome; \
		$(MAKE); \
		$(INSTALL_libsoup)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libsoup)
	touch $@

#
# pixman
#
BEGIN[[
pixman
  0.32.4
  {PN}-{PV}
  extract:http://cairographics.org/releases/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_pixman = "pixman is a library that provides low-level pixel manipulation"

FILES_pixman = \
/usr/lib/*.so*

$(DEPDIR)/pixman: bootstrap $(DEPENDS_pixman)
	$(PREPARE_pixman)
	$(start_build)
	cd $(DIR_pixman); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_pixman)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_pixman)
	touch $@

#
# cairo
#
BEGIN[[
cairo
  1.12.16
  {PN}-{PV}
  extract:http://cairographics.org/releases/{PN}-{PV}.tar.xz
  patch:file://{PN}-{PV}.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_cairo = "Cairo - Multi-platform 2D graphics library"

FILES_cairo = \
/usr/lib/*.so*

$(DEPDIR)/cairo: bootstrap libpng pixman $(DEPENDS_cairo)
	$(PREPARE_cairo)
	$(start_build)
	cd $(DIR_cairo); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--disable-gtk-doc \
			--enable-ft=yes \
			--enable-png=yes \
			--enable-ps=no \
			--enable-pdf=no \
			--enable-svg=no \
			--disable-glitz \
			--disable-xcb \
			--disable-xlib \
			--enable-directfb \
			--program-suffix=-directfb; \
		$(MAKE); \
		$(INSTALL_cairo)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_cairo)
	touch $@

#
# libogg
#
BEGIN[[
libogg
  1.3.1
  {PN}-{PV}
  extract:http://downloads.xiph.org/releases/ogg/{PN}-{PV}.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libogg = "distribution includes libogg and nothing else"

FILES_libogg = \
/usr/lib/*.so*

$(DEPDIR)/libogg: bootstrap $(DEPENDS_libogg)
	$(PREPARE_libogg)
	$(start_build)
	cd $(DIR_libogg); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libogg)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libogg)
	touch $@

#
# libflac
#
BEGIN[[
libflac
  1.2.1
  flac-{PV}
  extract:http://downloads.sourceforge.net/flac/flac-{PV}.tar.gz
  patch:file://flac-{PV}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libflac = "libflac is Open Source lossless audio codec"

FILES_libflac = \
/usr/lib/*.so* \
/usr/bin/*

$(DEPDIR)/libflac: bootstrap $(DEPENDS_libflac)
	$(PREPARE_libflac)
	$(start_build)
	cd $(DIR_libflac); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--disable-ogg \
			--disable-oggtest \
			--disable-id3libtest \
			--disable-asm-optimizations \
			--disable-doxygen-docs \
			--disable-xmms-plugin \
			--without-xmms-prefix \
			--without-xmms-exec-prefix \
			--without-libiconv-prefix \
			--without-id3lib \
			--with-ogg-includes=. \
			--disable-cpplibs; \
		$(MAKE); \
		$(INSTALL_libflac)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libflac)
	touch $@


##############################   PYTHON   #####################################

#
# elementtree
#
BEGIN[[
elementtree
  1.2.7-20070827-preview
  {PN}-{PV}
  extract:http://effbot.org/media/downloads/{PN}-{PV}.zip
  #patch:file://elementtree3.patch
;
]]END

DESCRIPTION_elementtree = "Provides light-weight components for working with XML"
FILES_elementtree = \
$(PYTHON_DIR)

$(DEPDIR)/elementtree: bootstrap $(DEPENDS_elementtree)
	$(PREPARE_elementtree)
	$(start_build)
	cd $(DIR_elementtree); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(remove_pyo)
	$(toflash_build)
	$(DISTCLEANUP_elementtree)
	touch $@

#
# libxml2
#
BEGIN[[
libxml2
  2.9.0
  {PN}-{PV}
  extract:http://xmlsoft.org/sources/{PN}-{PV}.tar.gz
  patch:file://{PN}-{PV}.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libxml2 = "XML parsing library, version 2"
FILES_libxml2 = \
/usr/lib/libxml2* \
$(PYTHON_DIR)/site-packages/*libxml2.py

$(DEPDIR)/libxml2: bootstrap $(DEPENDS_libxml2)
	$(PREPARE_libxml2)
	$(start_build)
	cd $(DIR_libxml2); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--with-python=$(hostprefix) \
			--without-c14n \
			--without-debug \
			--without-mem-debug; \
		$(MAKE) all; \
		$(INSTALL_libxml2); \
		sed -e "s,^prefix=,prefix=$(targetprefix)," < xml2-config > $(crossprefix)/bin/xml2-config; \
		chmod 755 $(crossprefix)/bin/xml2-config
	$(tocdk_build_start)
		sed -e "/^XML2_LIBDIR/ s,/usr/lib,$(targetprefix)/usr/lib,g" -i $(ipkgbuilddir)/libxml2/usr/lib/xml2Conf.sh; \
		sed -e "/^XML2_INCLUDEDIR/ s,/usr/include,$(targetprefix)/usr/include,g" -i $(ipkgbuilddir)/libxml2/usr/lib/xml2Conf.sh
	$(call do_build_pkg,install,cdk)
	$(toflash_build)
	$(DISTCLEANUP_libxml2)
	touch $@

#
# libxslt
#
BEGIN[[
libxslt
  1.1.28
  {PN}-{PV}
  extract:http://xmlsoft.org/sources/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libxslt = "XML stylesheet transformation library"
FILES_libxslt = \
/usr/lib/libxslt* \
/usr/lib/libexslt* \
$(PYTHON_DIR)/site-packages/libxslt.py

$(DEPDIR)/libxslt: bootstrap libxml2 $(DEPENDS_libxslt)
	$(PREPARE_libxslt)
	$(start_build)
	cd $(DIR_libxslt); \
		$(BUILDENV) \
		CPPFLAGS="$(CPPFLAGS) -I$(targetprefix)/usr/include/libxml2" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--with-libxml-prefix="$(crossprefix)" \
			--with-libxml-include-prefix="$(targetprefix)/usr/include" \
			--with-libxml-libs-prefix="$(targetprefix)/usr/lib" \
			--with-python=$(hostprefix) \
			--without-crypto \
			--without-debug \
			--without-mem-debug; \
		$(MAKE) all; \
		$(INSTALL_libxslt); \
		sed -e "s,^prefix=,prefix=$(targetprefix)," < xslt-config > $(crossprefix)/bin/xslt-config; \
		chmod 755 $(crossprefix)/bin/xslt-config
	$(tocdk_build_start)
	sed -e "/^dependency_libs/ s,/usr/lib/libxslt.la,$(targetprefix)/usr/lib/libxslt.la,g" -i $(ipkgbuilddir)/usr/lib/libexslt.la; \
	sed -e "/^XML2_LIBDIR/ s,/usr/lib,$(targetprefix)/usr/lib,g" -i $(ipkgbuilddir)/libxslt/usr/lib/xsltConf.sh; \
	sed -e "/^XML2_INCLUDEDIR/ s,/usr/include,$(targetprefix)/usr/include,g" -i $(ipkgbuilddir)/libxslt/usr/lib/xsltConf.sh
	$(call do_build_pkg,install,cdk)
	$(toflash_build)
	$(DISTCLEANUP_libxslt)
	touch $@

#
# lxml
#
BEGIN[[
lxml
  3.3.5
  {PN}-{PV}
  extract:https://pypi.python.org/packages/source/l/lxml/{PN}-{PV}.tar.gz
;
]]END

DESCRIPTION_lxml = "Python binding for the libxml2 and libxslt libraries"
FILES_lxml = \
$(PYTHON_DIR)

$(DEPDIR)/lxml: bootstrap python $(DEPENDS_lxml)
	$(PREPARE_lxml)
	$(start_build)
	cd $(DIR_lxml); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(remove_pyo)
	$(extra_build)
	$(DISTCLEANUP_lxml)
	touch $@

#
# setuptools
#
BEGIN[[
ifdef ENABLE_PY332
setuptools
  3.6
  {PN}-{PV}
  extract:https://pypi.python.org/packages/source/s/{PN}/{PN}-{PV}.tar.gz
;
else
setuptools
  0.6c11
  {PN}-{PV}
  extract:https://pypi.python.org/packages/source/s/{PN}/{PN}-{PV}.tar.gz
;
endif
]]END

DESCRIPTION_setuptools = "setuptools"
DEPENDS_setuptools += python

FILES_setuptools = \
$(PYTHON_DIR)/site-packages/*.py \
$(PYTHON_DIR)/site-packages/*.pyo \
$(PYTHON_DIR)/site-packages/setuptools/*.py \
$(PYTHON_DIR)/site-packages/setuptools/*.pyo \
$(PYTHON_DIR)/site-packages/setuptools/command/*.py \
$(PYTHON_DIR)/site-packages/setuptools/command/*.pyo

$(DEPDIR)/setuptools: bootstrap $(DEPENDS_setuptools)
	$(PREPARE_setuptools)
	$(start_build)
	cd $(DIR_setuptools); \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(DISTCLEANUP_setuptools)
	touch $@

#
# gdata
#
BEGIN[[
gdata
  2.0.18
  gdata-{PV}
  extract:http://gdata-python-client.googlecode.com/files/gdata-{PV}.tar.gz
;
]]END

DESCRIPTION_gdata = "The Google Data APIs (Google Data) provide a simple protocol for reading and writing data on the web. Though it is possible to use these services with a simple HTTP client, this library provides helpful tools to streamline your code and keep up with server-side changes. "
FILES_gdata = \
$(PYTHON_DIR)/site-packages/atom/*.py \
$(PYTHON_DIR)/site-packages/atom/*.pyo \
$(PYTHON_DIR)/site-packages/gdata/*.py \
$(PYTHON_DIR)/site-packages/gdata/*.pyo \
$(PYTHON_DIR)/site-packages/gdata/*.pyo \
$(PYTHON_DIR)/site-packages/gdata/youtube/*.py \
$(PYTHON_DIR)/site-packages/gdata/youtube/*.pyo \
$(PYTHON_DIR)/site-packages/gdata/geo/*.py \
$(PYTHON_DIR)/site-packages/gdata/geo/*.pyo \
$(PYTHON_DIR)/site-packages/gdata/media/*.py \
$(PYTHON_DIR)/site-packages/gdata/media/*.pyo \
$(PYTHON_DIR)/site-packages/gdata/oauth/*.py \
$(PYTHON_DIR)/site-packages/gdata/oauth/*.pyo \
$(PYTHON_DIR)/site-packages/gdata/tlslite/*.py \
$(PYTHON_DIR)/site-packages/gdata/tlslite/*.pyo

$(DEPDIR)/gdata: bootstrap setuptools $(DEPENDS_gdata)
	$(PREPARE_gdata)
	$(start_build)
	cd $(DIR_gdata); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) -c "import setuptools; execfile('setup.py')" install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(remove_pyo)
	$(e2extra_build)
	$(DISTCLEANUP_gdata)
	touch $@
#
# twisted
#
BEGIN[[
twisted
  14.0.0
  Twisted-{PV}
  extract:https://pypi.python.org/packages/source/T/Twisted/Twisted-{PV}.tar.bz2
;
]]END

DESCRIPTION_twisted = "Asynchronous networking framework written in Python"
FILES_twisted = \
$(PYTHON_DIR)/site-packages/twisted/copyright.* \
$(PYTHON_DIR)/site-packages/twisted/cred \
$(PYTHON_DIR)/site-packages/twisted/im.* \
$(PYTHON_DIR)/site-packages/twisted/__init__.* \
$(PYTHON_DIR)/site-packages/twisted/internet \
$(PYTHON_DIR)/site-packages/twisted/persisted \
$(PYTHON_DIR)/site-packages/twisted/plugin.* \
$(PYTHON_DIR)/site-packages/twisted/plugins \
$(PYTHON_DIR)/site-packages/twisted/protocols \
$(PYTHON_DIR)/site-packages/twisted/python \
$(PYTHON_DIR)/site-packages/twisted/spread \
$(PYTHON_DIR)/site-packages/twisted/_version.py \
$(PYTHON_DIR)/site-packages/twisted/_version.pyo \
$(PYTHON_DIR)/site-packages/twisted/web

ifdef ENABLE_PY332
$(DEPDIR)/twisted: bootstrap setuptools $(DEPENDS_twisted)
	$(PREPARE_twisted)
	$(start_build)
	cd $(DIR_twisted); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) -c "import setuptools; exec(open('setup3.py').read())" install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(remove_pyo)
	$(toflash_build)
	$(DISTCLEANUP_twisted)
	touch $@
else
$(DEPDIR)/twisted: bootstrap setuptools $(DEPENDS_twisted)
	$(PREPARE_twisted)
	$(start_build)
	cd $(DIR_twisted); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) -c "import setuptools; execfile('setup.py')" install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(remove_pyo)
	$(toflash_build)
	$(DISTCLEANUP_twisted)
	touch $@
endif

#
# twistedweb2
#
BEGIN[[
twistedweb2
  8.1.0
  TwistedWeb2-{PV}
  extract:http://twistedmatrix.com/Releases/Web2/8.1/TwistedWeb2-{PV}.tar.bz2
;
]]END

DESCRIPTION_twistedweb2 = "twistedweb2"

FILES_twistedweb2 = \
$(PYTHON_DIR)/site-packages/twisted/*.py \
$(PYTHON_DIR)/site-packages/twisted/*.pyo \
$(PYTHON_DIR)/site-packages/twisted/web2 \
$(PYTHON_DIR)/site-packages/twisted/plugins

$(DEPDIR)/twistedweb2: bootstrap setuptools twisted $(DEPENDS_twistedweb2)
	$(PREPARE_twistedweb2)
	$(start_build)
	cd $(DIR_twistedweb2); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) -c "import setuptools; execfile('setup.py')" install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_twistedweb2)
	touch $@

#
# twistedweb
#
BEGIN[[
twistedweb
  14.0.0
  TwistedWeb-{PV}
  extract:http://twistedmatrix.com/Releases/Web/14.0/TwistedWeb-{PV}.tar.bz2
;
]]END

DESCRIPTION_twistedweb = "twistedweb"

FILES_twistedweb = \
$(PYTHON_DIR)/site-packages/twisted/*.py \
$(PYTHON_DIR)/site-packages/twisted/*.pyo \
$(PYTHON_DIR)/site-packages/twisted/web \
$(PYTHON_DIR)/site-packages/twisted/plugins

ifdef ENABLE_PY332
$(DEPDIR)/twistedweb: bootstrap setuptools $(DEPENDS_twistedweb)
	$(PREPARE_twistedweb)
	$(start_build)
	cd $(DIR_twistedweb); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) -c "import setuptools; exec(open('setup.py').read())" install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_twistedweb)
	touch $@
else
$(DEPDIR)/twistedweb: bootstrap setuptools $(DEPENDS_twistedweb)
	$(PREPARE_twistedweb)
	$(start_build)
	cd $(DIR_twistedweb); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) -c "import setuptools; execfile('setup.py')" install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_twistedweb)
	touch $@
endif

#
# twistedmail
#
BEGIN[[
twistedmail
  14.0.0
  TwistedMail-{PV}
  extract:http://twistedmatrix.com/Releases/Mail/14.0/TwistedMail-{PV}.tar.bz2
;
]]END
DESCRIPTION_twistedmail = "twistedmail"

FILES_twistedmail = \
$(PYTHON_DIR)/site-packages/twisted/*.py \
$(PYTHON_DIR)/site-packages/twisted/*.pyo \
$(PYTHON_DIR)/site-packages/twisted/mail/* \
$(PYTHON_DIR)/site-packages/twisted/plugins/*

$(DEPDIR)/twistedmail: bootstrap setuptools $(DEPENDS_twistedmail)
	$(PREPARE_twistedmail)
	$(start_build)
	cd $(DIR_twistedmail); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) -c "import setuptools; execfile('setup.py')" install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_twistedmail)
	touch $@

#
# pilimaging
#
BEGIN[[
pilimaging
  1.1.7
  Imaging-{PV}
  extract:http://effbot.org/downloads/Imaging-{PV}.tar.gz
  patch:file://pilimaging-fix-search-paths.patch
;
]]END

DESCRIPTION_pilimaging = "pilimaging"
FILES_pilimaging = \
$(PYTHON_DIR)/site-packages \
/usr/bin/*

$(DEPDIR)/pilimaging: bootstrap python $(DEPENDS_pilimaging)
	$(PREPARE_pilimaging)
	$(start_build)
	cd $(DIR_pilimaging); \
		echo 'JPEG_ROOT = "$(targetprefix)/usr/lib", "$(targetprefix)/usr/include"' > setup_site.py; \
		echo 'ZLIB_ROOT = "$(targetprefixIR)/usr/lib", "$(targetprefix)/usr/include"' >> setup_site.py; \
		echo 'FREETYPE_ROOT = "$(targetprefix)/usr/lib", "$(targetprefix)/usr/include"' >> setup_site.py; \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr; \
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_pilimaging)
	touch $@

#
# Pillow
#
BEGIN[[
Pillow
  2.4.0
  {PN}-{PV}
  extract:https://pypi.python.org/packages/source/P/{PN}/{PN}-{PV}.zip
  patch:file://Pillow-fix-search-paths.patch
;
]]END

DESCRIPTION_Pillow = "Pillow"
FILES_Pillow = \
$(PYTHON_DIR)/site-packages/PIL/* \
/usr/bin/*

$(DEPDIR)/Pillow: bootstrap python $(DEPENDS_Pillow)
	$(PREPARE_Pillow)
	$(start_build)
	cd $(DIR_Pillow); \
		sed -ie "s|"darwin"|"darwinNot"|g" "setup.py"; \
		sed -ie "s|ZLIB_ROOT = None|ZLIB_ROOT = (\"$(targetprefix)/usr/include\")|" "setup.py"; \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_Pillow)
	touch $@

#
# pyusb
#
BEGIN[[
pyusb
  1.0.0a3
  {PN}-{PV}
  extract:http://pypi.python.org/packages/source/p/{PN}/{PN}-{PV}.tar.gz
;
]]END

DESCRIPTION_pyusb = pyusb
FILES_pyusb = \
$(PYTHON_DIR)/site-packages/usb/*

$(DEPDIR)/pyusb: bootstrap setuptools $(DEPENDS_pyusb)
	$(PREPARE_pyusb)
	$(start_build)
	cd $(DIR_pyusb); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_pyusb)
	touch $@

#
# pycrypto
#
BEGIN[[
pycrypto
  2.7a1
  {PN}-{PV}
  extract:http://ftp.dlitz.net/pub/dlitz/crypto/{PN}/{PN}-{PV}.tar.gz
;
]]END

DESCRIPTION_pycrypto = pycrypto
FILES_pycrypto = \
$(PYTHON_DIR)/site-packages/Crypto/*

$(DEPDIR)/pycrypto: bootstrap setuptools $(DEPENDS_pycrypto)
	$(PREPARE_pycrypto)
	$(start_build)
	cd $(DIR_pycrypto); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_pycrypto)
	touch $@

#
# pyopenssl
#
BEGIN[[
pyopenssl
  0.13.1
  pyOpenSSL-{PV}
  extract:http://pypi.python.org/packages/source/p/pyOpenSSL/pyOpenSSL-{PV}.tar.gz
;
]]END

DESCRIPTION_pyopenssl = "Python wrapper module around the OpenSSL library"
FILES_pyopenssl = \
$(PYTHON_DIR)/site-packages/OpenSSL/*py \
$(PYTHON_DIR)/site-packages/OpenSSL/*so

$(DEPDIR)/pyopenssl: bootstrap setuptools $(DEPENDS_pyopenssl)
	$(PREPARE_pyopenssl)
	$(start_build)
	cd $(DIR_pyopenssl); \
		CPPFLAGS="$(CPPFLAGS) -I$(targetprefix)/usr/include/python$(PYTHON_VERSION)" \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(remove_pyo)
	$(toflash_build)
	$(DISTCLEANUP_pyopenssl)
	touch $@

#
# cryptography
#
BEGIN[[
cryptography
  0.4
  {PN}-{PV}
  extract:https://pypi.python.org/packages/source/c/{PN}/{PN}-{PV}.tar.gz
;
]]END

DESCRIPTION_cryptography = "Python cryptography"
FILES_cryptography = \
$(PYTHON_DIR)/site-packages/*

$(DEPDIR)/cryptography: bootstrap pycparser cffi six $(DEPENDS_cryptography)
	$(PREPARE_cryptography)
	$(start_build)
	cd $(DIR_cryptography); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_cryptography)
	touch $@

#
# cffi
#
BEGIN[[
cffi
  0.8.2
  {PN}-{PV}
  extract:https://pypi.python.org/packages/source/c/cffi/cffi-0.8.2.tar.gz
;
]]END

DESCRIPTION_cffi = "Python cffi"
FILES_cffi = \
$(PYTHON_DIR)/site-packages/*.so \
$(PYTHON_DIR)/site-packages/cffi/*

$(DEPDIR)/cffi: bootstrap setuptools pycparser $(DEPENDS_cffi)
	$(PREPARE_cffi)
	$(start_build)
	cd $(DIR_cffi); \
		PKG_CONFIG_PATH='$(targetprefix)/usr/lib/pkgconfig/' \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		ARCHFLAGS="-sh4-linux" $(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_cffi)
	touch $@

#
# pycparser
#
BEGIN[[
pycparser
  2.10
  {PN}-{PV}
  extract:https://pypi.python.org/packages/source/p/pycparser/pycparser-2.10.tar.gz
;
]]END

DESCRIPTION_pycparser = "Python pycparser"
FILES_pycparser = \
$(PYTHON_DIR)/site-packages/pycparser/*

$(DEPDIR)/pycparser: bootstrap setuptools $(DEPENDS_pycparser)
	$(PREPARE_pycparser)
	$(start_build)
	cd $(DIR_pycparser); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_pycparser)
	touch $@

#
# service_identity
#
BEGIN[[
service_identity
  0.2
  service_identity-{PV}
  extract:https://pypi.python.org/packages/source/s/service_identity/service_identity-{PV}.tar.gz
;
]]END

DESCRIPTION_service_identity = "service_identity"
FILES_service_identity = \
$(PYTHON_DIR)/site-packages/service_identity/*

$(DEPDIR)/service_identity: bootstrap $(DEPENDS_service_identity)
	$(PREPARE_service_identity)
	$(start_build)
	cd $(DIR_service_identity); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_service_identity)
	touch $@

#
# six
#
BEGIN[[
six
  1.6.1
  {PN}-{PV}
  extract:https://pypi.python.org/packages/source/s/{PN}/{PN}-{PV}.tar.gz
;
]]END

DESCRIPTION_six = "six"
FILES_six = \
$(PYTHON_DIR)/site-packages/six.*

$(DEPDIR)/six: bootstrap $(DEPENDS_six)
	$(PREPARE_six)
	$(start_build)
	cd $(DIR_six); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_six)
	touch $@

#
# pip
#
BEGIN[[
pip
  1.5.6
  {PN}-{PV}
  extract:https://pypi.python.org/packages/source/p/{PN}/{PN}-{PV}.tar.gz
;
]]END

DESCRIPTION_pip = "pip"
FILES_pip = \
$(PYTHON_DIR)/site-packages/pip/* \
/usr/bin/*

$(DEPDIR)/pip: bootstrap $(DEPENDS_pip)
	$(PREPARE_pip)
	$(start_build)
	cd $(DIR_pip); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		PYTHONIOENCODING=utf8 \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_pip)
	touch $@

#
# python
#
ifdef ENABLE_PY273
BEGIN[[
python
  2.7.3
  {PN}-{PV}
  extract:http://www.{PN}.org/ftp/{PN}/{PV}/Python-{PV}.tar.bz2
  pmove:Python-{PV}:{PN}-{PV}
  patch:file://{PN}_{PV}.diff
  patch:file://{PN}_{PV}-ctypes-libffi-fix-configure.diff
  patch:file://{PN}_{PV}-pgettext.diff
  patch:file://{PN}_{PV}-build-module-zlib.patch
;
]]END

PACKAGES_python = python python_ctypes

DESCRIPTION_python = "A high-level scripting language"
FILES_python = \
/usr/bin/python* \
/usr/lib/libpython$(PYTHON_VERSION).* \
$(PYTHON_DIR)/*.py \
$(PYTHON_DIR)/encodings \
$(PYTHON_DIR)/hotshot \
$(PYTHON_DIR)/email \
$(PYTHON_DIR)/idlelib \
$(PYTHON_DIR)/json \
$(PYTHON_DIR)/config \
$(PYTHON_DIR)/lib-dynload \
$(PYTHON_DIR)/lib-tk \
$(PYTHON_DIR)/lib2to3 \
$(PYTHON_DIR)/logging \
$(PYTHON_DIR)/multiprocessing \
$(PYTHON_DIR)/plat-linux3 \
$(PYTHON_DIR)/plat-linux2 \
$(PYTHON_DIR)/sqlite3 \
$(PYTHON_DIR)/wsgiref \
/usr/include/python$(PYTHON_VERSION)/pyconfig.h \
$(PYTHON_DIR)/xml

DESCRIPTION_python_ctypes = python ctypes module
FILES_python_ctypes = \
$(PYTHON_DIR)/ctypes

$(DEPDIR)/python: bootstrap host_python openssl-dev sqlite libreadline bzip2 libexpat libdb libgdbm $(DEPENDS_python)
	$(PREPARE_python)
	$(start_build)
	( cd $(DIR_python); \
		CONFIG_SITE= \
		autoreconf --verbose --install --force Modules/_ctypes/libffi; \
		autoconf; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--target=$(target) \
			--prefix=/usr \
			--sysconfdir=/etc \
			--enable-shared \
			--disable-ipv6 \
			--without-cxx-main \
			--with-threads \
			--with-pymalloc \
			--with-system-expat \
			--with-system-ffi \
			--enable-unicode=ucs4 \
			--with-signal-module \
			--with-wctype-functions \
			HOSTPYTHON=$(hostprefix)/bin/python$(PYTHON_VERSION) \
			OPT="$(TARGET_CFLAGS)"; \
		$(MAKE) $(MAKE_ARGS) \
			TARGET_OS=$(target) \
			PYTHON_DISABLE_MODULES="_tkinter" \
			PYTHON_MODULES_INCLUDE="$(prefix)/$*cdkroot/usr/include" \
			PYTHON_MODULES_LIB="$(prefix)/$*cdkroot/usr/lib" \
			CROSS_COMPILE_TARGET=yes \
			CROSS_COMPILE=$(target) \
			HOSTARCH=sh4-linux \
			CFLAGS="$(TARGET_CFLAGS) -fno-inline" \
			LDFLAGS="$(TARGET_LDFLAGS)" \
			LD="$(target)-gcc" \
			HOSTPYTHON=$(hostprefix)/bin/python$(PYTHON_VERSION) \
			HOSTPGEN=$(hostprefix)/bin/pgen \
			all install DESTDIR=$(PKDIR)); \
	touch $@
	$(LN_SF) ../../libpython$(PYTHON_VERSION).so.1.0 $(PKDIR)$(PYTHON_DIR)/config/libpython$(PYTHON_VERSION).so; \
	$(LN_SF) $(PKDIR)$(PYTHON_INCLUDE_DIR) $(PKDIR)/usr/include/python
	$(tocdk_build)
	$(remove_pyo)
	$(toflash_build)
	$(DISTCLEANUP_python)
	touch $@
endif
ifdef ENABLE_PY276
BEGIN[[
python
  2.7.6
  {PN}-{PV}
  extract:http://www.python.org/ftp/python/{PV}/Python-{PV}.tar.xz
  pmove:Python-{PV}:{PN}-{PV}
  patch:file://python-{PV}/python_{PV}.diff
  patch:file://python-{PV}/python-{PV}-pgettext.diff
;
]]END

PACKAGES_python = python python_ctypes

DESCRIPTION_python = "A high-level scripting language"
FILES_python = \
/usr/bin/python* \
/usr/lib/libpython* \
$(PYTHON_DIR)/*.py \
$(PYTHON_DIR)/encodings \
$(PYTHON_DIR)/hotshot \
$(PYTHON_DIR)/email \
$(PYTHON_DIR)/idlelib \
$(PYTHON_DIR)/json \
$(PYTHON_DIR)/config \
$(PYTHON_DIR)/lib-dynload \
$(PYTHON_DIR)/lib-tk \
$(PYTHON_DIR)/lib2to3 \
$(PYTHON_DIR)/logging \
$(PYTHON_DIR)/multiprocessing \
$(PYTHON_DIR)/plat-linux3 \
$(PYTHON_DIR)/plat-linux2 \
$(PYTHON_DIR)/sqlite3 \
$(PYTHON_DIR)/wsgiref \
/usr/include/python$(PYTHON_VERSION)/pyconfig.h \
$(PYTHON_DIR)/xml

DESCRIPTION_python_ctypes = python ctypes module
FILES_python_ctypes = \
$(PYTHON_DIR)/ctypes

$(DEPDIR)/python: bootstrap host_python libffi openssl-dev libreadline sqlite bzip2 libexpat libdb libgdbm $(DEPENDS_python)
	$(PREPARE_python)
	$(start_build)
	( cd $(DIR_python); \
		CONFIG_SITE= \
		autoreconf --verbose --install --force ./Modules/_ctypes/libffi ; \
		autoconf; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--target=$(target) \
			--prefix=/usr \
			--sysconfdir=/etc \
			--enable-shared \
			--disable-ipv6 \
			--without-cxx-main \
			--with-threads \
			--with-pymalloc \
			--with-signal-module \
			--with-wctype-functions \
			ac_cv_file__dev_ptmx=yes \
			ac_cv_file__dev_ptc=no \
			HOSTPYTHON=$(hostprefix)/bin/python$(PYTHON_VERSION) \
			OPT="$(TARGET_CFLAGS)"; \
		$(MAKE) $(MAKE_ARGS) \
			TARGET_OS=$(target) \
			PYTHON_DISABLE_MODULES="_tkinter" \
			PYTHON_MODULES_INCLUDE="$(prefix)/$*cdkroot/usr/include" \
			PYTHON_MODULES_LIB="$(prefix)/$*cdkroot/usr/lib" \
			CROSS_COMPILE_TARGET=yes \
			CROSS_COMPILE=$(target) \
			HOSTARCH=sh4-linux \
			CFLAGS="$(TARGET_CFLAGS) -fno-inline" \
			LDFLAGS="-L$(DIR_python)" \
			LD="$(target)-gcc" \
			HOSTPYTHON=$(hostprefix)/bin/python$(PYTHON_VERSION) \
			HOSTPGEN=$(hostprefix)/bin/pgen \
			all install DESTDIR=$(PKDIR)); \
	touch $@
	$(LN_SF) ../../libpython$(PYTHON_VERSION).so.1.0 $(PKDIR)$(PYTHON_DIR)/config/libpython$(PYTHON_VERSION).so; \
	$(LN_SF) $(PKDIR)$(PYTHON_INCLUDE_DIR) $(PKDIR)/usr/include/python
	$(tocdk_build)
	$(remove_pyo)
	$(toflash_build)
	$(DISTCLEANUP_python)
	touch $@
endif
ifdef ENABLE_PY332
BEGIN[[
python
  3.3.2
  {PN}-{PV}
  extract:http://www.{PN}.org/ftp/{PN}/{PV}/Python-{PV}.tar.bz2
  pmove:Python-{PV}:{PN}-{PV}
  patch:file://{PN}-{PV}/{PN}_{PV}.diff
  patch:file://{PN}-{PV}/{PN}-{PV}-pgettext.diff
  patch:file://{PN}-{PV}/12-distutils-prefix-is-inside-staging-area.patch
  patch:file://{PN}-{PV}/080-distutils-dont_adjust_files.patch
  patch:file://{PN}-{PV}/130-readline-setup.patch
  patch:file://{PN}-{PV}/150-fix-setupterm.patch
  patch:file://{PN}-{PV}/03-fix-tkinter-detection.patch
  patch:file://{PN}-{PV}/04-default-is-optimized.patch
  patch:file://{PN}-{PV}/avoid_warning_about_tkinter.patch
  patch:file://{PN}-{PV}/06-ctypes-libffi-fix-configure.patch
  patch:file://{PN}-{PV}/remove_sqlite_rpath.patch
  patch:file://{PN}-{PV}/cgi_py.patch
  patch:file://{PN}-{PV}/host_include_contamination.patch
  patch:file://{PN}-{PV}/python-3.3-multilib.patch
  patch:file://{PN}-{PV}/shutil-follow-symlink-fix.patch
  patch:file://{PN}-{PV}/sysroot-include-headers.patch
  patch:file://{PN}-{PV}/unixccompiler.patch
;
]]END

PACKAGES_python = python python_ctypes

DESCRIPTION_python = "A high-level scripting language"
FILES_python = \
/usr/bin/python* \
/usr/lib/libpython* \
$(PYTHON_DIR)/*.py \
$(PYTHON_DIR)/encodings \
$(PYTHON_DIR)/hotshot \
$(PYTHON_DIR)/email \
$(PYTHON_DIR)/idlelib \
$(PYTHON_DIR)/json \
$(PYTHON_DIR)/config \
$(PYTHON_DIR)/lib-dynload \
$(PYTHON_DIR)/lib-tk \
$(PYTHON_DIR)/lib2to3 \
$(PYTHON_DIR)/logging \
$(PYTHON_DIR)/multiprocessing \
$(PYTHON_DIR)/plat-linux3 \
$(PYTHON_DIR)/plat-linux2 \
$(PYTHON_DIR)/sqlite3 \
$(PYTHON_DIR)/wsgiref \
/usr/include/python$(PYTHON_VERSION)/pyconfig.h \
$(PYTHON_DIR)/xml

DESCRIPTION_python_ctypes = python ctypes module
FILES_python_ctypes = \
$(PYTHON_DIR)/ctypes

$(DEPDIR)/python: bootstrap host_python libffi openssl-dev libreadline sqlite bzip2 libexpat libdb libgdbm $(DEPENDS_python)
	$(PREPARE_python)
	$(start_build)
	( cd $(DIR_python); \
		CONFIG_SITE= \
		autoreconf --verbose --install --force Modules/_ctypes/libffi; \
		autoconf; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--sysconfdir=/etc \
			--enable-shared \
			--disable-ipv6 \
			--without-cxx-main \
			--with-threads \
			--with-pymalloc \
			--with-system-expat \
			--with-system-ffi \
			--with-signal-module \
			ac_cv_have_chflags=no \
			ac_cv_have_lchflags=no \
			ac_cv_have_long_long_format=yes \
			ac_cv_buggy_getaddrinfo=no \
			ac_cv_file__dev_ptmx=yes \
			ac_cv_file__dev_ptc=no \
			HOSTPYTHON=$(hostprefix)/bin/python$(PYTHON_VERSION) \
			OPT="$(TARGET_CFLAGS)" libpython3.so; \
		$(MAKE) $(MAKE_ARGS) \
			TARGET_OS=$(target) \
			PYTHON_MODULES_INCLUDE="$(prefix)/$*cdkroot/usr/include" \
			PYTHON_MODULES_LIB="$(prefix)/$*cdkroot/usr/lib $(DIR_python)" \
			CPPFLAGS="-I$(prefix)/$*cdkroot/usr/include" \
			CFLAGS="$(TARGET_CFLAGS) -fno-inline" \
			LDFLAGS="$(TARGET_LDFLAGS) -L$(prefix)/$*cdkroot/usr/lib -L$(DIR_python)" \
			CROSS_COMPILE_TARGET=yes \
			CROSS_COMPILE=$(target)- \
			LD="$(target)-gcc" \
			HOSTARCH=sh4-linux \
			HOSTPYTHON=$(hostprefix)/bin/python$(PYTHON_VERSION) \
			HOSTPGEN=$(hostprefix)/bin/pgen \
			all install DESTDIR=$(PKDIR)); \
	touch $@
	$(LN_SF) ../../libpython$(PYTHON_VERSION)m.so.1.0 $(PKDIR)$(PYTHON_DIR)/config-$(PYTHON_VERSION)m/libpython$(PYTHON_VERSION).so
	$(LN_SF) $(PKDIR)$(PYTHON_INCLUDE_DIR) $(PKDIR)/usr/include/python
	$(tocdk_build)
	$(remove_pyo)
	$(toflash_build)
	$(DISTCLEANUP_python)
	touch $@
endif

BEGIN[[
libgdbm
  1.11
  gdbm-{PV}
  extract:ftp://ftp.gnu.org/gnu/gdbm/gdbm-1.11.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libgdbm = "libgdbm"

FILES_libgdbm = \
*

$(DEPDIR)/libgdbm: bootstrap $(DEPENDS_libgdbm)
	$(PREPARE_libgdbm)
	$(start_build)
	cd $(DIR_libgdbm); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			-enable-libgdbm-compat \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libgdbm)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libgdbm)
	touch $@

BEGIN[[
libdb
  5.3.21
  db-{PV}
  extract:http://download.oracle.com/berkeley-db/db-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libdb = "libdb"

FILES_libdb = \
/usr/bin/* \
/usr/lib/*

$(DEPDIR)/libdb: bootstrap $(DEPENDS_libdb)
	$(PREPARE_libdb)
	$(start_build)
	cd $(DIR_libdb); \
		$(BUILDENV) \
		./dist/configure \
			--build=$(build) \
			--host=$(target) \
			--enable-o_direct --disable-cryptography --disable-queue --disable-replication --disable-verify --disable-compat185 --disable-sql \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libdb)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libdb)
	touch $@

#
# pythonwifi
#
BEGIN[[
pythonwifi
  0.5.0
  python-wifi-{PV}
  extract:http://freefr.dl.sourceforge.net/project/{PN}.berlios/python-wifi-{PV}.tar.bz2
ifdef ENABLE_PY332
  patch:file://pythonwifi3.diff
endif
;
]]END

DESCRIPTION_pythonwifi = "pythonwifi"
FILES_pythonwifi =\
/usr/bin/* \
$(PYTHON_DIR)/site-packages/pythonwifi

$(DEPDIR)/pythonwifi: bootstrap setuptools $(DEPENDS_pythonwifi)
	$(PREPARE_pythonwifi)
	$(start_build)
	cd $(DIR_pythonwifi); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_pythonwifi)
	touch $@

#
# pythoncheetah
#
BEGIN[[
pythoncheetah
  2.4.4
  Cheetah-{PV}
  extract:http://pypi.python.org/packages/source/C/Cheetah/Cheetah-{PV}.tar.gz
ifdef ENABLE_PY332
  patch:file://Cheetah3.patch
endif
;
]]END

DESCRIPTION_pythoncheetah = "pythoncheetah"
FILES_pythoncheetah = \
$(PYTHON_DIR)/site-packages/Cheetah

$(DEPDIR)/pythoncheetah: bootstrap setuptools $(DEPENDS_pythoncheetah)
	$(PREPARE_pythoncheetah)
	$(start_build)
	cd $(DIR_pythoncheetah); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_pythoncheetah)
	touch $@

#
# zope interface
#
BEGIN[[
zope_interface
  4.1.1
  zope.interface-{PV}
  extract:http://pypi.python.org/packages/source/z/zope.interface/zope.interface-{PV}.tar.gz
;
]]END

DESCRIPTION_zope_interface = "Zope Interfaces for Python2"
FILES_zope_interface = \
$(PYTHON_DIR)

$(DEPDIR)/zope_interface: bootstrap python setuptools $(DEPENDS_zope_interface)
	$(PREPARE_zope_interface)
	$(start_build)
	cd $(DIR_zope_interface); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(remove_pyo)
	$(toflash_build)
	$(DISTCLEANUP_zope_interface)
	touch $@

#
# zope_component
#
BEGIN[[
zope_component
  4.2.1
  zope.component-{PV}
  extract:https://pypi.python.org/packages/source/z/zope.component/zope.component-4.2.1.tar.gz
;
]]END

DESCRIPTION_zope_component = "Zope Component for Python2"
FILES_zope_component = \
$(PYTHON_DIR)

$(DEPDIR)/zope_component: bootstrap python setuptools $(DEPENDS_zope_component)
	$(PREPARE_zope_component)
	$(start_build)
	cd $(DIR_zope_component); \
		CC='$(target)-gcc' LDSHARED='$(target)-gcc -shared' \
		PYTHONPATH=$(targetprefix)$(PYTHON_DIR)/site-packages \
		$(hostprefix)/bin/python$(PYTHON_VERSION) ./setup.py install --root=$(PKDIR) --prefix=/usr
	$(tocdk_build)
	$(remove_pyo)
	$(toflash_build)
	$(DISTCLEANUP_zope_component)
	touch $@

##############################   GSTREAMER + PLUGINS   #########################

#
# GSTREAMER
#
BEGIN[[
gstreamer
  0.10.36
  {PN}-{PV}
  extract:http://{PN}.freedesktop.org/src/{PN}/{PN}-{PV}.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gstreamer = "GStreamer Multimedia Framework"

FILES_gstreamer = \
/usr/bin/gst-* \
/usr/lib/libgst* \
/usr/lib/gstreamer-0.10/libgstcoreelements.so \
/usr/lib/gstreamer-0.10/libgstcoreindexers.so

$(DEPDIR)/gstreamer: bootstrap glib2 libxml2 $(DEPENDS_gstreamer)
	$(PREPARE_gstreamer)
	$(start_build)
	cd $(DIR_gstreamer); \
		autoreconf --verbose --force --install -I$(hostprefix)/share/aclocal; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--disable-docs-build \
			--disable-dependency-tracking \
			--disable-check \
			ac_cv_func_register_printf_function=no; \
		$(MAKE); \
		$(INSTALL_gstreamer)
	$(tocdk_build)
	sh4-linux-strip --strip-unneeded $(PKDIR)/usr/bin/gst-launch*
	$(toflash_build)
	$(DISTCLEANUP_gstreamer)
	touch $@

#
# GST-PLUGINS-BASE
#
BEGIN[[
gst_plugins_base
  0.10.36
  {PN}-{PV}
  extract:http://gstreamer.freedesktop.org/src/{PN}/{PN}-{PV}.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gst_plugins_base = "GStreamer Multimedia Framework base plugins"

FILES_gst_plugins_base = \
/usr/lib/libgst* \
/usr/lib/gstreamer-0.10/libgstalsa.so \
/usr/lib/gstreamer-0.10/libgstapp.so \
/usr/lib/gstreamer-0.10/libgstaudioconvert.so \
/usr/lib/gstreamer-0.10/libgstaudioresample.so \
/usr/lib/gstreamer-0.10/libgstdecodebin.so \
/usr/lib/gstreamer-0.10/libgstdecodebin2.so \
/usr/lib/gstreamer-0.10/libgstogg.so \
/usr/lib/gstreamer-0.10/libgstplaybin.so \
/usr/lib/gstreamer-0.10/libgstsubparse.so \
/usr/lib/gstreamer-0.10/libgsttypefindfunctions.so

$(DEPDIR)/gst_plugins_base: bootstrap glib2 gstreamer libogg libalsa libvorbis $(DEPENDS_gst_plugins_base)
	$(PREPARE_gst_plugins_base)
	$(start_build)
	cd $(DIR_gst_plugins_base); \
		autoreconf --verbose --force --install -I$(hostprefix)/share/aclocal; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--disable-theora \
			--disable-gnome_vfs \
			--disable-pango \
			--disable-x \
			--disable-examples \
			--with-audioresample-format=int; \
		$(MAKE); \
		$(BUILDENV) \
		$(INSTALL_gst_plugins_base)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_gst_plugins_base)
	touch $@

#
# GST-PLUGINS-GOOD
#
BEGIN[[
gst_plugins_good
  0.10.31
  {PN}-{PV}
  extract:http://gstreamer.freedesktop.org/src/{PN}/{PN}-{PV}.tar.xz
  patch:file://{PN}-0.10.29_avidemux_only_send_pts_on_keyframe.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gst_plugins_good = "GStreamer Multimedia Framework good plugins"

FILES_gst_plugins_good = \
/usr/lib/libgst* \
/usr/lib/gstreamer-0.10/libgstaudioparsers.so \
/usr/lib/gstreamer-0.10/libgstautodetect.so \
/usr/lib/gstreamer-0.10/libgstavi.so \
/usr/lib/gstreamer-0.10/libgstflac.so \
/usr/lib/gstreamer-0.10/libgstflv.so \
/usr/lib/gstreamer-0.10/libgsticydemux.so \
/usr/lib/gstreamer-0.10/libgstid3demux.so \
/usr/lib/gstreamer-0.10/libgstmatroska.so \
/usr/lib/gstreamer-0.10/libgstrtp.so \
/usr/lib/gstreamer-0.10/libgstrtpmanager.so \
/usr/lib/gstreamer-0.10/libgstrtsp.so \
/usr/lib/gstreamer-0.10/libgstsouphttpsrc.so \
/usr/lib/gstreamer-0.10/libgstisomp4.so \
/usr/lib/gstreamer-0.10/libgstudp.so \
/usr/lib/gstreamer-0.10/libgstapetag.so \
/usr/lib/gstreamer-0.10/libgstsouphttpsrc.so \
/usr/lib/gstreamer-0.10/libgstwavparse.so

$(DEPDIR)/gst_plugins_good: bootstrap gstreamer gst_plugins_base libsoup libflac $(DEPENDS_gst_plugins_good)
	$(PREPARE_gst_plugins_good)
	$(start_build)
	cd $(DIR_gst_plugins_good); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--disable-esd \
			--enable-experimental \
			--disable-esdtest \
			--disable-aalib \
			--disable-shout2 \
			--disable-shout2test \
			--disable-x; \
		$(MAKE)	$(start_build); \
		$(INSTALL_gst_plugins_good)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_gst_plugins_good)
	touch $@

#
# GST-PLUGINS-BAD
#
BEGIN[[
gst_plugins_bad
  0.10.23
  {PN}-{PV}
  extract:http://gstreamer.freedesktop.org/src/{PN}/{PN}-{PV}.tar.xz
  patch:file://{PN}-0.10.22-mpegtsdemux_remove_bluray_pgs_detection.diff
  patch:file://{PN}-0.10.22-mpegtsdemux_speedup.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gst_plugins_bad = "GStreamer Multimedia Framework bad plugins"

FILES_gst_plugins_bad = \
/usr/lib/libgst* \
/usr/lib/gstreamer-0.10/libgstassrender.so \
/usr/lib/gstreamer-0.10/libgstcdxaparse.so \
/usr/lib/gstreamer-0.10/libgstfragmented.so \
/usr/lib/gstreamer-0.10/libgstmpegdemux.so \
/usr/lib/gstreamer-0.10/libgstvcdsrc.so \
/usr/lib/gstreamer-0.10/libgstmpeg4videoparse.so \
/usr/lib/gstreamer-0.10/libgsth264parse.so \
/usr/lib/gstreamer-0.10/libgstneonhttpsrc.so \
/usr/lib/gstreamer-0.10/libgstrtmp.so

$(DEPDIR)/gst_plugins_bad: bootstrap gstreamer gst_plugins_base libmodplug $(DEPENDS_gst_plugins_bad)
	$(PREPARE_gst_plugins_bad)
	$(start_build)
	cd $(DIR_gst_plugins_bad); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--with-check=no \
			--disable-sdl \
			--disable-modplug \
			ac_cv_openssldir=no; \
		$(MAKE); \
		$(INSTALL_gst_plugins_bad)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_gst_plugins_bad)
	touch $@

#
# GST-PLUGINS-UGLY
#
BEGIN[[
gst_plugins_ugly
  0.10.19
  {PN}-{PV}
  extract:http://gstreamer.freedesktop.org/src/{PN}/{PN}-{PV}.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gst_plugins_ugly = "GStreamer Multimedia Framework ugly plugins"

FILES_gst_plugins_ugly = \
/usr/lib/gstreamer-0.10/libgstasf.so \
/usr/lib/gstreamer-0.10/libgstdvdsub.so \
/usr/lib/gstreamer-0.10/libgstmad.so \
/usr/lib/gstreamer-0.10/libgstmpegaudioparse.so \
/usr/lib/gstreamer-0.10/libgstmpegstream.so

$(DEPDIR)/gst_plugins_ugly: bootstrap gstreamer gst_plugins_base $(DEPENDS_gst_plugins_ugly)
	$(PREPARE_gst_plugins_ugly)
	$(start_build)
	cd $(DIR_gst_plugins_ugly); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--disable-mpeg2dec; \
		$(MAKE); \
		$(INSTALL_gst_plugins_ugly)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_gst_plugins_ugly)
	touch $@

#
# GST-FFMPEG
#
BEGIN[[
gst_ffmpeg
  0.10.13
  {PN}-{PV}
  extract:http://gstreamer.freedesktop.org/src/{PN}/{PN}-{PV}.tar.bz2
  patch:file://{PN}-0.10.12_lower_rank.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gst_ffmpeg = "GStreamer Multimedia Framework ffmpeg module"

FILES_gst_ffmpeg = \
/usr/lib/gstreamer-0.10/libgstffmpeg.so \
/usr/lib/gstreamer-0.10/libgstffmpegscale.so \
/usr/lib/gstreamer-0.10/libgstpostproc.so

$(DEPDIR)/gst_ffmpeg: bootstrap gstreamer gst_plugins_base $(DEPENDS_gst_ffmpeg)
	$(PREPARE_gst_ffmpeg)
	$(start_build)
	cd $(DIR_gst_ffmpeg); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			\
			--with-ffmpeg-extra-configure=" \
			--disable-ffserver \
			--disable-ffplay \
			--disable-ffmpeg \
			--disable-ffprobe \
			--enable-postproc \
			--enable-gpl \
			--enable-static \
			--enable-pic \
			--disable-protocols \
			--disable-devices \
			--disable-network \
			--disable-hwaccels \
			--disable-filters \
			--disable-doc \
			--enable-optimizations \
			--enable-cross-compile \
			--target-os=linux \
			--arch=sh4 \
			--cross-prefix=$(target)- \
			\
			--disable-muxers \
			--disable-encoders \
			--disable-decoders \
			--enable-decoder=ogg \
			--enable-decoder=vorbis \
			--enable-decoder=flac \
			\
			--disable-demuxers \
			--enable-demuxer=ogg \
			--enable-demuxer=vorbis \
			--enable-demuxer=flac \
			--enable-demuxer=mpegts \
			\
			--disable-bsfs \
			--enable-pthreads \
			--enable-bzlib"
		$(INSTALL_gst_ffmpeg)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_gst_ffmpeg)
	touch $@

#
# GST-PLUGINS-FLUENDO-MPEGDEMUX
#
BEGIN[[
gst_plugins_fluendo_mpegdemux
  0.10.71
  gst-fluendo-mpegdemux-{PV}
  extract:http://core.fluendo.com/gstreamer/src/gst-fluendo-mpegdemux/gst-fluendo-mpegdemux-{PV}.tar.gz
  patch:file://{PN}-0.10.69-add_dts_hd_detection.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gst_plugins_fluendo_mpegdemux = "GStreamer Multimedia Framework fluendo"
FILES_gst_plugins_fluendo_mpegdemux = \
/usr/lib/gstreamer-0.10/*.so


$(DEPDIR)/gst_plugins_fluendo_mpegdemux: bootstrap gstreamer gst_plugins_base $(DEPENDS_gst_plugins_fluendo_mpegdemux)
	$(PREPARE_gst_plugins_fluendo_mpegdemux)
	$(start_build)
	cd $(DIR_gst_plugins_fluendo_mpegdemux); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--with-check=no; \
		$(MAKE); \
		$(INSTALL_gst_plugins_fluendo_mpegdemux)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_gst_plugins_fluendo_mpegdemux)
	touch $@

#
# GST-PLUGIN-SUBSINK
#
BEGIN[[
gst_plugin_subsink
  git
  {PN}
  nothing:git://openpli.git.sourceforge.net/gitroot/openpli/gstsubsink:r=8182abe751364f6eb1ed45377b0625102aeb68d5
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gst_plugin_subsink = GStreamer Multimedia Framework gstsubsink
PKGR_gst_plugin_subsink = r1
FILES_gst_plugin_subsink = \
/usr/lib/gstreamer-0.10/*.so

$(DEPDIR)/gst_plugin_subsink: bootstrap gstreamer gst_ffmpeg gst_plugins_base gst_plugins_good gst_plugins_bad gst_plugins_ugly gst_plugins_fluendo_mpegdemux $(DEPENDS_gst_plugin_subsink)
	$(PREPARE_gst_plugin_subsink)
	$(start_build)
	cd $(DIR_gst_plugin_subsink); \
		touch NEWS README AUTHORS ChangeLog; \
		aclocal -I $(hostprefix)/share/aclocal -I m4; \
		cp $(hostprefix)/share/libtool/config/ltmain.sh .; \
		autoheader; \
		autoconf; \
		automake --add-missing; \
		libtoolize --force; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_gst_plugin_subsink)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_gst_plugin_subsink)
	touch $@

#
# GST-PLUGINS-DVBMEDIASINK
#
BEGIN[[
gst_plugins_dvbmediasink
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gst_plugins_dvbmediasink = "GStreamer Multimedia Framework dvbmediasink"
SRC_URI_gst_plugins_dvbmediasink = "https://code.google.com/p/tdt-amiko/"

FILES_gst_plugins_dvbmediasink = \
/usr/lib/gstreamer-0.10/libgstdvbaudiosink.so \
/usr/lib/gstreamer-0.10/libgstdvbvideosink.so

$(DEPDIR)/gst_plugins_dvbmediasink: bootstrap gstreamer gst_plugins_base gst_plugins_good gst_plugins_bad gst_plugins_ugly gst_plugin_subsink libdca liborc $(DEPENDS_gst_plugins_dvbmediasink)
	$(PREPARE_gst_plugins_dvbmediasink)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH); \
	cd $(DIR_gst_plugins_dvbmediasink); \
		aclocal -I $(hostprefix)/share/aclocal -I m4; \
		autoheader; \
		autoconf; \
		automake --foreign --add-missing; \
		libtoolize --force; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_gst_plugins_dvbmediasink)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_gst_plugins_dvbmediasink)
	touch $@

#
# libdca
#
BEGIN[[
libdca
  0.0.5
  {PN}-{PV}
  extract:http://download.videolan.org/pub/videolan/{PN}/0.0.5/{PN}-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libdca = "libdca"

FILES_libdca = \
/usr/lib/*.so* \
/usr/bin/*

$(DEPDIR)/libdca: $(DEPENDS_libdca)
	$(PREPARE_libdca)
	$(start_build)
	cd $(DIR_libdca); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libdca)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libdca)
	touch $@

#
# liborc
#
BEGIN[[
liborc
  0.4.18
  orc-{PV}
  extract:http://code.entropywave.com/download/orc/orc-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_liborc = "liborc"
FILES_liborc = \
/usr/lib/*.so* \
/usr/bin/*

$(DEPDIR)/liborc: $(DEPENDS_liborc)
	$(PREPARE_liborc)
	$(start_build)
	cd $(DIR_liborc); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_liborc)
	$(tocdk_build)
	$(toflash_build)
	touch $@

#
# libao
#
BEGIN[[
libao
  1.2.0
  {PN}-{PV}
  extract:http://downloads.xiph.org/releases/ao/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libao = "libao"

$(DEPDIR)/libao: bootstrap $(DEPENDS_libao)
	$(PREPARE_libao)
	$(start_build)
	cd $(DIR_libao); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libao)
	$(tocdk_build)
	$(toflash_build)
	touch $@

##############################   EXTERNAL_LCD   ################################

#
# libusb
#
BEGIN[[
libusb
  0.1.12
  {PN}-{PV}
  extract:http://downloads.sourceforge.net/{PN}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libusb = "libusb is a library which allows userspace application access to USB devices."

FILES_libusb = \
/usr/lib/libusb* \
/usr/lib/libusbpp*

$(DEPDIR)/libusb: $(DEPENDS_libusb)
	$(PREPARE_libusb)
	$(start_build)
	cd $(DIR_libusb); \
	$(BUILDENV) \
	./configure \
		--host=$(target) \
		--disable-build-docs \
		--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libusb)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libusb)
	touch $@

#
# graphlcd
#
BEGIN[[
graphlcd
  git
  {PN}-{PV}
  nothing:git://projects.vdr-developer.org/{PN}-base.git:r=281feef328f8e3772f7a0dde0a90c3a5260c334d:b=touchcol
  patch:file://{PN}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_graphlcd = "Driver and Tools for LCD4LINUX"
PKGR_graphlcd =r1
FILES_graphlcd = \
/usr/bin/* \
/usr/lib/libglcddrivers* \
/usr/lib/libglcdgraphics* \
/usr/lib/libglcdskin* \
/etc/graphlcd.conf

$(DEPDIR)/graphlcd: bootstrap libusb $(DEPENDS_graphlcd)
	$(PREPARE_graphlcd)
	$(start_build)
	cd $(DIR_graphlcd); \
	$(BUILDENV) \
		$(MAKE) all; \
		install -d $(PKDIR)/etc
		$(INSTALL_graphlcd)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_graphlcd)
	touch $@

##############################   LCD4LINUX   ###################################

#
#
# libgd2
#
BEGIN[[
libgd2
  2.0.35
  gd-{PV}
  extract:http://www.chipsnbytes.net/downloads/gd-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END
DESCRIPTION_libgd2 = "A graphics library for fast image creation"

FILES_libgd2 = \
/usr/lib/libgd* \
/usr/bin/*

$(DEPDIR)/libgd2: bootstrap libpng libjpeg libiconv libfreetype $(DEPENDS_libgd2)
	$(PREPARE_libgd2)
	$(start_build)
	cd $(DIR_libgd2); \
		chmod +w configure; \
		libtoolize -f -c; \
		autoreconf --force --install -I$(hostprefix)/share/aclocal; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libgd2)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libgd2)
	touch $@

#
# libusb2
#
BEGIN[[
libusb2
  1.0.18
  libusb-{PV}
  extract:http://downloads.sourceforge.net/project/libusb/libusb-1.0/libusb-{PV}/libusb-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libusb2 = "libusb2"
FILES_libusb2 = \
/usr/lib/*.so*

$(DEPDIR)/libusb2: bootstrap $(DEPENDS_libusb2)
	$(PREPARE_libusb2)
	$(start_build)
	cd $(DIR_libusb2); \
	$(BUILDENV) \
	./configure \
		--build=$(build) \
		--host=$(target) \
		--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libusb2)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libusb2)
	touch $@

#
# libusbcompat
#
BEGIN[[
libusbcompat
  0.1.5
  libusb-compat-{PV}
  extract:http://downloads.sourceforge.net/project/libusb/libusb-compat-0.1/libusb-compat-{PV}/libusb-compat-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libusbcompat = "A compatibility layer allowing applications written for libusb-0.1 to work with libusb-1.0"
FILES_libusbcompat = \
/usr/lib/*.so*

$(DEPDIR)/libusbcompat: bootstrap libusb2 $(DEPENDS_libusbcompat)
	$(PREPARE_libusbcompat)
	$(start_build)
	cd $(DIR_libusbcompat); \
	$(BUILDENV) \
	./configure \
		--build=$(build) \
		--host=$(target) \
		--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libusbcompat)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libusbcompat)
	touch $@

##############################   END EXTERNAL_LCD   #############################


#
# eve-browser
#
BEGIN[[
evebrowser
  svn
  {PN}-{PV}
  svn://eve-browser.googlecode.com/svn/trunk/
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_evebrowser = evebrowser for HbbTv
#RDEPENDS_evebrowser = webkitdfb
FILES_evebrowser = \
/usr/lib/*.so* \
/usr/lib/enigma2/python/Plugins/SystemPlugins/HbbTv/bin/hbbtvscan-sh4 \
/usr/lib/enigma2/python/Plugins/SystemPlugins/HbbTv/*.py

$(DEPDIR)/evebrowser: bootstrap $(DEPENDS_evebrowser)
	$(PREPARE_evebrowser)
	$(start_build)
	cd $(DIR_evebrowser); \
		aclocal -I $(hostprefix)/share/aclocal -I m4; \
		autoheader; \
		autoconf; \
		automake --foreign; \
		libtoolize --force; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		mkdir -p $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/; \
		$(INSTALL_evebrowser); \
		cp -ar enigma2/HbbTv $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/; \
		rm -r $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/HbbTv/bin/hbbtvscan-mipsel; \
		rm -r $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/HbbTv/bin/hbbtvscan-powerpc; \
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_evebrowser)
	touch $@

#
# brofs
#
BEGIN[[
brofs
  1.2
  BroFS{PV}
  extract:http://www.avalpa.com/assets/freesoft/other/BroFS{PV}.tgz
  make:install:prefix=/usr/bin:DESTDIR=PKDIR
;
]]END

DESCRIPTION_brofs = "BROFS (BroadcastReadOnlyFileSystem)"
FILES_brofs = \
/usr/bin/*

$(DEPDIR)/brofs: bootstrap $(DEPENDS_brofs)
	$(PREPARE_brofs)
	$(start_build)
	cd $(DIR_brofs); \
		$(BUILDENV) \
		$(MAKE) all; \
		$(INSTALL_brofs)
		mv -b $(PKDIR)/BroFS $(PKDIR)/usr/bin/; \
		mv -b $(PKDIR)/BroFSCommand $(PKDIR)/usr/bin/; \
		rm -r $(PKDIR)/BroFSd; \
		cd $(PKDIR)/usr/bin/; \
		ln -sf BroFS BroFSd; \
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_brofs)
	touch $@

#
# libcap
#
BEGIN[[
libcap
  2.22
  {PN}-{PV}
  extract:http://mirror.linux.org.au/linux/libs/security/linux-privs/{PN}2/{PN}-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END
DESCRIPTION_libcap = "This is a library for getting and setting POSIX"
FILES_libcap = \
/usr/lib/*.so* \
/usr/sbin/*

$(DEPDIR)/libcap: bootstrap $(DEPENDS_libcap)
	$(PREPARE_libcap)
	$(start_build)
	cd $(DIR_libcap); \
		$(MAKE) \
		DESTDIR=$(PKDIR) \
		PREFIX=$(PKDIR)/usr \
		LIBDIR=$(PKDIR)/usr/lib \
		SBINDIR=$(PKDIR)/usr/sbin \
		INCDIR=$(PKDIR)/usr/include \
		BUILD_CC=gcc \
		PAM_CAP=no \
		LIBATTR=no \
		CC=$(target)-gcc
		$(INSTALL_libcap) \
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libcap)
	touch $@

	
#
# alsa-lib
#
BEGIN[[
libalsa
  1.0.27
  alsa-lib-{PV}
  extract:http://alsa.cybermirror.org/lib/alsa-lib-{PV}.tar.bz2
  #patch:file://alsa-lib-{PV}-soft_float.patch
  make:install:DESTDIR=PKDIR
;
]]END
DESCRIPTION_libalsa = "ALSA library"

FILES_libalsa = \
/usr/lib/libasound*

$(DEPDIR)/libalsa: bootstrap $(DEPENDS_libalsa)
	$(PREPARE_libalsa)
	$(start_build)
	cd $(DIR_libalsa); \
		aclocal -I $(hostprefix)/share/aclocal -I m4; \
		autoheader; \
		autoconf; \
		automake --foreign; \
		libtoolize --force; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--with-debug=no \
			--enable-shared=no \
			--enable-static \
			--disable-python; \
		$(MAKE) all; \
		$(INSTALL_libalsa)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libalsa)
	touch $@

#
# rtmpdump
#
BEGIN[[
rtmpdump
  2.4
  {PN}-{PV}
  extract:http://{PN}.mplayerhq.hu/download/{PN}-{PV}.tar.gz
  pmove:{PN}:{PN}-{PV}
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END
DESCRIPTION_rtmpdump = "rtmpdump is a tool for dumping media content streamed over RTMP."

FILES_rtmpdump = \
/usr/bin/rtmpdump \
/usr/lib/librtmp* \
/usr/sbin/rtmpgw

$(DEPDIR)/rtmpdump: bootstrap openssl openssl-dev $(DEPENDS_rtmpdump)
	$(PREPARE_rtmpdump)
	$(start_build)
	cd $(DIR_rtmpdump); \
	cp $(hostprefix)/share/libtool/config/ltmain.sh ..; \
		libtoolize -f -c; \
		$(BUILDENV) \
			make CROSS_COMPILE=$(target)-; \
		$(INSTALL_rtmpdump)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_rtmpdump)
	touch $@

#
# libdvbsi++
#
BEGIN[[
libdvbsipp
  0.3.7
  libdvbsi++-{PV}
  extract:http://www.saftware.de/libdvbsi++/libdvbsi++-{PV}.tar.bz2
  patch:file://libdvbsi++-{PV}.patch
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END
PKGR_libdvbsipp = r0

DESCRIPTION_libdvbsipp = "libdvbsi++ is a open source C++ library for parsing DVB Service Information and MPEG-2 Program Specific Information."

FILES_libdvbsipp = \
/usr/lib/libdvbsi++*

$(DEPDIR)/libdvbsipp: bootstrap $(DEPENDS_libdvbsipp)
	$(PREPARE_libdvbsipp)
	$(start_build)
	cd $(DIR_libdvbsipp); \
		aclocal -I $(hostprefix)/share/aclocal -I m4; \
		autoheader; \
		autoconf; \
		automake --foreign; \
		libtoolize --force; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libdvbsipp)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libdvbsipp)
	touch $@

#
# tuxtxtlib
#
BEGIN[[
tuxtxtlib
  1.0
  libtuxtxt
  nothing:git://git.code.sf.net/p/openpli/tuxtxt.git:sub=libtuxtxt
  patch:file://libtuxtxt-{PV}-fix_dbox_headers.diff
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_tuxtxtlib = "tuxtxt library"
PKGR_tuxtxtlib = r1
FILES_tuxtxtlib = \
/usr/lib/libtuxtxt*

$(DEPDIR)/tuxtxtlib: bootstrap $(DEPENDS_tuxtxtlib)
	$(PREPARE_tuxtxtlib)
	$(start_build)
	cd $(DIR_tuxtxtlib); \
		aclocal -I $(hostprefix)/share/aclocal; \
		autoheader; \
		autoconf; \
		libtoolize --force; \
		automake --foreign --add-missing; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--with-boxtype=generic \
			--with-configdir=/etc \
			--with-datadir=/usr/share/tuxtxt \
			--with-fontdir=/usr/share/fonts; \
		$(MAKE) all; \
		$(INSTALL_tuxtxtlib)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_tuxtxtlib)
	touch $@

#
# tuxtxt32bpp
#
BEGIN[[
tuxtxt32bpp
  1.0
  tuxtxt
  nothing:git://git.code.sf.net/p/openpli/tuxtxt.git:sub=tuxtxt
  patch:file://{PN}-{PV}-fix_dbox_headers.diff
  make:install:prefix=/usr:DESTDIR=PKDIR
# overwrite after make install
  install -m644 -D:file://../root/usr/tuxtxt/tuxtxt2.conf:PKDIR/etc/tuxtxt/tuxtxt2.conf
;
]]END

DESCRIPTION_tuxtxt32bpp = "tuxtxt plugin"
PKGR_tuxtxt32bpp = r2
FILES_tuxtxt32bpp = \
/usr/lib/libtuxtxt32bpp* \
/usr/lib/enigma2/python/Plugins/Extensions/Tuxtxt/* \
/etc/tuxtxt/tuxtxt2.conf

$(DEPDIR)/tuxtxt32bpp: tuxtxtlib $(DEPENDS_tuxtxt32bpp)
	$(PREPARE_tuxtxt32bpp)
	$(start_build)
	cd $(DIR_tuxtxt32bpp); \
		aclocal -I $(hostprefix)/share/aclocal; \
		autoheader; \
		autoconf; \
		libtoolize --force; \
		automake --foreign --add-missing; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--with-boxtype=generic \
			--with-configdir=/etc \
			--with-datadir=/usr/share/tuxtxt \
			--with-fontdir=/usr/share/fonts; \
		$(MAKE) all; \
		$(INSTALL_tuxtxt32bpp)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_tuxtxt32bpp)
	touch $@

#
# libdreamdvd
#
BEGIN[[
libdreamdvd
  git
  {PN}
  plink:../apps/misc/tools/{PN}:{PN}
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libdreamdvd = "libdreamdvd"
PKGR_libdreamdvd = r1
FILES_libdreamdvd = \
/usr/lib/libdreamdvd*

SRC_URI_libdreamdvd = "libdreamdvd"

$(DEPDIR)/libdreamdvd: bootstrap $(DEPENDS_libdreamdvd)
	$(PREPARE_libdreamdvd)
	$(start_build)
	cd $(DIR_libdreamdvd); \
		aclocal -I $(hostprefix)/share/aclocal; \
		autoheader; \
		autoconf; \
		automake --foreign; \
		libtoolize --force; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libdreamdvd)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libdreamdvd)
	touch $@

#
# libdreamdvd2
#
BEGIN[[
libdreamdvd2
  git
  libdreamdvd
  nothing:git://github.com/mirakels/libdreamdvd.git:r=1bdc2c33f912b9e87cb7e204485a57c6a08a0e8c
  patch:file://libdreamdvd-1.0-support_sh4.patch
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END
DESCRIPTION_libdreamdvd2 = ""
PKGR_libdreamdvd2 = r1
FILES_libdreamdvd2 = \
/usr/lib/*

$(DEPDIR)/libdreamdvd2: bootstrap libdvdnav $(DEPENDS_libdreamdvd2)
	$(PREPARE_libdreamdvd2)
	$(start_build)
	cd $(DIR_libdreamdvd2); \
		autoreconf -i; \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libdreamdvd2)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libdreamdvd2)
	touch $@

#
# libmpeg2
#
BEGIN[[
libmpeg2
  0.5.1
  {PN}-{PV}
  extract:http://{PN}.sourceforge.net/files/{PN}-{PV}.tar.gz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libmpeg2 = "libmpeg2 is a free library for decoding mpeg-2 and mpeg-1 video streams. It is released under the terms of the GPL license."

FILES_libmpeg2 = \
/usr/lib/libmpeg2.* \
/usr/lib/libmpeg2convert.* \
/usr/bin/*

$(DEPDIR)/libmpeg2: bootstrap $(DEPENDS_libmpeg2)
	$(PREPARE_libmpeg2)
	$(start_build)
	cd $(DIR_libmpeg2); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--disable-sdl \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libmpeg2)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libmpeg2)
	touch $@

#
# libsamplerate
#
BEGIN[[
libsamplerate
  0.1.8
  {PN}-{PV}
  extract:http://www.mega-nerd.com/SRC/{PN}-{PV}.tar.gz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libsamplerate = "libsamplerate (also known as Secret Rabbit Code) is a library for perfroming sample rate conversion of audio data."

FILES_libsamplerate = \
/usr/bin/sndfile-resample \
/usr/lib/libsamplerate.*

$(DEPDIR)/libsamplerate: bootstrap $(DEPENDS_libsamplerate)
	$(PREPARE_libsamplerate)
	$(start_build)
	cd $(DIR_libsamplerate); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libsamplerate)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libsamplerate)
	touch $@

#
# libvorbis
#
BEGIN[[
libvorbis
  1.3.2
  {PN}-{PV}
  extract:http://downloads.xiph.org/releases/vorbis/{PN}-{PV}.tar.bz2
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END
DESCRIPTION_libvorbis = "The libvorbis reference implementation provides both a standard encoder and decoder"

FILES_libvorbis = \
/usr/lib/libvorbis*

$(DEPDIR)/libvorbis: bootstrap $(DEPENDS_libvorbis)
	$(PREPARE_libvorbis)
	$(start_build)
	cd $(DIR_libvorbis); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libvorbis)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libvorbis)
	touch $@

#
# libmodplug
#
BEGIN[[
libmodplug
  0.8.8.4
  {PN}-{PV}
  extract:http://downloads.sourceforge.net/project/modplug-xmms/{PN}/{PV}/{PN}-{PV}.tar.gz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libmodplug = "the library for decoding mod-like music formats"

FILES_libmodplug = \
/usr/lib/lib*

$(DEPDIR)/libmodplug: bootstrap $(DEPENDS_libmodplug)
	$(PREPARE_libmodplug)
	$(start_build)
	cd $(DIR_libmodplug); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libmodplug)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libmodplug)
	touch $@

#
# tiff
#
BEGIN[[
tiff
  4.0.1
  {PN}-{PV}
  extract:ftp://ftp.remotesensing.org/pub/lib{PN}/{PN}-{PV}.tar.gz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_tiff = "TIFF Software Distribution"

FILES_tiff = \
/usr/lib/libtiff* \
/usr/bin/*

$(DEPDIR)/tiff: bootstrap $(DEPENDS_tiff)
	$(PREPARE_tiff)
	$(start_build)
	cd $(DIR_tiff); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_tiff)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_tiff)
	touch $@

#
# lzo
#
BEGIN[[
lzo
  2.06
  {PN}-{PV}
  extract:http://www.oberhumer.com/opensource/{PN}/download/{PN}-{PV}.tar.gz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_lzo = "LZO -- a real-time data compression library"

FILES_lzo = \
/usr/lib/*

$(DEPDIR)/lzo: $(DEPENDS_lzo)
	$(PREPARE_lzo)
	$(start_build)
	cd $(DIR_lzo); \
	$(BUILDENV) \
	./configure \
		--build=$(build) \
		--host=$(target) \
		--enable-shared \
		--disable-static \
		--prefix=/usr && \
	$(MAKE) all; \
	$(INSTALL_lzo)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_lzo)
	touch $@

#
# yajl
#
BEGIN[[
yajl
  2.0.1
  {PN}-{PV}
  nothing:git://github.com/lloyd/{PN}:r=f4b2b1af87483caac60e50e5352fc783d9b2de2d
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_yajl = "Yet Another JSON Library"
PKGR_yajl = r1
FILES_yajl = \
/usr/lib/libyajl.* \
/usr/bin/json*

$(DEPDIR)/yajl: bootstrap $(DEPENDS_yajl)
	$(PREPARE_yajl)
	$(start_build)
	cd $(DIR_yajl); \
		$(BUILDENV) \
		./configure \
			--prefix=/usr; \
		sed -i "s/install: all/install: distro/g" Makefile; \
		$(MAKE) distro; \
		$(INSTALL_yajl)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_yajl)
	touch $@

#
# libpcre (shouldn't this be named pcre without the lib?)
#
BEGIN[[
libpcre
  8.31
  pcre-{PV}
  extract:ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-{PV}.tar.bz2
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libpcre = "Perl-compatible regular expression library"

FILES_libpcre = \
/usr/lib/* \
/usr/bin/pcre*

$(DEPDIR)/libpcre: bootstrap $(DEPENDS_libpcre)
	$(PREPARE_libpcre)
	$(start_build)
	cd $(DIR_libpcre); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--enable-utf8 \
			--enable-unicode-properties; \
		$(MAKE) all; \
		sed -e "s,^prefix=,prefix=$(targetprefix)," < pcre-config > $(crossprefix)/bin/pcre-config; \
		chmod 755 $(crossprefix)/bin/pcre-config; \
		$(INSTALL_libpcre)
		rm -f $(targetprefix)/usr/bin/pcre-config
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libpcre)
	touch $@

#
# libcdio
#
BEGIN[[
libcdio
  0.83
  {PN}-{PV}
  extract:ftp://ftp.gnu.org/gnu/{PN}/{PN}-{PV}.tar.gz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libcdio = "The libcdio package contains a library for CD-ROM and CD image access"

FILES_libcdio = \
/usr/lib/* \
/usr/bin/*

$(DEPDIR)/libcdio: bootstrap $(DEPENDS_libcdio)
	$(PREPARE_libcdio)
	$(start_build)
	cd $(DIR_libcdio); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libcdio)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libcdio)
	touch $@

#
# jasper
#
BEGIN[[
jasper
  1.900.1
  {PN}-{PV}
  extract:http://www.ece.uvic.ca/~frodo/{PN}/software/{PN}-{PV}.zip
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_jasper = "JasPer is a collection \
of software (i.e., a library and application programs) for the coding \
and manipulation of images.  This software can handle image data in a \
variety of formats"

FILES_jasper = \
/usr/bin/* 

$(DEPDIR)/jasper: bootstrap $(DEPENDS_jasper)
	$(PREPARE_jasper)
	$(start_build)
	cd $(DIR_jasper@/@DIR_jasper); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_jasper)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_jasper)
	touch $@

#
# mysql
#
BEGIN[[
mysql
  5.1.40
  {PN}-{PV}
  extract:http://downloads.{PN}.com/archives/{PN}-5.1/{PN}-{PV}.tar.gz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_mysql = "MySQL"

FILES_mysql = \
/usr/bin/*

$(DEPDIR)/mysql: bootstrap $(DEPENDS_mysql)
	$(PREPARE_mysql)
	$(start_build)
	cd $(DIR_mysql); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--with-atomic-ops=up --with-embedded-server --prefix=/usr --sysconfdir=/etc/mysql --localstatedir=/var/mysql --disable-dependency-tracking --without-raid --without-debug --with-low-memory --without-query-cache --without-man --without-docs --without-innodb; \
		$(MAKE) all; \
		$(INSTALL_mysql)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_mysql)
	touch $@

#
# xupnpd
#
BEGIN[[
xupnpd
  svn
  {PN}-{PV}
  svn://tsdemuxer.googlecode.com/svn/trunk/xupnpd/src/
  patch-0:file://{PN}.diff
  make:install:DESTDIR=PKDIR
;
]]END


DESCRIPTION_xupnpd = eXtensible UPnP agent
FILES_xupnpd = \
/

$(DEPDIR)/xupnpd: bootstrap $(DEPENDS_xupnpd)
	$(PREPARE_xupnpd)
	$(start_build)
	cd $(DIR_xupnpd); \
		$(BUILDENV) \
	$(MAKE) embedded; \
	  install -d 0644  $(PKDIR)/{etc,usr/bin}; \
	  install -m 0755 xupnpd- $(PKDIR)/usr/bin/xupnpd; \
	  install -d 0644  $(PKDIR)/usr/share/xupnpd/{ui,www,plugins,config,playlists}; \
	  install -m 0644 *.lua $(PKDIR)/usr/share/xupnpd; \
	  install -m 0644 ui/* $(PKDIR)/usr/share/xupnpd/ui; \
	  install -m 0644 www/* $(PKDIR)/usr/share/xupnpd/www; \
	  install -m 0644 plugins/* $(PKDIR)/usr/share/xupnpd/plugins; \
	  cp -a playlists/*.m3u $(PKDIR)/usr/share/xupnpd/playlists; \
	  $(LN_SF)  /usr/share/xupnpd/xupnpd.lua $(PKDIR)/etc/xupnpd.lua
#	  install -D -m 0755 xupnpd-init.file $(PKDIR)/etc/init.d/xupnpd
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_xupnpd)
	touch $@
   
#
# libmicrohttpd
#
BEGIN[[
libmicrohttpd
  0.9.19
  {PN}-{PV}
  extract:http://ftp.halifax.rwth-aachen.de/gnu/{PN}/{PN}-{PV}.tar.gz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libmicrohttpd = ""

FILES_libmicrohttpd = \
/usr/lib/libmicrohttpd.*

$(DEPDIR)/libmicrohttpd: bootstrap $(DEPENDS_libmicrohttpd)
	$(PREPARE_libmicrohttpd)
	$(start_build)
	cd $(DIR_libmicrohttpd); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libmicrohttpd)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libmicrohttpd)
	touch $@

#
# libexif
#
BEGIN[[
libexif
  0.6.20
  {PN}-{PV}
  extract:http://sourceforge.net/projects/{PN}/files/{PN}/{PV}/{PN}-{PV}.tar.gz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libexif = "libexif is a library for parsing, editing, and saving EXIF data."

FILES_libexif = \
/usr/lib/libexif.*

$(DEPDIR)/libexif: bootstrap $(DEPENDS_libexif)
	$(PREPARE_libexif)
	$(start_build)
	cd $(DIR_libexif); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libexif)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libexif)
	touch $@

#
# minidlna
#
BEGIN[[
minidlna
  1.1.1
  {PN}-{PV}
  extract:http://netcologne.dl.sourceforge.net/project/{PN}/{PN}/{PV}/{PN}_{PV}_src.tar.gz
  patch:file://{PN}-{PV}.patch
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_minidlna = "The MiniDLNA daemon is an UPnP-A/V and DLNA service which serves multimedia content to compatible clients on the network."

FILES_minidlna = \
/usr/lib/* \
/usr/sbin/*
$(DEPDIR)/minidlna: bootstrap ffmpeg libflac libogg libvorbis libid3tag sqlite libexif libjpeg $(DEPENDS_minidlna)
	$(PREPARE_minidlna)
	$(start_build)
	cd $(DIR_minidlna); \
		libtoolize -f -c; \
		$(BUILDENV) \
		DESTDIR=$(prefix)/cdkroot \
		$(MAKE) \
		PREFIX=$(prefix)/cdkroot/usr \
		LIBDIR=$(prefix)/cdkroot/usr/lib \
		SBINDIR=$(prefix)/cdkroot/usr/sbin \
		INCDIR=$(prefix)/cdkroot/usr/include \
		PAM_CAP=no \
		LIBATTR=no; \
		$(INSTALL_minidlna)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_minidlna)
	touch $@

#
# vlc
#
BEGIN[[
vlc
  2.0.3
  {PN}-{PV}
  extract:http://download.videolan.org/pub/videolan/{PN}/{PV}/{PN}-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_vlc = "VLC player"

FILES_vlc = \
/usr/bin/* \
/usr/lib/libvlc* \
/usr/lib/vlc/plugins/access/*.so \
/usr/lib/vlc/plugins/access_output/*.so \
/usr/lib/vlc/plugins/audio_filter/*.so \
/usr/lib/vlc/plugins/audio_mixer/*.so \
/usr/lib/vlc/plugins/audio_output/*.so \
/usr/lib/vlc/plugins/codec/*.so \
/usr/lib/vlc/plugins/control/*.so \
/usr/lib/vlc/plugins/demux/*.so \
/usr/lib/vlc/plugins/gui/*.so \
/usr/lib/vlc/plugins/meta_engine/*.so \
/usr/lib/vlc/plugins/misc/*.so \
/usr/lib/vlc/plugins/mux/*.so \
/usr/lib/vlc/plugins/packetizer/*.so \
/usr/lib/vlc/plugins/services_discovery/*.so \
/usr/lib/vlc/plugins/stream_filter/*.so \
/usr/lib/vlc/plugins/stream_out/*.so \
/usr/lib/vlc/plugins/video_chroma/*.so \
/usr/lib/vlc/plugins/video_filter/*.so \
/usr/lib/vlc/plugins/video_output/*.so \
/usr/lib/vlc/plugins/visualization/*.so

$(DEPDIR)/vlc: bootstrap libstdc++-dev libfribidi ffmpeg $(DEPENDS_vlc)
	$(PREPARE_vlc)
	$(start_build)
	cd $(DIR_vlc); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--host=$(target) \
			--disable-fontconfig \
			--prefix=/usr \
			--disable-xcb \
			--disable-glx \
			--disable-qt4 \
			--disable-mad \
			--disable-postproc \
			--disable-a52 \
			--disable-qt4 \
			--disable-skins2 \
			--disable-remoteosd \
			--disable-lua \
			--disable-libgcrypt \
			--disable-nls \
			--disable-mozilla \
			--disable-dbus \
			--disable-sdl \
			--enable-run-as-root; \
		$(MAKE); \
		$(INSTALL_vlc)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_vlc)
	touch $@

#
# djmount
#
BEGIN[[
djmount
  0.71
  {PN}-{PV}
  extract:http://sourceforge.net/projects/{PN}/files/{PN}/{PV}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_djmount = djmount is a UPnP AV client. It mounts as a Linux filesystem the media content of compatible UPnP AV devices.
RDEPENDS_djmount = fuse
FILES_djmount = \
/usr/bin/* \
/usr/lib/*

$(DEPDIR)/djmount: bootstrap fuse $(DEPENDS_djmount)
	$(PREPARE_djmount)
	$(start_build)
	cd $(DIR_djmount); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_djmount)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_djmount)
	touch $@

#
# libupnp
#
BEGIN[[
libupnp
  1.6.17
  {PN}-{PV}
  extract:http://sourceforge.net/projects/upnp/files/latest/download/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libupnp = "The portable SDK for UPnP™ Devices (libupnp) provides developers with an API and open source code for building control points"

FILES_libupnp = \
/usr/lib/*.so*

$(DEPDIR)/libupnp: bootstrap $(DEPENDS_libupnp)
	$(PREPARE_libupnp)
	$(start_build)
	cd $(DIR_libupnp); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libupnp)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libupnp)
	touch $@

#
# rarfs
#
BEGIN[[
rarfs
  0.1.1
  {PN}-{PV}
  extract:http://sourceforge.net/projects/{PN}/files/{PN}/{PV}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_rarfs = ""

FILES_rarfs = \
/usr/lib/*.so* \
/usr/bin/*

$(DEPDIR)/rarfs: bootstrap libstdc++-dev fuse $(DEPENDS_rarfs)
	$(PREPARE_rarfs)
	$(start_build)
	cd $(DIR_rarfs); \
		export PKG_CONFIG_PATH=$(targetprefix)/usr/lib/pkgconfig; \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os -D_FILE_OFFSET_BITS=64" \
		./configure \
			--host=$(target) \
			--disable-option-checking \
			--includedir=/usr/include/fuse \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_rarfs)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_rarfs)
	touch $@

#
# sshfs
#
BEGIN[[
sshfs
  2.4
  {PN}-fuse-{PV}
  extract:http://fossies.org/linux/misc/{PN}-fuse-{PV}.tar.bz2
  make:install:DESTDIR=TARGETS
;
]]END

$(DEPDIR)/sshfs: bootstrap fuse $(DEPENDS_sshfs)
	$(PREPARE_sshfs)
	$(start_build)
	cd $(DIR_sshfs); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_sshfs)
	$(DISTCLEANUP_sshfs)
	touch $@

#
# gmediarender
#
BEGIN[[
gmediarender
  0.0.6
  {PN}-{PV}
  extract:http://savannah.nongnu.org/download/gmrender/{PN}-{PV}.tar.bz2
  patch:file://{PN}.patch
  make:install:DESTDIR=TARGETS
;
]]END

$(DEPDIR)/gmediarender: bootstrap libstdc++-dev gst_plugins_dvbmediasink libupnp $(DEPENDS_gmediarender)
	$(PREPARE_gmediarender)
	$(start_build)
	cd $(DIR_gmediarender); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--with-libupnp=$(targetprefix)/usr; \
		$(MAKE) all; \
		$(INSTALL_gmediarender)
	$(DISTCLEANUP_gmediarender)
	touch $@
#
# mediatomb
#
BEGIN[[
mediatomb
  0.12.1
  {PN}-{PV}
  extract:http://downloads.sourceforge.net/{PN}/{PN}-{PV}.tar.gz
  patch:file://{PN}_metadata.patch
#  patch:file://{PN}_libav_support.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_mediatomb = MediaTomb is an open source (GPL) UPnP MediaServer with a nice web user interfaces
FILES_mediatomb = \
/usr/bin/* \
/usr/share/mediatomb/*

$(DEPDIR)/mediatomb: bootstrap libstdc++-dev ffmpeg curl sqlite libexpat $(DEPENDS_mediatomb)
	$(PREPARE_mediatomb)
	$(start_build)
	cd $(DIR_mediatomb); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--host=$(target) \
			--disable-ffmpegthumbnailer \
			--disable-libmagic \
			--disable-mysql \
			--disable-id3lib \
			--disable-taglib \
			--disable-lastfmlib \
			--disable-libexif \
			--disable-libmp4v2 \
			--disable-inotify \
			--with-avformat-h=$(targetprefix)/usr/include \
			--disable-rpl-malloc \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_mediatomb)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_mediatomb)
	touch $@

#
# tinyxml
#
BEGIN[[
tinyxml
  2.6.2
  {PN}-{PV}
  extract:http://ignum.dl.sourceforge.net/project/tinyxml/tinyxml/{PV}/tinyxml_2_6_2.tar.gz
  pmove:{PN}:{PN}-{PV}
  patch:file://{PN}{PV}.patch
  make:install:PREFIX=PKDIR/usr:LD=sh4-linux-ld
;
]]END

DESCRIPTION_tinyxml = tinyxml
FILES_tinyxml = \
/usr/lib/*

$(DEPDIR)/tinyxml: $(DEPENDS_tinyxml)
	$(PREPARE_tinyxml)
	$(start_build)
	cd $(DIR_tinyxml); \
		libtoolize -f -c; \
		$(BUILDENV) \
		$(MAKE); \
		$(INSTALL_tinyxml)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_tinyxml)
	touch $@

#
# libnfs
#
BEGIN[[
libnfs
  git
  {PN}
  git://github.com/sahlberg/libnfs.git:r=c0ebf57b212ffefe83e2a50358499f68e7289e93
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libnfs = nfs
PKGR_libnfs = r1
FILES_libnfs = \
/usr/lib/*

$(DEPDIR)/libnfs: bootstrap $(DEPENDS_libnfs)
	$(PREPARE_libnfs)
	$(start_build)
	cd $(DIR_libnfs); \
		aclocal -I $(hostprefix)/share/aclocal; \
		autoheader; \
		autoconf; \
		automake --foreign; \
		libtoolize --force; \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_libnfs)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libnfs)
	touch $@

#
# taglib
#
BEGIN[[
taglib
  1.8
  {PN}-{PV}
  extract:https://github.com/downloads/{PN}/{PN}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_taglib = taglib
FILES_taglib = \
/usr/*

$(DEPDIR)/taglib: bootstrap $(DEPENDS_taglib)
	$(PREPARE_taglib)
	$(start_build)
	cd $(DIR_taglib); \
		$(BUILDENV) \
		cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_RELEASE_TYPE=Release .; \
		$(MAKE) all; \
		$(INSTALL_taglib)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_taglib)
	touch $@

#
# e2-rtmpgw
#
BEGIN[[
e2_rtmpgw
  git
  {PN}
  git://github.com/zakalibit/e2-rtmpgw.git:b=gw-e2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_e2_rtmpgw = A toolkit for RTMP streams
PKGR_e2_rtmpgw = r1
FILES_e2_rtmpgw = \
/usr/sbin/rtmpgw2

$(DEPDIR)/e2_rtmpgw: bootstrap openssl openssl-dev libz $(DEPENDS_e2_rtmpgw)
	$(PREPARE_e2_rtmpgw)
	$(start_build)
	cd $(DIR_e2_rtmpgw); \
		$(BUILDENV) \
		$(MAKE) all; \
		$(INSTALL_e2_rtmpgw)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_e2_rtmpgw)
	touch $@

#
# libx264
#
BEGIN[[
libx264
  x264
  {PV}-snapshot-20130608-2245
  extract:ftp://ftp.videolan.org/pub/x264/snapshots/last_{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libx264 = "libx264"

FILES_libx264 = \
/usr/lib/*.so* \
/usr/bin/*

$(DEPDIR)/libx264: bootstrap $(DEPENDS_libx264)
	$(PREPARE_libx264)
	$(start_build)
	cd $(DIR_libx264); \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--system-libx264 \
			--enable-shared \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libx264)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libx264)
	touch $@

#
# libaacplus
#
BEGIN[[
libaacplus
  2.0.2
  {PN}-{PV}
  extract:http://ffmpeg.gusari.org/uploads/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libaacplus = "libaacplus"

FILES_libaacplus = \
/usr/bin/*

$(DEPDIR)/libaacplus: bootstrap $(DEPENDS_libaacplus)
	$(PREPARE_libaacplus)
	$(start_build)
	cd $(DIR_libaacplus); \
		./autogen.sh; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--with-parameter-expansion-string-replace-capable-shell=/bin/bash \
			--disable-shared \
			--enable-static \
			--without-fftw3 \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libaacplus)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libaacplus)
	touch $@

#
# libfaac
#
BEGIN[[
libfaac
  1.28
  faac-{PV}
  extract:http://downloads.sourceforge.net/faac/faac-{PV}.tar.bz2
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libfaac = "libfaac"

FILES_libfaac = \
/usr/lib/*.so* \
/usr/bin/*

$(DEPDIR)/libfaac: bootstrap $(DEPENDS_libfaac)
	$(PREPARE_libfaac)
	$(start_build)
	cd $(DIR_libfaac); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--without-mp4v2 \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_libfaac)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_libfaac)
	touch $@
#
# CONSOLE_DATA
#
BEGIN[[
console_data
  1.12
  {PN}-{PV}
  extract:ftp://ftp.debian.org/debian/pool/main/c/{PN}/{PN}_{PV}.orig.tar.gz
  make:install
;
]]END

$(DEPDIR)/console_data: bootstrap $(DEPENDS_console_data)
	$(PREPARE_console_data)
	cd $(DIR_console_data) && \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=$(targetprefix) \
			--with-main_compressor=gzip && \
		$(INSTALL_console_data)
	$(CLEANUP_console_data)
	touch $@

#
# SYSVINIT/INITSCRIPTS
#
BEGIN[[
sysvinit
  2.88
  {PN}-{PV}
  extract:ftp://ftp.cistron.nl/pub/people/miquels/{PN}/{PN}-{PV}.tar.gz
  nothing:http://ftp.de.debian.org/debian/pool/main/s/{PN}/{PN}_{PV}dsf-13.1+squeeze1.diff.gz
;
]]END

SYSVINIT := sysvinit
INITSCRIPTS := initscripts
FILES_sysvinit = \
/sbin/fsck.nfs \
/sbin/killall5 \
/sbin/init \
/sbin/halt \
/sbin/poweroff \
/sbin/shutdown \
/sbin/reboot

SYSVINIT := sysvinit
INITSCRIPTS := initscripts
SYSVINITTOOLS := sysvinit-tools
SYSVINIT_VERSION := 2.86-15
SYSVINIT_SPEC := stm-target-$(SYSVINIT).spec
SYSVINIT_SPEC_PATCH := stm-target-$(SYSVINIT)-$(SYSVINIT_VERSION).spec.diff
SYSVINIT_PATCHES := stm-target-$(SYSVINIT)-$(SYSVINIT_VERSION).patch

SYSVINIT_RPM := RPMS/sh4/$(STLINUX)-sh4-$(SYSVINIT)-$(SYSVINIT_VERSION).sh4.rpm
INITSCRIPTS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(INITSCRIPTS)-$(SYSVINIT_VERSION).sh4.rpm
SYSVINITTOOLS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(SYSVINITTOOLS)-$(SYSVINIT_VERSION).sh4.rpm

$(SYSVINIT_RPM) $(SYSVINITTOOLS_RPM) $(INITSCRIPTS_RPM): \
		$(addprefix Patches/,$(SYSVINIT_SPEC_PATCH) $(SYSVINIT_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(SYSVINIT)-$(SYSVINIT_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(SYSVINIT_SPEC_PATCH),( cd SPECS && patch -p1 $(SYSVINIT_SPEC) < $(buildprefix)/Patches/$(SYSVINIT_SPEC_PATCH) ) &&) \
	$(if $(SYSVINIT_PATCHES),cp $(addprefix Patches/,$(SYSVINIT_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(SYSVINIT_SPEC)

$(DEPDIR)/$(SYSVINIT): $(SYSVINIT_ADAPTED_ETC_FILES:%=root/etc/%) $(SYSVINIT_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	( cd root/etc && for i in $(SYSVINIT_ADAPTED_ETC_FILES); do \
		[ -f $$i ] && $(INSTALL) -m644 $$i $(prefix)/$*cdkroot/etc/$$i || true; \
		[ "$${i%%/*}" = "init.d" ] && chmod 755 $(prefix)/$*cdkroot/etc/$$i || true; done )
	$(start_build)
	$(fromrpm_build)
	touch $@

$(DEPDIR)/$(SYSVINITTOOLS): $(SYSVINITTOOLS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $<
	$(start_build)
	$(fromrpm_build)
	touch $@

$(DEPDIR)/$(INITSCRIPTS): $(INITSCRIPTS_ADAPTED_ETC_FILES:%=root/etc/%) $(INITSCRIPTS_RPM) | filesystem
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force --nopost -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	( cd $(prefix)/$*cdkroot/etc/init.d/ && \
		sed -e "s|-uid 0 ||g" -i bootclean.sh && \
		sed -e "s|-empty ||g" -i bootclean.sh && \
		sed -e "s/chmod \-f/chmod/g" -i bootmisc.sh && \
		sed -e "s/chown \-f/chown/g" -i bootmisc.sh && \
		sed -e "s|/etc/nologin|/var/tmp/nologin|g" -i bootmisc.sh && \
		sed -e "s|PATH=/lib/init:/bin:/sbin|PATH=/lib/init:/bin:/sbin:/usr/bin:/usr/sbin|g" -i checkroot.sh && \
		sed -e "s/hostname \-\-file/hostname \-F/g" -i hostname.sh && \
		sed -e "s|PATH=/lib/init:/sbin:/bin|PATH=/lib/init:/bin:/sbin:/usr/bin:/usr/sbin|g" -i rmnologin && \
		sed -e "s|# chkconfig: 2345 99 0|# chkconfig: 2345 69 0|" -i rmnologin && \
		sed -e "s|readlink -f /etc/nologin|readlink -f /var/tmp/nologin|g" -i rmnologin ) 
	( cd $(prefix)/$*cdkroot/etc/default/ && \
		sed -e "s|EDITMOTD=yes|EDITMOTD=no|g" -i rcS )
	( cd root/etc && for i in $(INITSCRIPTS_ADAPTED_ETC_FILES); do \
		[ -f $$i ] && $(INSTALL) -m644 $$i $(prefix)/$*cdkroot/etc/$$i || true; \
		[ "$${i%%/*}" = "init.d" ] && chmod 755 $(prefix)/$*cdkroot/etc/$$i || true; done ) || true 
	( export HHL_CROSS_TARGET_DIR=$(prefix)/$*cdkroot && cd $(prefix)/$*cdkroot/etc/init.d && \
		for s in init.d/mountvirtfs bootlogd checkroot.sh checkfs.sh mountall.sh \
		hostname.sh mountnfs.sh bootmisc.sh urandom \
		sendsigs umountnfs.sh umountfs halt reboot \
		rmnologin single stop-bootlogd ; do \
			$(hostprefix)/bin/target-initdconfig --add $${s#init.d/} || \
			echo "Unable to enable initd service: $${s#init.d/}" ; done && rm *rpmsave *.orig 2>/dev/null || true )
	touch $@
	

#
# NETBASE
#
NETBASE := netbase
NETBASE_VERSION := 4.34-10
NETBASE_SPEC := stm-target-$(NETBASE).spec
NETBASE_SPEC_PATCHES :=
NETBASE_PATCHES :=

NETBASE_RPM := RPMS/sh4/$(STLINUX)-sh4-$(NETBASE)-$(NETBASE_VERSION).sh4.rpm

$(NETBASE_RPM): \
		$(addprefix Patches/,$(NETBASE_SPEC_PATCH) $(NETBASE_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(NETBASE)-$(NETBASE_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $< && \
	$(if $(NETBASE_SPEC_PATCH),( cd SPECS && patch -p1 $(NETBASE_SPEC) < $(buildprefix)/Patches/$(NETBASE_PATCH) ) &&) \
	$(if $(NETBASE_PATCHES),cp $(addprefix Patches/,$(NETBASE_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/stm-target-$(NETBASE).spec

$(DEPDIR)/$(NETBASE): $(NETBASE_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force --nopost -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	( cd root/etc/network && $(INSTALL) interfaces $(prefix)/$*cdkroot/etc/network/interfaces || true ) && \
	( export HHL_CROSS_TARGET_DIR=$(prefix)/$*cdkroot && cd $(prefix)/$*cdkroot/etc/init.d && \
		for s in networking ; do \
			$(hostprefix)/bin/target-initdconfig --add $${s#init.d/} || \
			echo "Unable to enable initd service: $${s#init.d/}" ; \
		done && rm *rpmsave 2>/dev/null || true ) && \
	( cd $(prefix)/$*cdkroot/etc/network && \
		for i in if-down.d if-post-down.d if-pre-up.d if-up.d run; do \
			$(INSTALL) -d $$i; \
		done )
	touch $@

#
# BC
#
BC := bc
BC_VERSION := 1.06-6
BC_SPEC := stm-target-$(BC).spec
BC_SPEC_PATCH :=
BC_PATCHES :=

BC_RPM := RPMS/sh4/$(STLINUX)-sh4-$(BC)-$(BC_VERSION).sh4.rpm

$(BC_RPM): \
		$(addprefix Patches/,$(BC_SPEC_PATCH) $(BC_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(BC)-$(BC_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(BC_SPEC_PATCH),( cd SPECS && patch -p1 $(BC_SPEC) < $(buildprefix)/Patches/$(BC_PATCH) ) &&) \
	$(if $(BC_PATCHES),cp $(addprefix Patches/,$(BC_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(BC_SPEC)

$(DEPDIR)/$(BC): $(BC_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force --noscripts -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# FINDUTILS
#
FINDUTILS := findutils
FINDUTILS_VERSION := 4.1.20-14
FINDUTILS_SPEC := stm-target-$(FINDUTILS).spec
FINDUTILS_SPEC_PATCH :=
FINDUTILS_PATCHES := 

FINDUTILS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(FINDUTILS)-$(FINDUTILS_VERSION).sh4.rpm

$(FINDUTILS_RPM): \
		$(addprefix Patches/,$(FINDUTILS_SPEC_PATCH) $(FINDUTILS_PATCHES)) \
		$(DEPDIR)/$(GLIBC_DEV) \
		$(archivedir)/$(STLINUX)-target-$(FINDUTILS)-$(FINDUTILS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(FINDUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(FINDUTILS_SPEC) < $(buildprefix)/Patches/$(FINDUTILS_PATCH) ) &&) \
	$(if $(FINDUTILS_PATCHES),cp $(addprefix Patches/,$(FINDUTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(FINDUTILS_SPEC)

$(DEPDIR)/$(FINDUTILS): $(FINDUTILS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps  -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $<
	touch $@

#
# DISTRIBUTIONUTILS
#
DISTRIBUTIONUTILS := distributionutils
DESCRIPTION_distributionutils = utilities to setup system
FILES_distributionutils = /usr/sbin/initdconfig
DISTRIBUTIONUTILS_DOC := distributionutils-doc
DISTRIBUTIONUTILS_VERSION := 3.2.1-10
DISTRIBUTIONUTILS_SPEC := stm-target-$(DISTRIBUTIONUTILS).spec
DISTRIBUTIONUTILS_SPEC_PATCH :=
DISTRIBUTIONUTILS_PATCHES :=

DISTRIBUTIONUTILS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(DISTRIBUTIONUTILS)-$(DISTRIBUTIONUTILS_VERSION).sh4.rpm
DISTRIBUTIONUTILS_DOC_RPM := RPMS/sh4/$(STLINUX)-sh4-$(DISTRIBUTIONUTILS_DOC)-$(DISTRIBUTIONUTILS_VERSION).sh4.rpm

$(DISTRIBUTIONUTILS_RPM) $(DISTRIBUTIONUTILS_DOC_RPM): \
		$(addprefix Patches/,$(DISTRIBUTIONUTILS_SPEC_PATCH) $(DISTRIBUTIONUTILS_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(DISTRIBUTIONUTILS)-$(DISTRIBUTIONUTILS_VERSION).src.rpm \
		| $(DEPDIR)/$(GLIBC_DEV)
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(DISTRIBUTIONUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(DISTRIBUTIONUTILS_SPEC) < $(buildprefix)/Patches/$(DISTRIBUTIONUTILS_SPEC_PATCH) ) &&) \
	$(if $(DISTRIBUTIONUTILS_PATCHES),cp $(addprefix Patches/,$(DISTRIBUTIONUTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(DISTRIBUTIONUTILS_SPEC)

$(DEPDIR)/$(DISTRIBUTIONUTILS): $(DISTRIBUTIONUTILS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@

$(DEPDIR)/$(DISTRIBUTIONUTILS_DOC): \
$(DEPDIR)/%$(DISTRIBUTIONUTILS_DOC): $(DISTRIBUTIONUTILS_DOC_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# MTD-UTILS
#
MTD_UTILS := mtd-utils
FILES_mtd_utils = \
/usr/sbin/mkfs.jffs2 \
/usr/sbin/nanddump \
/usr/sbin/flash_erase \
/usr/sbin/flashcp \
/usr/sbin/mtdinfo \
/usr/sbin/nandwrite \
/usr/sbin/flash_eraseall \
/usr/sbin/flash_lock \
/usr/sbin/flash_unlock \
/usr/sbin/flashcp
MTD_UTILS_VERSION := 1.5.0-18
MTD_UTILS_SPEC := stm-target-$(MTD_UTILS).spec
MTD_UTILS_SPEC_PATCH := stm-target-$(MTD_UTILS).spec.diff
MTD_UTILS_PATCHES := stm-target-$(MTD_UTILS).diff

MTD_UTILS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(MTD_UTILS)-$(MTD_UTILS_VERSION).sh4.rpm

$(MTD_UTILS_RPM): lzo \
		$(addprefix Patches/,$(MTD_UTILS_SPEC_PATCH) $(MTD_UTILS_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(MTD_UTILS)-$(MTD_UTILS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(MTD_UTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(MTD_UTILS_SPEC) < $(buildprefix)/Patches/$(MTD_UTILS_SPEC_PATCH) ) &&) \
	$(if $(MTD_UTILS_PATCHES),cp $(addprefix Patches/,$(MTD_UTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(MTD_UTILS_SPEC)

$(DEPDIR)/$(MTD_UTILS): $(MTD_UTILS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@

#
# BASH
#
BASH := bash
BASH_VERSION := 3.0-21
BASH_SPEC := stm-target-$(BASH).spec
BASH_SPEC_PATCH :=
BASH_PATCHES :=
BASH_RPM := RPMS/sh4/$(STLINUX)-sh4-$(BASH)-$(BASH_VERSION).sh4.rpm

$(BASH_RPM): \
		$(if $(BASH_SPEC_PATCH),Patches/$(BASH_SPEC_PATCH)) \
		$(if $(BASH_PATCHES),$(BASH_PATCHES:%=Patches/%)) \
		$(DEPDIR)/$(GLIBC_DEV) \
		$(DEPDIR)/$(LIBTERMCAP_DEV) \
		$(archivedir)/$(STLINUX)-target-$(BASH)-$(BASH_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(BASH_SPEC_PATCH),( cd SPECS && patch -p1 $(BASH_SPEC) < $(buildprefix)/Patches/$(BASH_PATCH) ) &&) \
	$(if $(BASH_PATCHES),cp $(BASH_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(BASH_SPEC)

$(DEPDIR)/$(BASH): $(DEPDIR)/%$(BASH): $(DEPDIR)/%$(GLIBC) $(DEPDIR)/%$(LIBTERMCAP) $(BASH_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --noscripts --force -Uhvv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	[ "x$*" = "x" ] && touch -r $(lastword $^) $@ || true

$(BASH).do_clean: %$(BASH).do_clean:
	export HHL_CROSS_TARGET_DIR=$(prefix)/$*cdkroot && \
	$(hostprefix)/bin/target-shellconfig --list || true && \
	( $(hostprefix)/bin/target-shellconfig --del /bin/bash ) &> /dev/null || echo "Unable to unregister shell" && \
	$(hostprefix)/bin/target-shellconfig --list && \
	rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) -ev --noscripts $(STLINUX)-sh4-$(BASH) || true && \
	[ "x$*" = "x" ] && [ -f .deps/$(subst -clean,,$@) ] && rm .deps/$(subst -clean,,$@) || true

#
# COREUTILS
#
COREUTILS := coreutils
COREUTILS_VERSION := 8.9-19
COREUTILS_SPEC := stm-target-$(COREUTILS).spec
COREUTILS_SPEC_PATCH :=
COREUTILS_PATCHES :=

COREUTILS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(COREUTILS)-$(COREUTILS_VERSION).sh4.rpm

$(COREUTILS_RPM): \
		$(addprefix Patches/,$(COREUTILS_SPEC_PATCH) $(COREUTILS_PATCHES)) \
		$(DEPDIR)/$(GLIBC_DEV) \
		$(archivedir)/$(STLINUX)-target-$(COREUTILS)-$(COREUTILS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(COREUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(COREUTILS_SPEC) < $(buildprefix)/Patches/$(COREUTILS_PATCH) ) &&) \
	$(if $(COREUTILS_PATCHES),cp $(addprefix Patches/,$(COREUTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(COREUTILS_SPEC)

$(DEPDIR)/$(COREUTILS): $(DEPDIR)/%$(GLIBC) $(COREUTILS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# NET-TOOLS
#
NET_TOOLS := net-tools
NET_TOOLS_VERSION := 1.60-9
NET_TOOLS_SPEC := stm-target-$(NET_TOOLS).spec
NET_TOOLS_SPEC_PATCH :=
NET_TOOLS_PATCHES :=

NET_TOOLS_RPM = RPMS/sh4/$(STLINUX)-sh4-$(NET_TOOLS)-$(NET_TOOLS_VERSION).sh4.rpm

$(NET_TOOLS_RPM): \
		$(addprefix Patches/,$(NET_TOOLS_SPEC_PATCH) $(NET_TOOLS_PATCHES)) \
		$(DEPDIR)/$(GLIBC_DEV) \
		$(archivedir)/$(STLINUX)-target-$(NET_TOOLS)-$(NET_TOOLS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(NET_TOOLS_SPEC_PATCH),( cd SPECS && patch -p1 $(NET_TOOLS_SPEC) < $(buildprefix)/Patches/$(NET_TOOLS_PATCH) ) &&) \
	$(if $(NET_TOOLS_PATCHES),cp $(addprefix Patches/,$(NET_TOOLS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(NET_TOOLS_SPEC)

$(DEPDIR)/$(NET_TOOLS): $(DEPDIR)/%$(GLIBC) $(NET_TOOLS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# SED
#
SEDX := sed
SED_VERSION := 4.1.5-14
SED_SPEC := stm-target-$(SEDX).spec
SED_SPEC_PATCH :=
SED_PATCHES :=
SED_RPM = RPMS/sh4/$(STLINUX)-sh4-$(SEDX)-$(SED_VERSION).sh4.rpm

$(SED_RPM): \
		$(if $(SED_SPEC_PATCH),Patches/$(SED_SPEC_PATCH)) \
		$(if $(SED_PATCHES),$(SED_PATCHES:%=Patches/%)) \
		$(DEPDIR)/$(GLIBC_DEV) \
		$(archivedir)/$(STLINUX)-target-$(SEDX)-$(SED_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(SED_SPEC_PATCH),( cd SPECS && patch -p1 $(SED_SPEC) < $(buildprefix)/Patches/$(SED_PATCH) ) &&) \
	$(if $(SED_PATCHES),cp $(SED_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(SED_SPEC)

$(DEPDIR)/$(SEDX): $(DEPDIR)/%$(SEDX): $(DEPDIR)/%$(GLIBC) $(SED_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	[ "x$*" = "x" ] && touch -r $(lastword $^) $@ || true

#
# DIFF
#
DIFF := diff
DIFF_DOC := diff-doc
DIFF_VERSION := 2.8.1-11
DIFF_SPEC := stm-target-$(DIFF).spec
DIFF_SPEC_PATCH :=
DIFF_PATCHES :=
DIFF_RPM := RPMS/sh4/$(STLINUX)-sh4-$(DIFF)-$(DIFF_VERSION).sh4.rpm
DIFF_DOC_RPM := RPMS/sh4/$(STLINUX)-sh4-$(DIFF)-doc-$(SED_VERSION).sh4.rpm

$(DIFF_RPM) $(DIFF_DOC_RPM): \
		$(if $(DIFF_SPEC_PATCH),Patches/$(DIFF_SPEC_PATCH)) \
		$(if $(DIFF_PATCHES),$(DIFF_PATCHES:%=Patches/%)) \
		$(DEPDIR)/$(GLIBC_DEV) \
		$(archivedir)/$(STLINUX)-target-$(DIFF)-$(DIFF_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(DIFF_SPEC_PATCH),( cd SPECS && patch -p1 $(DIFF_SPEC) < $(buildprefix)/Patches/$(DIFF_PATCH) ) &&) \
	$(if $(DIFF_PATCHES),cp $(DIFF_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(DIFF_SPEC)

$(DEPDIR)/$(DIFF): $(DEPDIR)/%$(DIFF): $(DEPDIR)/%$(GLIBC) $(DIFF_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	[ "x$*" = "x" ] && touch -r $(lastword $^) .deps/$(notdir $@) || true

$(DEPDIR)/%$(DIFF_DOC): $(DIFF_DOC_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	[ "x$*" = "x" ] && touch -r $(lastword $^) $@ || true

#
# FILE
#
FILE := file
FILE_VERSION := 4.17-7
FILE_SPEC := stm-target-$(FILE).spec
FILE_SPEC_PATCH :=
FILE_PATCHES :=
FILE_RPM := RPMS/sh4/$(STLINUX)-sh4-$(FILE)-$(FILE_VERSION).sh4.rpm

$(FILE_RPM): \
		$(if $(FILE_SPEC_PATCH),Patches/$(FILE_SPEC_PATCH)) \
		$(if $(FILE_PATCHES),$(FILE_PATCHES:%=Patches/%)) \
		$(archivedir)/$(STLINUX)-target-$(FILE)-$(FILE_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(FILE_SPEC_PATCH),( cd SPECS && patch -p1 $(FILE_SPEC) < $(buildprefix)/Patches/$(FILE_PATCH) ) &&) \
	$(if $(FILE_PATCHES),cp $(FILE_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(FILE_SPEC)

$(DEPDIR)/$(FILE): $(DEPDIR)/%$(FILE): $(FILE_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	[ "x$*" = "x" ] && touch -r $(lastword $^) $@ || true

#
# TAR
#
TAR := tar
TAR_VERSION := 1.26-12
TAR_SPEC := stm-target-$(TAR).spec
TAR_SPEC_PATCH :=
TAR_PATCHES :=
TAR_RPM := RPMS/sh4/$(STLINUX)-sh4-$(TAR)-$(TAR_VERSION).sh4.rpm

$(TAR_RPM): \
		$(if $(TAR_SPEC_PATCH),Patches/$(TAR_SPEC_PATCH)) \
		$(if $(TAR_PATCHES),$(TAR_PATCHES:%=Patches/%)) \
		$(DEPDIR)/$(GLIBC_DEV) \
		$(archivedir)/$(STLINUX)-target-$(TAR)-$(TAR_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(TAR_SPEC_PATCH),( cd SPECS && patch -p1 $(TAR_SPEC) < $(buildprefix)/Patches/$(TAR_PATCH) ) &&) \
	$(if $(TAR_PATCHES),cp $(TAR_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(TAR_SPEC)

$(DEPDIR)/$(TAR): $(DEPDIR)/%$(TAR): $(DEPDIR)/%$(GLIBC) $(TAR_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	[ "x$*" = "x" ] && touch -r $(lastword $^) $@ || true

#
# STRACE
#
STRACE := strace
STRACE_VERSION := 4.5.20-24
STRACE_SPEC := stm-target-$(STRACE).spec
STRACE_SPEC_PATCH :=
STRACE_PATCHES :=

STRACE_RPM := RPMS/sh4/$(STLINUX)-sh4-$(STRACE)-$(STRACE_VERSION).sh4.rpm

$(STRACE_RPM): \
		$(addprefix Patches/,$(STRACE_SPEC_PATCH) $(STRACE_PATCHES)) \
		$(DEPDIR)/$(GLIBC_DEV) \
		$(archivedir)/$(STLINUX)-target-$(STRACE)-$(STRACE_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(STRACE_SPEC_PATCH),( cd SPECS && patch -p1 $(STRACE_SPEC) < $(buildprefix)/Patches/$(STRACE_PATCH) ) &&) \
	$(if $(STRACE_PATCHES),cp $(addprefix Patches/,$(STRACE_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(STRACE_SPEC)

$(DEPDIR)/$(STRACE): $(DEPDIR)/%$(GLIBC) $(STRACE_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch  --force --noscripts -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# UTIL LINUX
# 
BEGIN[[
util_linux
  2.20.1
  util-linux-{PV}
  extract:http://mirror.onat.edu.ua/debian/pool/main/u/util-linux/util-linux_{PV}.orig.tar.gz
  patch:http://mirror.onat.edu.ua/debian/pool/main/u/util-linux/util-linux_{PV}-5.1.diff.gz
  nothing:file://{PN}-stm.diff
;
]]END

UTIL_LINUX = util-linux
FILES_util_linux = \
/sbin/mkfs \
/sbin/blkid \
/sbin/sfdisk \
/usr/lib
UTIL_LINUX_MOUNT := mount
UTIL_LINUX_BSDUTILS := bsdutils
UTIL_LINUX_VERSION := 2.16.1-29
UTIL_LINUX_SPEC := stm-target-$(UTIL_LINUX).spec
UTIL_LINUX_SPEC_PATCH :=
UTIL_LINUX_PATCHES :=

UTIL_LINUX_RPM := RPMS/sh4/$(STLINUX)-sh4-$(UTIL_LINUX)-$(UTIL_LINUX_VERSION).sh4.rpm
UTIL_LINUX_MOUNT_RPM := RPMS/sh4/$(STLINUX)-sh4-$(UTIL_LINUX_MOUNT)-$(UTIL_LINUX_VERSION).sh4.rpm
UTIL_LINUX_BSDUTILS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(UTIL_LINUX_BSDUTILS)-$(UTIL_LINUX_VERSION).sh4.rpm

$(UTIL_LINUX_RPM): \
		$(addprefix Patches/,$(UTIL_LINUX_SPEC_PATCH) $(UTIL_LINUX_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(UTIL_LINUX)-$(UTIL_LINUX_VERSION).src.rpm \
		| $(NCURSES) $(NCURSES_DEV)
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(UTIL_LINUX_SPEC_PATCH),( cd SPECS && patch -p1 $(UTIL_LINUX_SPEC) < $(buildprefix)/Patches/$(UTIL_LINUX_SPEC_PATCH) ) &&) \
	$(if $(UTIL_LINUX_PATCHES),cp $(addprefix Patches/,$(UTIL_LINUX_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(UTIL_LINUX_SPEC)

$(DEPDIR)/$(UTIL_LINUX): $(UTIL_LINUX_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	$(REWRITE_LIBDEP)/lib{blkid,uuid}.la
	$(REWRITE_LIBDIR)/lib{blkid,uuid}.la
	$(start_build)
	$(fromrpm_build)
	touch $@

$(DEPDIR)/$(UTIL_LINUX_MOUNT): $(UTIL_LINUX_MOUNT_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

$(DEPDIR)/$(UTIL_LINUX_BSDUTILS): $(UTIL_LINUX_BSDUTILS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# IPTABLES
# 
IPTABLES := iptables
IPTABLES_DEV := iptables-dev
IPTABLES_VERSION := 1.4.15-17
PKGR_dev := r0
IPTABLES_SPEC := stm-target-$(IPTABLES).spec
IPTABLES_SPEC_PATCH :=
IPTABLES_PATCHES :=
IPTABLES_RPM := RPMS/sh4/$(STLINUX)-sh4-$(IPTABLES)-$(IPTABLES_VERSION).sh4.rpm
IPTABLES_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(IPTABLES_DEV)-$(IPTABLES_VERSION).sh4.rpm

RDEPENDS_iptables := linux-kernel

$(IPTABLES_RPM) $(IPTABLES_DEV_RPM) : \
		$(if $(IPTABLES_SPEC_PATCH),Patches/$(IPTABLES_SPEC_PATCH)) \
		$(if $(IPTABLES_PATCHES),$(IPTABLES_PATCHES:%=Patches/%)) \
		$(archivedir)/$(STLINUX)-target-$(IPTABLES)-$(IPTABLES_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(IPTABLES_SPEC_PATCH),( cd SPECS && patch -p1 $(IPTABLES_SPEC) < $(buildprefix)/Patches/$(IPTABLES_SPEC_PATCH) ) &&) \
	$(if $(IPTABLES_PATCHES),cp $(IPTABLES_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(IPTABLES_SPEC)

$(DEPDIR)/$(IPTABLES_DEV): $(DEPDIR)/%$(IPTABLES_DEV): $(IPTABLES_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	#$(start_build)
	#$(fromrpm_build)
	touch $@

$(DEPDIR)/$(IPTABLES): $(DEPDIR)/%$(IPTABLES): $(IPTABLES_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps --force -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	$(start_build)
	$(fromrpm_build)
	touch $@
#
# bzip2
#
BEGIN[[
bzip2
  1.0.6
  {PN}-{PV}
  extract:http://www.bzip.org/{PV}/{PN}-{PV}.tar.gz
  patch:file://{PN}.diff
  make:install:PREFIX=PKDIR/usr
;
]]END
DESCRIPTION_bzip2 = "bzip2"

FILES_bzip2 = \
/usr/bin/* \
/usr/lib/*

$(DEPDIR)/bzip2: bootstrap $(DEPENDS_bzip2)
	$(PREPARE_bzip2)
	$(start_build)
	cd $(DIR_bzip2); \
		mv Makefile-libbz2_so Makefile; \
		$(MAKE) all CC=$(target)-gcc; \
		$(INSTALL_bzip2)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_bzip2)
	touch $@

#
# MODULE-INIT-TOOLS
#
BEGIN[[
module_init_tools
  3.16
  {PN}-{PV}
  extract:http://ftp.osuosl.org/pub/linux/utils/kernel/module-init-tools/{PN}-{PV}.tar.bz2
  patch:file://module-init-tools-no-man.patch
  make:INSTALL=install:install:sbin_PROGRAMS="depmod modinfo":bin_PROGRAMS=:mandir=/usr/share/man:DESTDIR=TARGETS
;
]]END

$(DEPDIR)/module_init_tools: bootstrap $(DEPDIR)/lsb $(MODULE_INIT_TOOLS_ADAPTED_ETC_FILES:%=root/etc/%) $(DEPENDS_module_init_tools)
	$(PREPARE_module_init_tools)
	cd $(DIR_module_init_tools); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--enable-zlib \
			--prefix=; \
		$(MAKE); \
		$(INSTALL_module_init_tools)
	$(call adapted-etc-files,$(MODULE_INIT_TOOLS_ADAPTED_ETC_FILES))
	$(call initdconfig,module-init-tools)
	$(DISTCLEANUP_module_init_tools)
	touch $@

#
# GREP
#
BEGIN[[
grep
  2.14
  {PN}-{PV}
  extract:ftp://mirrors.kernel.org/gnu/{PN}/{PN}-{PV}.tar.xz
  nothing:http://64studio.hivelocity.net/apt/pool/main/g/{PN}/{PN}_2.5.1.ds2-6.diff.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_grep = "grep"

FILES_grep = \
/usr/bin/grep

$(DEPDIR)/grep: bootstrap $(DEPENDS_grep)
	$(PREPARE_grep)
	$(start_build)
	cd $(DIR_grep); \
		gunzip -cd $(lastword $^) | cat > debian.patch; \
		patch -p1 <debian.patch; \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--disable-nls \
			--disable-perl-regexp \
			--libdir=$(targetprefix)/usr/lib \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_grep)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_grep)
	touch $@

#
# USB MODESWITCH
#
BEGIN[[
usb_modeswitch
  1.2.5
  {PN}-{PV}
  extract:http://www.draisberghof.de/usb_modeswitch/{PN}-{PV}.tar.bz2
  patch:file://{PN}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_usb_modeswitch = usb_modeswitch
RDEPENDS_usb_modeswitch = libusb usb_modeswitch_data
FILES_usb_modeswitch = \
/etc/* \
/lib/udev/* \
/usr/sbin/*

$(DEPDIR)/usb_modeswitch: $(DEPENDS_usb_modeswitch) $(RDEPENDS_usb_modeswitch)
	$(PREPARE_usb_modeswitch)
	$(start_build)
	cd $(DIR_usb_modeswitch) ; \
		$(BUILDENV) \
		DESTDIR=$(PKDIR) \
		PREFIX=$(PKDIR)/usr \
	  $(MAKE) $(MAKE_OPTS) install
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_usb_modeswitch)
	touch $@
	

#
# USB MODESWITCH DATA
#
BEGIN[[
usb_modeswitch_data
  20121109
  {PN}-{PV}
  extract:http://www.draisberghof.de/usb_modeswitch/{PN}-{PV}.tar.bz2
  patch:file://{PN}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_usb_modeswitch_data = usb_modeswitch_data

FILES_usb_modeswitch_data = \
/usr/* \
/etc/* \
/lib/udev/rules.d

$(DEPDIR)/usb_modeswitch_data: $(DEPENDS_usb_modeswitch_data)
	$(PREPARE_usb_modeswitch_data)
	$(start_build)
	cd $(DIR_usb_modeswitch_data) ; \
		$(BUILDENV) \
		DESTDIR=$(PKDIR) \
		$(MAKE) install
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_usb_modeswitch_data)
	touch $@
	
#
# NTFS-3G
#
BEGIN[[
ntfs_3g
  2013.1.13
  ntfs-3g_ntfsprogs-{PV}
  extract:http://tuxera.com/opensource/ntfs-3g_ntfsprogs-{PV}.tgz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_ntfs_3g = ntfs-3g
#RDEPENDS_ntfs_3g = fuse
FILES_ntfs_3g = \
/bin/ntfs-3g \
/sbin/mount.ntfs-3g \
/usr/lib/* \
/lib/*

$(DEPDIR)/ntfs_3g: $(DEPENDS_ntfs_3g)
	$(PREPARE_ntfs_3g)
	$(start_build)
	export PATH=$(hostprefix)/bin:$(PATH); \
	LDCONFIG=$(prefix)/cdkroot/sbin/ldconfig \
	cd $(DIR_ntfs_3g) ; \
		$(BUILDENV) \
		PKG_CONFIG=$(hostprefix)/bin/pkg-config \
		./configure \
			--build=$(build) \
			--disable-ldconfig \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) $(MAKE_OPTS); \
		$(INSTALL_ntfs_3g)
	$(tocdk_build)	
	$(toflash_build)
	$(DISTCLEANUP_ntfs_3g)
	touch $@
	

#
# LSB
#
BEGIN[[
lsb
  3.2-28
  {PN}-3.2
  extract:http://www.emdebian.org/locale/pool/main/l/lsb/{PN}_{PV}.tar.gz
  install:-d:PKDIR/lib/{PN}
  install:-m644:init-functions:PKDIR/lib/{PN}
;
]]END

DESCRIPTION_lsb = "lsb"
FILES_lsb = \
/lib/lsb/*

$(DEPDIR)/lsb: bootstrap $(DEPENDS_lsb)
	$(PREPARE_lsb)
	$(start_build)
	cd $(DIR_lsb); \
		$(INSTALL_lsb)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_lsb)
	touch $@

#
# PORTMAP
#
BEGIN[[
portmap
  6.0
  {PN}_{PV}
  extract:http://fossies.org/linux/misc/{PN}-{PV}.tgz
  patch:file://{PN}_{PV}.diff
  patch:http://debian.osuosl.org/debian/pool/main/p/{PN}/{PN}_{PV}.0-2.diff.gz
  make:install:BASEDIR=PKDIR
  install:-m755:debian/init.d:PKDIR/etc/init.d/{PN}
;
]]END

DESCRIPTION_portmap = "the program supports access control in the style of the tcp wrapper (log_tcp) packag"
FILES_portmap = \
/sbin/* \
/etc/init.d/

$(DEPDIR)/portmap: bootstrap $(DEPENDS_portmap)
	$(PREPARE_portmap)
	$(start_build)
	mkdir -p $(PKDIR)/sbin/
	mkdir -p $(PKDIR)/etc/init.d/
	mkdir -p $(PKDIR)/usr/share/man/man8
	cd $(DIR_portmap); \
		gunzip -cd $(lastword $^) | cat > debian.patch; \
		patch -p1 <debian.patch; \
		sed -e 's/### BEGIN INIT INFO/# chkconfig: S 41 10\n### BEGIN INIT INFO/g' -i debian/init.d; \
		$(BUILDENV) \
		$(MAKE); \
		$(INSTALL_portmap)
	$(call adapted-etc-files,$(PORTMAP_ADAPTED_ETC_FILES))
	$(call initdconfig,portmap)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_portmap)
	touch $@

#
# OPENRDATE
#
BEGIN[[
openrdate
  1.2
  {PN}-{PV}
  extract:http://prdownloads.sourceforge.net/sourceforge/{PN}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_openrdate = openrdate
FILES_openrdate = \
/usr/bin/* \
/etc/init.d/*

$(DEPDIR)/openrdate: bootstrap $(DEPENDS_openrdate)
	$(PREPARE_openrdate)
	$(start_build)
	cd $(DIR_openrdate); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--target=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_openrdate)
	$(INSTALL_DIR) $(PKDIR)/etc/init.d/; \
	( cd root/etc && for i in $(OPENRDATE_ADAPTED_ETC_FILES); do \
		[ -f $$i ] && $(INSTALL) -m644 $$i $(PKDIR)/etc/$$i || true; \
		[ "$${i%%/*}" = "init.d" ] && chmod 755 $(PKDIR)/etc/$$i || true; done ); \
	( export HHL_CROSS_TARGET_DIR=$(prefix)/release && cd $(prefix)/release/etc/init.d; \
		for s in rdate ; do \
			$(hostprefix)/bin/target-initdconfig --add $$s || \
			echo "Unable to enable initd service: $$s" ; done && rm *rpmsave 2>/dev/null || true )
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_openrdate)
	touch $@

#
# E2FSPROGS
#
BEGIN[[
e2fsprogs
  1.42.8
  {PN}-{PV}
  extract:http://sourceforge.net/projects/e2fsprogs/files/e2fsprogs/v{PV}/{PN}-{PV}.tar.gz
  patch:file://{PN}-{PV}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_e2fsprogs = "e2fsprogs"
FILES_e2fsprogs = \
/sbin/e2fsck \
/sbin/fsck \
/sbin/fsck* \
/sbin/mkfs* \
/sbin/mke2fs \
/sbin/tune2fs \
/usr/lib/e2initrd_helper \
/lib/*.so* \
/usr/lib/*.so

$(DEPDIR)/e2fsprogs: bootstrap $(DEPENDS_e2fsprogs) | $(UTIL_LINUX)
	$(PREPARE_e2fsprogs)
	cd $(DIR_e2fsprogs); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		cc=$(target)-gcc \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--target=$(target) \
			--with-linker=$(target)-ld \
			--enable-e2initrd-helper \
			--enable-compression \
			--disable-uuidd \
			--disable-rpath \
			--disable-quota \
			--disable-defrag \
			--disable-nls \
			--disable-libuuid \
			--disable-libblkid \
			--enable-elf-shlibs \
			--enable-verbose-makecmds \
			--enable-symlink-install \
			--without-libintl-prefix \
			--without-libiconv-prefix \
			--with-root-prefix=; \
		$(MAKE) all; \
		$(MAKE) -C e2fsck e2fsck.static
		$(start_build)
		( cd $(DIR_e2fsprogs); \
		$(BUILDENV) \
		$(MAKE) install install-libs \
			LDCONFIG=true \
			DESTDIR=$(PKDIR); \
		$(INSTALL) e2fsck/e2fsck.static $(PKDIR)/sbin) || true
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_e2fsprogs)
	touch $@

#
# XFSPROGS
#
BEGIN[[
xfsprogs
  3.1.8
  {PN}-{PV}
  extract:ftp://oss.sgi.com/projects/xfs/cmd_tars/{PN}-{PV}.tar.gz
  patch:file://{PN}.diff
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_xfsprogs = "xfsprogs"

FILES_xfsprogs = \
/bin/*

$(DEPDIR)/xfsprogs: bootstrap $(DEPDIR)/e2fsprogs $(DEPDIR)/libreadline $(DEPENDS_xfsprogs)
	$(PREPARE_xfsprogs)
	$(start_build)
	export PATH=$(hostprefix)/bin:$(PATH); \
	cd $(DIR_xfsprogs); \
		export DEBUG=-DNDEBUG && export OPTIMIZER=-O2; \
		mv -f aclocal.m4 aclocal.m4.orig && mv Makefile Makefile.sgi || true && chmod 644 Makefile.sgi; \
		aclocal -I m4 -I $(hostprefix)/share/aclocal; \
		autoconf; \
		libtoolize; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--target=$(target) \
			--prefix= \
			--enable-shared=yes \
			--enable-gettext=yes \
			--enable-readline=yes \
			--enable-editline=no \
			--enable-termcap=yes; \
		cp -p Makefile.sgi Makefile && export top_builddir=`pwd`; \
		$(MAKE) $(MAKE_OPTS); \
		$(INSTALL_xfsprogs)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_xfsprogs)
	touch $@

#
# MC
#
BEGIN[[
mc
  4.8.4
  {PN}-{PV}
  extract:http://www.midnight-commander.org/downloads/{PN}-{PV}.tar.bz2
#nothing:file://{PN}.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_mc = "Midnight Commander"

FILES_mc = \
/usr/bin/* \
/usr/etc/mc/* \
/usr/libexec/mc/extfs.d/* \
/usr/libexec/mc/fish/*

$(DEPDIR)/mc: bootstrap glib2 $(DEPENDS_mc) | $(NCURSES_DEV)
	$(PREPARE_mc)
	$(start_build)
	cd $(DIR_mc); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--without-gpm-mouse \
			--with-screen=ncurses \
			--without-x; \
		$(MAKE) all; \
		$(INSTALL_mc)
	$(tocdk_build)
	$(toflash_build)
#		export top_builddir=`pwd`; \
#		$(MAKE) install DESTDIR=$(prefix)/$*cdkroot
	$(DISTCLEANUP_mc)
	touch $@

#
# SDPARM
#
BEGIN[[
sdparm
  1.08
  {PN}-{PV}
  extract:http://sg.danny.cz/sg/p/{PN}-{PV}.tar.xz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_sdparm = "sdparm"

FILES_sdparm = \
/sbin/sdparm

$(DEPDIR)/sdparm: bootstrap $(DEPENDS_sdparm)
	$(PREPARE_sdparm)
	$(start_build)
	cd $(DIR_sdparm); \
		export PATH=$(MAKE_PATH); \
		$(MAKE) clean || true; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix= \
			--exec-prefix=/usr \
			--mandir=/usr/share/man; \
		$(MAKE) $(MAKE_OPTS); \
		$(INSTALL_sdparm)
	$(tocdk_build)
	mv -f $(PKDIR)/usr/bin/sdparm $(PKDIR)/sbin
	$(toflash_build)
	$(DISTCLEANUP_sdparm)
	touch $@

#
# SG3_UTILS
#
BEGIN[[
sg3_utils
  1.33
  sg3_utils-{PV}
  extract:http://sg.torque.net/sg/p/sg3_utils-{PV}.tgz
  patch:file://sg3_utils.diff
  make:install:DESTDIR=TARGETS
;
]]END

$(DEPDIR)/sg3_utils: bootstrap $(DEPENDS_sg3_utils)
	$(PREPARE_sg3_utils)
	export PATH=$(hostprefix)/bin:$(PATH); \
	cd $(DIR_sg3_utils); \
		$(MAKE) clean || true; \
		aclocal -I $(hostprefix)/share/aclocal; \
		autoconf; \
		libtoolize; \
		automake --add-missing --foreign; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=; \
		$(MAKE) $(MAKE_OPTS); \
		$(INSTALL_sg3_utils)
	$(INSTALL) -d $(prefix)/$*cdkroot/etc/default; \
	$(INSTALL) -d $(prefix)/$*cdkroot/etc/init.d; \
	$(INSTALL) -d $(prefix)/$*cdkroot/usr/sbin; \
	( cd root/etc && for i in $(SG3_UTILS_ADAPTED_ETC_FILES); do \
		[ -f $$i ] && $(INSTALL) -m644 $$i $(prefix)/$*cdkroot/etc/$$i || true; \
		[ "$${i%%/*}" = "init.d" ] && chmod 755 $(prefix)/$*cdkroot/etc/$$i || true; done ); \
	$(INSTALL) -m755 root/usr/sbin/sg_down.sh $(prefix)/$*cdkroot/usr/sbin
	$(DISTCLEANUP_sg3_utils)
	touch $@

#
# IPKG
#
BEGIN[[
ipkg
  0.99.163
  {PN}-{PV}
  extract:ftp.gwdg.de/linux/handhelds/packages/{PN}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=TARGETS
;
]]END

$(DEPDIR)/ipkg: bootstrap $(DEPENDS_ipkg)
	$(PREPARE_ipkg)
	cd $(DIR_ipkg); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_ipkg)
	ln -sf ipkg-cl $(prefix)/$*cdkroot/usr/bin/ipkg; \
	$(INSTALL) -d $(prefix)/$*cdkroot/etc && $(INSTALL) -m 644 root/etc/ipkg.conf $(prefix)/$*cdkroot/etc; \
	$(INSTALL) -d $(prefix)/$*cdkroot/etc/ipkg
	$(INSTALL) -d $(prefix)/$*cdkroot/usr/lib/ipkg
	$(INSTALL) -m 644 root/usr/lib/ipkg/status.initial $(prefix)/$*cdkroot/usr/lib/ipkg/status
	$(DISTCLEANUP_ipkg)
	touch $@

#
# ZD1211
#
BEGIN[[
zd1211
  2_15_0_0
  ZD1211LnxDrv_2_15_0_0
  extract:http://www.lutec.eu/treiber/{PN}lnxdrv_2_15_0_0.tar.gz
  patch:file://{PN}.diff
;
]]END

CONFIG_ZD1211B :=
$(DEPDIR)/zd1211: bootstrap $(DEPENDS_zd1211)
	$(PREPARE_zd1211)
	cd $(DIR_zd1211); \
		$(MAKE) KERNEL_LOCATION=$(buildprefix)/linux-sh4 \
			ZD1211B=$(ZD1211B) \
			CROSS_COMPILE=$(target)- ARCH=sh \
			BIN_DEST=$(targetprefix)/bin \
			INSTALL_MOD_PATH=$(targetprefix) \
			install; \
	$(DEPMOD) -ae -b $(targetprefix) -r $(KERNELVERSION)
	$(DISTCLEANUP_zd1211)
	touch $@

#
# NANO
#
BEGIN[[
nano
  2.0.9
  {PN}-{PV}
  extract:http://www.{PN}-editor.org/dist/v2.0/{PN}-{PV}.tar.gz
  make:install:DESTDIR=TARGETS
;
]]END

$(DEPDIR)/nano: bootstrap ncurses ncurses-dev $(DEPENDS_nano)
	$(PREPARE_nano)
	cd $(DIR_nano); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--disable-nls \
			--enable-tiny \
			--enable-color; \
		$(MAKE); \
		$(INSTALL_nano)
	$(DISTCLEANUP_nano)
	touch $@

#
# RSYNC
#
BEGIN[[
rsync
  3.0.9
  {PN}-{PV}
  extract:http://samba.anu.edu.au/ftp/{PN}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=TARGETS
;
]]END

$(DEPDIR)/rsync: bootstrap $(DEPENDS_rsync)
	$(PREPARE_rsync)
	cd $(DIR_rsync); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--disable-debug \
			--disable-locale; \
		$(MAKE); \
		$(INSTALL_rsync)
	$(DISTCLEANUP_rsync)
	touch $@

#
# RFKILL
#
BEGIN[[
rfkill
  git
  {PN}-{PV}
  nothing:git://git.sipsolutions.net/rfkill.git
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_rfkill = rfkill is a small tool to query the state of the rfkill switches, buttons and subsystem interfaces
PKGR_rfkill = r1
FILES_rfkill = \
/usr/sbin/*

$(DEPDIR)/rfkill: bootstrap $(DEPENDS_rfkill)
	$(PREPARE_rfkill)
	$(start_build)
	cd $(DIR_rfkill); \
		$(MAKE) $(MAKE_OPTS); \
		$(INSTALL_rfkill)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_rfkill)
	touch $@

#
# LM_SENSORS
#
BEGIN[[
lm_sensors
  3.3.2
  lm_sensors-{PV}
  extract:http://dl.{PN}.org/{PN}/releases/lm_sensors-{PV}.tar.gz
  make:user_install:MACHINE=sh:PREFIX=/usr:MANDIR=/usr/share/man:DESTDIR=PKDIR
;
]]END

DESCRIPTION_lm_sensors = "lm_sensors"

FILES_lm_sensors = \
/usr/bin/sensors \
/etc/sensors.conf \
/usr/lib/*.so* \
/usr/sbin/*

$(DEPDIR)/lm_sensors: bootstrap $(DEPENDS_lm_sensors)
	$(PREPARE_lm_sensors)
	$(start_build)
	cd $(DIR_lm_sensors); \
		$(MAKE) $(MAKE_OPTS) MACHINE=sh PREFIX=/usr user; \
		$(INSTALL_lm_sensors); \
		rm $(PKDIR)/usr/bin/*.pl; \
		rm $(PKDIR)/usr/sbin/*.pl; \
		rm $(PKDIR)/usr/sbin/sensors-detect; \
		rm $(PKDIR)/usr/share/man/man8/sensors-detect.8; \
		rm $(PKDIR)/usr/include/linux/i2c-dev.h; \
		rm $(PKDIR)/usr/bin/ddcmon
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_lm_sensors)
	touch $@

#
# FUSE
#
BEGIN[[
fuse
  2.9.2
  {PN}-{PV}
  extract:http://sourceforge.net/projects/{PN}/files/{PN}-2.X/{PV}/{PN}-{PV}.tar.gz
  patch:file://{PN}.diff
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_fuse = With FUSE it is possible to implement a fully functional filesystem in a userspace program.  Features include

FILES_fuse = \
/usr/lib/*.so* \
/etc/init.d/* \
/etc/udev/* \
/usr/bin/*

$(DEPDIR)/fuse: bootstrap curl glib2 $(DEPENDS_fuse)
	$(PREPARE_fuse)
	$(start_build)
	cd $(DIR_fuse); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -I$(buildprefix)/linux/arch/sh" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--target=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_fuse)
	rm -R $(PKDIR)/dev
	$(LN_SF) sh4-linux-fusermount $(PKDIR)/usr/bin/fusermount
	$(LN_SF) sh4-linux-ulockmgr_server $(PKDIR)/usr/bin/ulockmgr_server
	( export HHL_CROSS_TARGET_DIR=$(prefix)/release && $(prefix)/release/etc/init.d; \
		for s in fuse ; do \
			$(hostprefix)/bin/target-initdconfig --add $$s || \
			echo "Unable to enable initd service: $$s" ; done && rm *rpmsave 2>/dev/null || true )
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_fuse)
	touch $@

#
# CURLFTPFS
#
BEGIN[[
curlftpfs
  0.9.2
  {PN}-{PV}
  extract:http://sourceforge.net/projects/{PN}/files/latest/download/{PN}-{PV}.tar.gz
  make:install:DESTDIR=TARGETS
;
]]END

$(DEPDIR)/curlftpfs: bootstrap fuse $(DEPENDS_curlftpfs)
	$(PREPARE_curlftpfs)
	cd $(DIR_curlftpfs); \
		export ac_cv_func_malloc_0_nonnull=yes; \
		export ac_cv_func_realloc_0_nonnull=yes; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_curlftpfs)
	$(DISTCLEANUP_curlftpfs)
	touch $@

#
# FBSET
#
BEGIN[[
fbset
  2.1
  {PN}-{PV}
  extract:http://ftp.de.debian.org/debian/pool/main/f/{PN}/{PN}_{PV}.orig.tar.gz
  patch:http://archive.debian.org/debian/dists/potato/main/source/admin/{PN}_{PV}-6.diff.gz
  patch:file://{PN}_{PV}-fb.modes-ST.patch
  install:-d:-m755:TARGETS/{usr/sbin,etc}
  install:-m755:{PN}:TARGETS/usr/sbin
  install:-m755:con2fbmap:TARGETS/usr/sbin
  install:-m644:etc/fb.modes.ATI:TARGETS/etc/fb.modes
;
]]END

$(DEPDIR)/fbset: bootstrap $(DEPENDS_fbset)
	$(PREPARE_fbset)
	cd $(DIR_fbset); \
		make CC="$(target)-gcc -Wall -O2 -I."; \
		$(INSTALL_fbset)
	$(DISTCLEANUP_fbset)
	touch $@

#
# PNGQUANT
#
BEGIN[[
pngquant
  1.1
  {PN}-{PV}
  extract:ftp://ftp.simplesystems.org/pub/libpng/png/applications/{PN}/{PN}-{PV}-src.tgz
  install:-m755:{PN}:TARGETS/usr/bin
;
]]END

$(DEPDIR)/pngquant: bootstrap libz libpng $(DEPENDS_pngquant)
	$(PREPARE_pngquant)
	cd $(DIR_pngquant); \
		$(target)-gcc -O3 -Wall -I. -funroll-loops -fomit-frame-pointer -o pngquant pngquant.c rwpng.c -lpng -lz -lm; \
		$(INSTALL_pngquant)
	$(DISTCLEANUP_pngquant)
	touch $@

#
# MPLAYER
#
BEGIN[[
mplayer
  1.0
  {PN}-export-*
  extract:ftp://ftp.{PN}hq.hu/MPlayer/releases/{PN}-export-snapshot.tar.bz2
  make:install INSTALLSTRIP="":DESTDIR=TARGETS
;
]]END

$(DEPDIR)/mplayer: bootstrap $(DEPENDS_mplayer)
	$(PREPARE_mplayer)
	cd $(DIR_mplayer); \
		$(BUILDENV) \
		./configure \
			--cc=$(target)-gcc \
			--target=$(target) \
			--host-cc=gcc \
			--prefix=/usr \
			--disable-mencoder; \
		$(MAKE) CC="$(target)-gcc"; \
		$(INSTALL_mplayer)
	$(DISTCLEANUP_mplayer)
	touch $@

#
# MENCODER
#
BEGIN[[
mencoder
  1.0
  mplayer-export-*
  extract:ftp://ftp.mplayerhq.hu/MPlayer/releases/mplayer-export-snapshot.tar.bz2
  make:install INSTALLSTRIP="":DESTDIR=TARGETS
;
]]END

$(DEPDIR)/mencoder: bootstrap $(DEPENDS_mencoder)
	$(PREPARE_mencoder)
	cd $(DIR_mencoder); \
		$(BUILDENV) \
		./configure \
			--cc=$(target)-gcc \
			--target=$(target) \
			--host-cc=gcc \
			--prefix=/usr \
			--disable-dvdnav \
			--disable-dvdread \
			--disable-dvdread-internal \
			--disable-libdvdcss-internal \
			--disable-libvorbis \
			--disable-mp3lib \
			--disable-liba52 \
			--disable-mad \
			--disable-vcd \
			--disable-ftp \
			--disable-pvr \
			--disable-tv-v4l2 \
			--disable-tv-v4l1 \
			--disable-tv \
			--disable-network \
			--disable-real \
			--disable-xanim \
			--disable-faad-internal \
			--disable-tremor-internal \
			--disable-pnm \
			--disable-ossaudio \
			--disable-tga \
			--disable-v4l2 \
			--disable-fbdev \
			--disable-dvb \
			--disable-mplayer; \
		$(MAKE) CC="$(target)-gcc"; \
		$(INSTALL_mencoder)
	$(DISTCLEANUP_mencoder)
	touch $@

#
# jfsutils
#
BEGIN[[
jfsutils
  1.1.15
  {PN}-{PV}
  extract:http://jfs.sourceforge.net/project/pub/{PN}-{PV}.tar.gz
  make:install:mandir=/usr/share/man:DESTDIR=PKDIR
;
]]END

DESCRIPTION_jfsutils = "jfsutils"
FILES_jfsutils = \
/sbin/*

$(DEPDIR)/jfsutils: bootstrap e2fsprogs $(DEPENDS_jfsutils)
	$(PREPARE_jfsutils)
	$(start_build)
	cd $(DIR_jfsutils); \
		$(BUILDENV) \
		CFLAGS="$(TARGET_CFLAGS) -Os" \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--target=$(target) \
			--disable-dependency-tracking \
			--prefix=; \
		$(MAKE); \
		$(INSTALL_jfsutils)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_jfsutils)
	touch $@

#
# opkg
#
BEGIN[[
opkg
  0.1.8
  {PN}-{PV}
  extract:http://{PN}.googlecode.com/files/{PN}-{PV}.tar.gz
  patch:file://opkg-0.1.8-dont-segfault.diff
  make:install:DESTDIR=PKDIR
  link:/usr/bin/{PN}-cl:PKDIR/usr/bin/{PN}
;
]]END


DESCRIPTION_opkg = "lightweight package management system"
FILES_opkg = \
/usr/bin \
/usr/lib

$(DEPDIR)/opkg: bootstrap $(DEPENDS_opkg)
	$(PREPARE_opkg)
	$(start_build)
	cd $(DIR_opkg); \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--disable-curl \
			--disable-gpg \
			--with-opkglibdir=/usr/lib; \
		$(MAKE) all; \
		$(INSTALL_opkg)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_opkg)
	touch $@

#
# ntpclient
#
BEGIN[[
ntpclient
  #second param is version
  2007_365
  #third is buid dir
  {PN}-2007
  #sources goes below
  http://doolittle.icarus.com/ntpclient/{PN}_{PV}.tar.gz
  nothing:file://{PN}-init.file
;
]]END


# PARENT_PK defined as per rule variable below is main postfix
# at first split_packages.py searches for variable PACKAGES_ + $(PARENT_PK)
# PACKAGES_ntpclient = ntpclient
# this is the default.
# PACKAGES_ntpclient = $(PARENT_PK)
# secondly for each package in the list it looks for control fields.
# the default control field is PARENT_PK one.

DESCRIPTION_ntpclient := time sync over ntp protocol
#this is default
#MAINTAINER_ntpclient := Ar-P team
#Source: are handled by smart-rules
#SRC_URI_ntpclient =
#PACKAGE_ARCH_ntpclient := sh4
#the Package: field in control file
#NAME_ntpclient := ntpclient
#mask for files to package
FILES_ntpclient := /sbin /etc
#version is handled by smart-rules
#PKGV_ntpclient =
PKGR_ntpclient = r1
# comment symbol '#' in define goes directly to split_packages.py. You do not need to escape it!
# moreover line breaks are also correctly exported to python, enjoy!
define postinst_ntpclient
#!/bin/sh
initdconfig --add ntpclient
endef
define postrm_ntpclient
#!/bin/sh
initdconfig --del ntpclient
endef

$(DEPDIR)/ntpclient: $(DEPENDS_ntpclient)
	$(PREPARE_ntpclient)
	$(start_build)
	cd $(DIR_ntpclient) ; \
		export CC=sh4-linux-gcc CFLAGS="$(TARGET_CFLAGS)"; \
		$(MAKE) ntpclient; \
		$(MAKE) adjtimex; \
		install -D -m 0755 ntpclient $(PKDIR)/sbin/ntpclient; \
		install -D -m 0755 adjtimex $(PKDIR)/sbin/adjtimex; \
		install -D -m 0755 rate.awk $(PKDIR)/sbin/ntpclient-drift-rate.awk
	install -D -m 0755 Patches/ntpclient-init.file $(PKDIR)/etc/init.d/ntpclient
	$(extra_build)
	touch $@

#
# udpxy
#
BEGIN[[
udpxy
  1.0.23-0
  {PN}-{PV}
  http://sourceforge.net/projects/udpxy/files/udpxy/Chipmunk-1.0/udpxy.{PV}-prod.tar.gz
  #for patch -p0 use the following
  patch-0:file://udpxy-makefile.patch
;
]]END

# You can use it as example of building and making package for new utility.
# First of all take a look at smart-rules file. Read the documentation at the beginning.
#
# At the first stage let's build one single package. For example udpxy. Be careful, each package name should be unique.
# First of all you should define some necessary info about your package.
# Such as 'Description:' field in control file

DESCRIPTION_udpxy := udp to http stream proxy

# Next set package release number and increase it each time you change something here in make scripts.
# Release number is part of the package version, updating it tells others that they can upgrade their system now.

PKGR_udpxy = r0

# Other variables are optional and have default values and another are taken from smart-rules (full list below)
# Usually each utility is split into three make-targets. Target name and package name 'udpxy' should be the same.
# Write
#  $(DEPDIR)/udpxy.do_prepare:
# But not
#  $(DEPDIR)/udpxy_proxy.do_prepare:
# *exceptions of this rule discussed later.

# Also target should contain only A-z characters and underscore "_".

# Firstly, downloading and patching. Use $(DEPENDS_udpxy) from smart rules as target-depends.
# In the body use $(PREPARE_udpxy) generated by smart-rules
# You can add your special commands too.

$(DEPDIR)/udpxy.do_prepare: $(DEPENDS_udpxy)
	$(PREPARE_udpxy)
	touch $@

# Secondly, the configure and compilation stage
# Each target should ends with 'touch $@'

$(DEPDIR)/udpxy.do_compile: $(DEPDIR)/udpxy.do_prepare
	cd $(DIR_udpxy); \
		export CC=sh4-linux-gcc; \
		$(MAKE)
	touch $@

# Finally, install and packaging!
# How does it works:
#  start with line $(start_build) to prepare temporary directories and determine package name by the target name.
#  At first all files should go to temporary directory $(PKDIR) which is cdk/packagingtmpdir.
#  If you fill $(PKDIR) correctly then our scripts could proceed.
#  You could call one of the following:
#    $(tocdk_build) - copy all $(PKDIR) contents to tufsbox/cdkroot to use them later if something depends on them.
#    $(extra_build) - perform strip and cleanup, then make package ready to install on your box. You can find ipk in tufsbox/ipkbox
#    $(toflash_build) - At first do exactly that $(extra_build) does. After install package to pkgroot to include it in image.
#    $(e2extra_build) - same as $(extra_build) but copies ipk to tufsbox/ipkextras
#  Tip: $(tocdk_build) and $(toflash_build) could be used simultaneously.

$(DEPDIR)/udpxy: $(DEPDIR)/udpxy.do_compile
	$(start_build)
	cd $(DIR_udpxy) ; \
		export INSTALLROOT=$(PKDIR)/usr; \
		$(MAKE) install
	$(extra_build)
	touch $@

# Note: all above defined variables has suffix 'udpxy' same as make-target name '$(DEPDIR)/udpxy'
# If you want to change name of make-target for some reason add $(call parent_pk,udpxy) before $(start_build) line.
# Of course place your variables suffix instead of udpxy.

# Some words about git and svn.
# It is available to automatically determine version from git and svn
# If there is git/svn rule in smart-rules and the version equals git/svn then the version will be automatically evaluated during $(start_build)
# Note: it is assumed that there is only one repo for the utility.
# If you use your own git/svn fetch mechanism we provide you with $(get_git_version) or $(get_svn_version), but make sure that DIR_foo is git/svn repo.

# FILES variable
# FILES variable is the filter for your $(PKDIR), by default it equals "/" so all files from $(PKDIR) are built into the package. It is list of files and directories separated by space. Wildcards are supported.
# Wildcards used in the FILES variables are processed via the python function fnmatch. The following items are of note about this function:
#   /<dir>/*: This will match all files and directories in the dir - it will not match other directories.
#   /<dir>/a*: This will only match files, and not directories.
#   /dir: will include the directory dir in the package, which in turn will include all files in the directory and all subdirectories.

# Info about some additional variables
# PKGV_foo
#  Taken from smart rules version. Set if you don't use smart-rules
# SRC_URI_foo
#  Sources from which package is built, taken from smart-rules file://, http://, git://, svn:// rules.
# NAME_foo
#  If real package name is too long put it in this variable. By default it is like in varible names.
# Next variables has default values and influence CONTROL file fields only:
# MAINTAINER_foo := Ar-P team
# PACKAGE_ARCH_foo := sh4
# SECTION_foo := base
# PRIORITY_foo := optional
# LICENSE_foo := unknown
# HOMEPAGE_foo := unknown
# You set package dependencies in CONTROL file with:
# RDEPENDS_foo :=
# RREPLACES :=
# RCONFLICTS :=

# post/pre inst/rm Scripts
# For these sripts use make define as following:

define postinst_foo
#!/bin/sh
initdconfig --add foo
endef

# This is all about scripts
# Note: init.d script starting and stopping is handled by initdconfig

# Multi-Packaging
# When you whant to split files from one target to different packages you should set PACKAGES_parentfoo value.
# By default parentfoo is equals make target name. Place subpackages names to PACKAGES_parentfoo variable,
# parentfoo could be also in the list. Example:
## PACKAGES_megaprog = megaprog_extra megaprog
# Then set FILES for each subpackage
## FILES_megaprog = /bin/prog /lib/*.so*
## FILES_megaprog_extra = /lib/megaprog-addon.so
# NOTE: files are moving to pacakges in same order they are listed in PACKAGES variable.

# Optional install to flash
# When you call $(tocdk_build)/$(toflash_build) all packages are installed to image.
# If you want to select some non-installing packages from the same target (multi-packaging case)
# just list them in EXTRA_parentfoo variable
# DIST_parentfoo variable works vice-versa

#
# sysstat
#
BEGIN[[
sysstat
  10.1.1
  {PN}-{PV}
  extract:http://pagesperso-orange.fr/sebastien.godard/{PN}-{PV}.tar.gz
  make:install:DESTDIR=TARGETS
;
]]END

$(DEPDIR)/sysstat: bootstrap $(DEPENDS_sysstat)
	$(PREPARE_sysstat)
	export PATH=$(hostprefix)/bin:$(PATH); \
	cd $(DIR_sysstat); \
	$(BUILDENV) \
	./configure \
		--build=$(build) \
		--host=$(target) \
		--prefix=/usr \
		--disable-documentation; \
		$(MAKE); \
		$(INSTALL_sysstat)
	$(DISTCLEANUP_sysstat)
	touch $@

#
# hotplug-e2
#
BEGIN[[
hotplug_e2
  git
  {PN}-helper
  git://openpli.git.sourceforge.net/gitroot/openpli/hotplug-e2-helper
  patch:file://hotplug-e2-helper-support_fw_upload.patch
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_hotplug_e2 = "hotplug_e2"
PKGR_hotplug_e2 = r1
FILES_hotplug_e2 = \
/sbin/bdpoll \
/usr/bin/hotplug_e2_helper

$(DEPDIR)/hotplug_e2: bootstrap $(DEPENDS_hotplug_e2)
	$(PREPARE_hotplug_e2)
	$(start_build)
	cd $(DIR_hotplug_e2); \
		./autogen.sh &&\
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all; \
		$(INSTALL_hotplug_e2)
	$(tocdk_build)
	mkdir $(PKDIR)/sbin
	cp -f $(PKDIR)/usr/bin/* $(PKDIR)/sbin
	$(toflash_build)
	$(DISTCLEANUP_hotplug_e2)
	touch $@

#
# autofs
#
BEGIN[[
autofs
  4.1.4
  {PN}-{PV}
  extract:http://kernel.org/pub/linux/daemons/{PN}/v4/{PN}-{PV}.tar.gz
  patch:file://{PN}-{PV}-misc-fixes.patch
  patch:file://{PN}-{PV}-multi-parse-fix.patch
  patch:file://{PN}-{PV}-non-replicated-ping.patch
  patch:file://{PN}-{PV}-locking-fix-1.patch
  patch:file://{PN}-{PV}-cross.patch
  patch:file://{PN}-{PV}-Makefile.rules-cross.patch
  patch:file://{PN}-{PV}-install.patch
  patch:file://{PN}-{PV}-auto.net-sort-option-fix.patch
  patch:file://{PN}-{PV}-{PN}-additional-distros.patch
  patch:file://{PN}-{PV}-no-bash.patch
  patch:file://{PN}-{PV}-{PN}-add-hotplug.patch
  patch:file://{PN}-{PV}-no_man.patch
  make:install:INSTALLROOT=PKDIR
;
]]END

DESCRIPTION_autofs = "autofs"
FILES_autofs = \
/usr/*

$(DEPDIR)/autofs: bootstrap $(DEPENDS_autofs)
	$(PREPARE_autofs)
	$(start_build)
	cd $(DIR_autofs); \
		cp aclocal.m4 acinclude.m4; \
		autoconf; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE) all CC=$(target)-gcc STRIP=$(target)-strip; \
		$(INSTALL_autofs)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_autofs)
	touch $@

#
# imagemagick
#
BEGIN[[
imagemagick
  6.8.6.8-7
  ImageMagick-{PV}
  extract:ftp://ftp.fifi.org/pub/ImageMagick/ImageMagick-{PV}.tar.xz
  make:install:prefix=/usr:DESTDIR=PKDIR
;
]]END

DESCRIPTION_imagemagick = "imagemagick"
FILES_imagemagick = \
/usr/*
$(DEPDIR)/imagemagick: bootstrap $(DEPENDS_imagemagick)
	$(PREPARE_imagemagick)
	$(start_build)
	cd $(DIR_imagemagick); \
		$(BUILDENV) \
		CFLAGS="-O1" \
		PKG_CONFIG=$(hostprefix)/bin/pkg-config \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--without-dps \
			--without-fpx \
			--without-gslib \
			--without-jbig \
			--without-jp2 \
			--without-lcms \
			--without-tiff \
			--without-xml \
			--without-perl \
			--disable-openmp \
			--disable-opencl \
			--without-zlib \
			--enable-shared \
			--enable-static \
			--without-x; \
		$(MAKE) all; \
		$(INSTALL_imagemagick)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_imagemagick)
	touch $@

#
# grab
#
BEGIN[[
grab
  git
  {PN}-{PV}
  git://git.code.sf.net/p/openpli/aio-grab
  patch:file://aio-grab-ADD_ST_SUPPORT.patch
  patch:file://aio-grab-ADD_ST_FRAMESYNC_SUPPORT.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_grab = make enigma2 screenshots
PKGR_grab = r1
RDEPENDS_grab = libpng libjpeg

$(DEPDIR)/grab: bootstrap $(RDEPENDS_grab) $(DEPENDS_grab)
	$(PREPARE_grab)
	$(start_build)
	cd $(DIR_grab); \
		autoreconf -i; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr; \
		$(MAKE); \
		$(INSTALL_grab)
	$(toflash_build)
	touch $@


#
# enigma2-plugin-cams-oscam
#
BEGIN[[
enigma2_plugin_cams_oscam
  svn
  {PN}-{PV}
  svn://www.streamboard.tv/svn/oscam/trunk/
  make:install:DESTDIR=PKDIR:OSCAM_BIN = OSCAM_BIN
;
]]END

DESCRIPTION_enigma2_plugin_cams_oscam = Open Source Conditional Access Module software
SRC_URI_enigma2_plugin_cams_oscam = http://www.streamboard.tv/oscam/
FILES_enigma2_plugin_cams_oscam = \
/usr/bin/cam/oscam

$(DEPDIR)/enigma2_plugin_cams_oscam: bootstrap $(DEPENDS_enigma2_plugin_cams_oscam)
	$(PREPARE_enigma2_plugin_cams_oscam)
	$(start_build)
	cd $(DIR_enigma2_plugin_cams_oscam); \
	$(BUILDENV) \
	$(MAKE) CROSS=$(prefix)/devkit/sh4/bin/$(target)-  CONF_DIR=/var/keys; \
		$(INSTALL_DIR) $(PKDIR)/usr/bin/cam; \
		$(INSTALL_BIN) Distribution/oscam*-sh4-linux $(PKDIR)/usr/bin/cam/oscam
	$(tocdk_build)
	$(toflash_build)
	touch $@

#
# enigma2-plugin-cams-oscam-config
#
BEGIN[[
enigma2_plugin_cams_oscam_config
  0.1
  {PN}-{PV}
  nothing:file://../root/var/keys/oscam.conf
  nothing:file://../root/var/keys/oscam.dvbapi
  nothing:file://../root/var/keys/oscam.services
  nothing:file://../root/var/keys/oscam.srvid
  nothing:file://../root/var/keys/oscam.user
  nothing:file://../root/var/keys/oscam.server2
  nothing:file://../root/var/keys/oscam.server
  nothing:file://../root/var/keys/oscam.guess
;
]]END

DESCRIPTION_enigma2_plugin_cams_oscam_config = Example configs for Open Source Conditional Access Module software
SRC_URI_enigma2_plugin_cams_oscam_config = http://www.streamboard.tv/oscam/
FILES_enigma2_plugin_cams_oscam_config = \
/var/keys/oscam.*

$(DEPDIR)/enigma2-plugin-cams-oscam-config: $(DEPENDS_enigma2_plugin_cams_oscam_config)
	$(PREPARE_enigma2_plugin_cams_oscam_config)
	$(start_build)
		$(INSTALL_DIR) $(PKDIR)/var/keys
		$(INSTALL_FILE) $(buildprefix)/root/var/keys/oscam.conf     $(PKDIR)/var/keys/oscam.conf
		$(INSTALL_FILE) $(buildprefix)/root/var/keys/oscam.dvbapi   $(PKDIR)/var/keys/oscam.dvbapi
		$(INSTALL_FILE) $(buildprefix)/root/var/keys/oscam.services $(PKDIR)/var/keys/oscam.services
		$(INSTALL_FILE) $(buildprefix)/root/var/keys/oscam.srvid    $(PKDIR)/var/keys/oscam.srvid
		$(INSTALL_FILE) $(buildprefix)/root/var/keys/oscam.user     $(PKDIR)/var/keys/oscam.user
		$(INSTALL_FILE) $(buildprefix)/root/var/keys/oscam.server   $(PKDIR)/var/keys/oscam.server
		$(INSTALL_FILE) $(buildprefix)/root/var/keys/oscam.guess    $(PKDIR)/var/keys/oscam.guess
	$(e2extra_build)
	touch $@


#
# parted
#
BEGIN[[
parted
  3.1
  {PN}-{PV}
  extract:http://ftp.gnu.org/gnu/{PN}/{PN}-{PV}.tar.xz
  patch:file://{PN}_{PV}.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_parted = "parted"
FILES_parted = \
/usr/lib/libparted-fs-resize.s* \
/usr/lib/libparted.s* \
/usr/sbin/parted

$(DEPDIR)/parted: bootstrap $(DEPENDS_parted)
	$(PREPARE_parted)
	$(start_build)
	cd $(DIR_parted); \
		cp aclocal.m4 acinclude.m4; \
		autoconf; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--disable-Werror \
			--disable-device-mapper; \
		$(MAKE) all CC=$(target)-gcc STRIP=$(target)-strip; \
		$(INSTALL_parted)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_parted)
	touch $@

#
# gettext
#
BEGIN[[
gettext
  0.18
  {PN}-{PV}
  extract:ftp://ftp.gnu.org/gnu/{PN}/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gettext = "gettext"
FILES_gettext = \
*

$(DEPDIR)/gettext: bootstrap $(DEPENDS_gettext)
	$(PREPARE_gettext)
	$(start_build)
	cd $(DIR_gettext); \
		cp aclocal.m4 acinclude.m4; \
		autoconf; \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--without-emacs \
			--without-cvs \
			--disable-java; \
		$(MAKE) all; \
		$(INSTALL_gettext)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_gettext)
	touch $@
#
# NFS-UTILS
#
BEGIN[[
nfs_utils
  1.2.3
  {PN}-{PV}
  extract:http://downloads.sourceforge.net/project/nfs/nfs-utils/1.2.3/nfs-utils-1.2.3.tar.bz2
  patch:file://nfs-utils-1.2.3.patch
  make:install:DESTDIR=PKDIR
  remove:PKDIR/sbin/mount.nfs4:PKDIR/sbin/umount.nfs4
;
]]END

DESCRIPTION_nfs_utils = "nfs_utils"
FILES_nfs_utils = \
/usr/sbin/* \
sbin/*

$(DEPDIR)/nfs_utils: bootstrap e2fsprogs $(DEPENDS_nfs_utils)
	$(PREPARE_nfs_utils)
	$(start_build)
	cd $(DIR_nfs_utils) && \
		$(BUILDENV) \
		./configure \
			CC_FOR_BUILD=$(target)-gcc \
			--build=$(build) \
			--host=$(target) \
			--prefix=/usr \
			--disable-gss \
			--enable-ipv6=no \
			--disable-tirpc \
			--disable-nfsv4 \
			--without-tcp-wrappers && \
		$(MAKE) && \
		$(INSTALL_nfs_utils)
	( cd $(buildprefix)/root/etc && for i in $(NFS_UTILS_ADAPTED_ETC_FILES); do \
		[ -f $$i ] && $(INSTALL) -m644 $$i $(PKDIR)/etc/$$i || true; \
		[ "$${i%%/*}" = "init.d" ] && chmod 755 $(PKDIR)/etc/$$i || true; done )
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_nfs_utils)
	touch $@

#
# vsftpd
#
BEGIN[[
vsftpd
  3.0.2
  {PN}-{PV}
  extract:http://fossies.org/unix/misc/{PN}-{PV}.tar.gz
  patch:file://{PN}_{PV}.diff
  nothing:file://../root/release/vsftpd
  nothing:file://../root/etc/vsftpd.conf
  pmove:{PN}-{PV}/vsftpd:{PN}-{PV}/vsftpd.initscript
  make:install:PREFIX=PKDIR
  install:-m644:vsftpd.conf:PKDIR/etc
  install:-m755 -D:vsftpd.initscript:PKDIR/etc/init.d/vsftpd
;
]]END

DESCRIPTION_vsftpd = "vsftpd"
PKGR_vsftpd = r0
FILES_vsftpd = \
/etc/* \
/usr/bin/*

define postinst_vsftpd
#!/bin/sh
initdconfig --add vsftpd
endef

define prerm_vsftpd
#!/bin/sh
initdconfig --del vsftpd
endef

$(DEPDIR)/vsftpd: $(DEPENDS_vsftpd)
	$(PREPARE_vsftpd)
	$(start_build)
	mkdir -p $(PKDIR)/etc/
	mkdir -p $(PKDIR)/usr/bin/
	mkdir -p $(PKDIR)/usr/share/man/man8/
	mkdir -p $(PKDIR)/usr/share/man/man5/
	cd $(DIR_vsftpd) && \
		$(MAKE) clean && \
		$(MAKE) $(MAKE_OPTS) CFLAGS="-pipe -Os -g0" && \
		$(INSTALL_vsftpd)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_vsftpd)
	touch $@

#
# ETHTOOL
#
BEGIN[[
ethtool
  6
  {PN}-{PV}
  extract:http://downloads.openwrt.org/sources/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_ethtool = "ethtool"
FILES_ethtool = \
/usr/sbin/*

$(DEPDIR)/ethtool: $(DEPENDS_ethtool)
	$(PREPARE_ethtool)
	$(start_build)
	cd $(DIR_ethtool)  && \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--libdir=$(targetprefix)/usr/lib \
			--prefix=/usr && \
		$(MAKE) && \
		$(INSTALL_ethtool)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_ethtool)
	touch $@

#
# SAMBA
#
BEGIN[[
samba
  3.6.12
  {PN}-{PV}
  extract:http://www.{PN}.org/{PN}/ftp/stable/{PN}-{PV}.tar.gz
  patch:file://{PN}-{PV}.diff
  make:install bin/smbd bin/nmbd:DESTDIR=PKDIR:prefix=./.
;
]]END

DESCRIPTION_samba = "samba"
FILES_samba = \
/usr/sbin/* \
/usr/lib/*.so \
/etc/init.d/* \
/etc/samba/smb.conf \
/usr/lib/vfs/*.so

$(DEPDIR)/samba.do_prepare: bootstrap $(DEPENDS_samba)
	$(PREPARE_samba)
	touch $@

$(DEPDIR)/samba.do_compile: $(DEPDIR)/samba.do_prepare
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_samba) && \
		cd source3 && \
		./autogen.sh && \
		$(BUILDENV) \
		libreplace_cv_HAVE_GETADDRINFO=no \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix= \
			--exec-prefix=/usr \
			--disable-pie \
			--disable-avahi \
			--disable-cups \
			--disable-relro \
			--disable-swat \
			--disable-shared-libs \
			--disable-socket-wrapper \
			--disable-nss-wrapper \
			--disable-smbtorture4 \
			--disable-fam \
			--disable-iprint \
			--disable-dnssd \
			--disable-pthreadpool \
			--disable-dmalloc \
			--with-included-iniparser \
			--with-included-popt \
			--with-sendfile-support \
			--without-aio-support \
			--without-cluster-support \
			--without-ads \
			--without-krb5 \
			--without-dnsupdate \
			--without-automount \
			--without-ldap \
			--without-pam \
			--without-pam_smbpass \
			--without-winbind \
			--without-wbclient \
			--without-syslog \
			--without-nisplus-home \
			--without-quotas \
			--without-sys-quotas \
			--without-utmp \
			--without-acl-support \
			--with-configdir=/etc/samba \
			--with-privatedir=/etc/samba \
			--with-mandir=/usr/share/man \
			--with-piddir=/var/run \
			--with-logfilebase=/var/log \
			--with-lockdir=/var/lock \
			--with-swatdir=/usr/share/swat \
			--disable-cups && \
		$(MAKE) $(MAKE_OPTS) && \
		$(target)-strip -s bin/smbd && $(target)-strip -s bin/nmbd
	touch $@

$(DEPDIR)/samba: \
$(DEPDIR)/%samba: $(DEPDIR)/samba.do_compile
	$(start_build)
	cd $(DIR_samba) && \
		cd source3 && \
		$(INSTALL) -d $(PKDIR)/etc/samba && \
		$(INSTALL) -c -m644 ../examples/smb.conf.spark $(PKDIR)/etc/samba/smb.conf && \
		$(INSTALL) -d $(PKDIR)/etc/init.d && \
		$(INSTALL) -c -m755 ../examples/samba.spark $(PKDIR)/etc/init.d/samba && \
		$(INSTALL_samba)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_samba)
	touch $@ || true

#
# NETIO
#
BEGIN[[
netio
  1.26
  {PN}126
  extract:http://bnsmb.de/files/public/windows/{PN}126.zip
  install:-m755:{PN}:PKDIR/usr/bin
  install:-m755:bin/linux-i386:HOST/bin/{PN}
;
]]END

DESCRIPTION_netio = "netio"
FILES_netio = \
/usr/bin/*

$(DEPDIR)/netio.do_prepare: $(DEPENDS_netio)
	$(PREPARE_netio)
	touch $@

$(DEPDIR)/netio.do_compile: bootstrap $(DEPDIR)/netio.do_prepare
	cd $(DIR_netio) && \
		$(MAKE_OPTS) \
		$(MAKE) all O=.o X= CFLAGS="-DUNIX" LIBS="$(LDFLAGS) -lpthread" OUT=-o
	touch $@

$(DEPDIR)/netio: \
$(DEPDIR)/%netio: $(DEPDIR)/netio.do_compile
	$(start_build)
	cd $(DIR_netio) && \
		$(INSTALL) -d $(PKDIR)/usr/bin && \
		$(INSTALL_netio)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_netio)
	touch $@ || true

#
# LIGHTTPD
#
BEGIN[[
lighttpd
  1.4.15
  {PN}-{PV}
  extract:http://www.{PN}.net/download/{PN}-{PV}.tar.gz
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_lighttpd = "lighttpd"
FILES_lighttpd = \
/usr/bin/* \
/usr/sbin/* \
/usr/lib/*.so \
/etc/init.d/* \
/etc/lighttpd/*.conf 

$(DEPDIR)/lighttpd: bootstrap $(DEPENDS_lighttpd)
	$(PREPARE_lighttpd)
	$(start_build)
	cd $(DIR_lighttpd) && \
		$(BUILDENV) \
		./configure \
			--build=$(build) \
			--host=$(target) \
			--prefix= \
			--exec-prefix=/usr \
			--datarootdir=/usr/share && \
		$(MAKE) && \
		$(INSTALL_lighttpd)
	cd $(DIR_lighttpd) && \
		$(INSTALL) -d $(PKDIR)/etc/lighttpd && \
		$(INSTALL) -c -m644 doc/lighttpd.conf $(PKDIR)/etc/lighttpd && \
		$(INSTALL) -d $(PKDIR)/etc/init.d && \
		$(INSTALL) -c -m644 doc/rc.lighttpd.redhat $(PKDIR)/etc/init.d/lighttpd
	$(INSTALL) -d $(PKDIR)/etc/lighttpd && $(INSTALL) -m755 root/etc/lighttpd/lighttpd.conf $(PKDIR)/etc/lighttpd
	$(INSTALL) -d $(PKDIR)/etc/init.d && $(INSTALL) -m755 root/etc/init.d/lighttpd $(PKDIR)/etc/init.d
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_lighttpd)
	touch $@

#
# NETKIT_FTP
#
BEGIN[[
netkit_ftp
  0.17
  {PN}-{PV}
  extract:http://ibiblio.org/pub/linux/system/network/netkit//{PN}-{PV}.tar.gz
#patch:file://{PN}.diff
  make:install:MANDIR=/usr/share/man:INSTALLROOT=TARGETS
;
]]END

DESCRIPTION_netkit_ftp = "netkit_ftp"
FILES_netkit_ftp = \
/usr/bin/*

$(DEPDIR)/netkit_ftp: bootstrap ncurses libreadline $(DEPENDS_netkit_ftp)
	$(PREPARE_netkit_ftp)
	$(start_build)
	cd $(DIR_netkit_ftp)  && \
		$(BUILDENV) \
		./configure \
			--with-c-compiler=$(target)-gcc \
			--prefix=/usr \
			--installroot=$(PKDIR) && \
		$(MAKE) && \
		$(INSTALL_netkit_ftp)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_netkit_ftp)
	touch $@

#
# WIRELESS_TOOLS
#
BEGIN[[
wireless_tools
  29
  wireless_tools.{PV}
  extract:http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/wireless_tools.{PV}.tar.gz
  make:install:INSTALL_MAN=PKDIR/usr/share/man:PREFIX=PKDIR/usr
;
]]END

DESCRIPTION_wireless_tools = wireless-tools
RDEPENDS_wireless_tools = rfkill wpa-supplicant
FILES_wireless_tools = \
/usr/sbin/* \
/usr/lib/*.so*

$(DEPDIR)/wireless_tools: bootstrap wpa_supplicant rfkill $(DEPENDS_wireless_tools)
	$(PREPARE_wireless_tools)
	$(start_build)
	cd $(DIR_wireless_tools)  && \
		$(MAKE) $(MAKE_OPTS) && \
		$(INSTALL_wireless_tools)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_wireless_tools)
	touch $@ || true

#
# WPA_SUPPLICANT
#
BEGIN[[
wpa_supplicant
  1.0
  wpa_supplicant-{PV}
  extract:http://hostap.epitest.fi/releases/wpa_supplicant-{PV}.tar.gz
  nothing:file://wpa_supplicant.config
  make:install:DESTDIR=PKDIR:LIBDIR=/usr/lib:BINDIR=/usr/sbin
;
]]END

DESCRIPTION_wpa_supplicant = "wpa-supplicant"
PKGR_wpa_supplicant = r0
FILES_wpa_supplicant = \
/usr/sbin/*

$(DEPDIR)/wpa_supplicant: bootstrap $(DEPENDS_wpa_supplicant)
	$(PREPARE_wpa_supplicant)
	$(start_build)
	cd $(DIR_wpa_supplicant)/wpa_supplicant  && \
		mv ../wpa_supplicant.config .config && \
		$(MAKE) $(MAKE_OPTS) && \
		$(INSTALL_wpa_supplicant)
	$(tocdk_build)
	$(toflash_build)
	$(DISTCLEANUP_wpa_supplicant)
	touch $@


#
# TRANSMISSION
#

BEGIN[[
transmission
  2.77
  {PN}-{PV}
  extract:http://mirrors.m0k.org/transmission/files/{PN}-{PV}.tar.bz2
  nothing:file://../root/etc/init.d/transmission.init
  nothing:file://../root/etc/transmission.json
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_transmission = "A free, lightweight BitTorrent client"
PKGR_transmission = r3
RDEPENDS_transmission = curl openssl libevent
FILES_transmission = \
/usr/bin/* \
/usr/share/transmission/*

define postinst_transmission
#!/bin/sh

initdconfig --add transmission
endef
define postrm_transmission
#!/bin/sh

initdconfig --del transmission
endef

$(DEPDIR)/transmission: bootstrap libevent-dev curl $(DEPENDS_transmission)
	$(PREPARE_transmission)
	$(start_build)
	cd $(DIR_transmission) && \
		$(BUILDENV) \
		./configure \
			--prefix=/usr \
			--disable-nls \
			--disable-mac \
			--disable-libappindicator \
			--disable-libcanberra \
			--with-gnu-ld \
			--enable-daemon \
			--enable-cli \
			--disable-gtk \
			--enable-largefile \
			--enable-lightweight \
			--build=$(build) \
			--host=$(target) && \
		$(MAKE) && \
		$(INSTALL_transmission) && \
		$(INSTALL_DIR) $(PKDIR)/etc && \
		$(INSTALL_DIR) $(PKDIR)/etc/transmission && \
		$(INSTALL_FILE) transmission.json $(PKDIR)/etc/transmission/settings.json && \
		$(INSTALL_DIR) $(PKDIR)/etc/init.d && \
		$(INSTALL_BIN) transmission.init $(PKDIR)/etc/init.d/transmission
	$(extra_build)
	$(DISTCLEANUP_transmission)
	touch $@
# misc/tools

#DESCRIPTION_misc_tools = "misc tools for box"
#SRC_URI_misc_tools = "git://gitorious.org/~schpuntik/open-duckbox-project-sh4/tdt-amiko.git"
#DIR_misc_tools = $(appsdir)/misc/tools


#$(appsdir)/misc/tools/config.status: bootstrap libpng
#$(appsdir)/misc/tools/config.status: bootstrap
#	export PATH=$(hostprefix)/bin:$(PATH) && \
#	cd $(appsdir)/misc/tools && \
#	libtoolize -f -c && \
#	$(CONFIGURE) --prefix= \
#	$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324)
#
#$(DEPDIR)/misc-tools: $(DEPDIR)/%misc-tools: driver libstdc++-dev libdvdnav libdvdcss libpng jpeg ffmpeg expat fontconfig bzip2 $(appsdir)/misc/tools/config.status
#	$(start_build)
#	$(get_git_version)
#	$(MAKE) -C $(appsdir)/misc/tools all install DESTDIR=$(PKDIR) \
#	CPPFLAGS="\
#	$(if $(HL101), -DPLATFORM_HL101) \
#	$(if $(PLAYER191), -DPLAYER191) \
#	$(tocdk_build)
#	$(toflash_build)
#	[ "x$*" = "x" ] && touch $@ || true

misc-tools-clean: \
	devinit-clean \
	evremote2-clean \
	fp_control-clean \
	gitVCInfo-clean \
	hotplug-clean \
	libeplayer3-clean \
	libmme_host-clean \
	libmmeimage-clean \
	showiframe-clean \
	stfbcontrol-clean \
	streamproxy-clean \
	ustslave-clean \
	eplayer4-clean



#
# DEVINIT
#
BEGIN[[
devinit
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_devinit = "devinit"
SRC_URI_devinit = "https://code.google.com/p/tdt-amiko/"
PKGR_devinit = r1
FILES_devinit = \
/bin/devinit

define DISTCLEANUP_devinit
	cd $(DIR_devinit) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/devinit
	rm -f $(DIR_devinit)
endef
define DEPSCLEANUP_devinit
	cd $(DIR_devinit) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/devinit.do_compile
endef

$(DEPDIR)/devinit: bootstrap $(DEPENDS_devinit)
	$(PREPARE_devinit)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_devinit) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_devinit)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
# EVREMOTE2
#
BEGIN[[
evremote2
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_evremote2 = "evremote2"
SRC_URI_evremote2 = "https://code.google.com/p/tdt-amiko/"
PKGR_evremote2 = r1
FILES_evremote2 = \
/bin/evremote2 \
/bin/evtest

define DISTCLEANUP_evremote2
	cd $(DIR_evremote2) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/evremote2
	rm -f $(DIR_evremote2)
endef
define DEPSCLEANUP_evremote2
	cd $(DIR_evremote2) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/evremote2.do_compile
endef

$(DEPDIR)/evremote2: bootstrap $(DEPENDS_evremote2)
	$(PREPARE_evremote2)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_evremote2) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_evremote2)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
# FP-CONTROL
#
BEGIN[[
fp_control
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/fp_control:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_fp_control = "fp_control"
SRC_URI_fp_control = "https://code.google.com/p/tdt-amiko/"
PKGR_fp_control = r1
FILES_fp_control = \
/bin/fp_control

define DISTCLEANUP_fp_control
	cd $(DIR_fp_control) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/fp_control
	rm -f $(DIR_fp_control)
endef
define DEPSCLEANUP_fp_control
	cd $(DIR_fp_control) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/fp_control.do_compile
endef

$(DEPDIR)/fp_control: bootstrap $(DEPENDS_fp_control)
	$(PREPARE_fp_control)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_fp_control) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_fp_control)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
# gitVCInfo
#
BEGIN[[
gitVCInfo
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_gitVCInfo = "gitVCInfo"
SRC_URI_gitVCInfo = "https://code.google.com/p/tdt-amiko/"
PKGR_gitVCInfo = r1
FILES_gitVCInfo = \
/bin/gitVCInfo

define DISTCLEANUP_gitVCInfo
	cd $(DIR_gitVCInfo) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/gitVCInfo
	rm -f $(DIR_gitVCInfo)
endef
define DEPSCLEANUP_gitVCInfo
	cd $(DIR_gitVCInfo) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/gitVCInfo.do_compile
endef

$(DEPDIR)/gitVCInfo: bootstrap $(DEPENDS_gitVCInfo)
	$(PREPARE_gitVCInfo)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_gitVCInfo) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_gitVCInfo)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
# HOTPLUG
#
BEGIN[[
hotplug
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_hotplug = "hotplug"
SRC_URI_hotplug = "https://code.google.com/p/tdt-amiko/"
PKGR_hotplug =r1
FILES_hotplug = \
/bin/hotplug

define DISTCLEANUP_hotplug
	cd $(DIR_hotplug) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/hotplug
	rm -f $(DIR_hotplug)
endef
define DEPSCLEANUP_hotplug
	cd $(DIR_hotplug) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/hotplug.do_compile
endef

$(DEPDIR)/hotplug: bootstrap $(DEPENDS_hotplug)
	$(PREPARE_hotplug)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_hotplug) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_hotplug)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
# LIBEPLAYER3
#
BEGIN[[
libeplayer3
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libeplayer3 = "libeplayer3"
SRC_URI_libeplayer3 = "https://code.google.com/p/tdt-amiko/"
PKGR_libeplayer3 = r1
FILES_libeplayer3 = \
/bin/eplayer3 \
/bin/meta \
/lib/libeplayer3.*

define DISTCLEANUP_libeplayer3
	cd $(DIR_libeplayer3) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/libeplayer3
	rm -f $(DIR_libeplayer3)
endef
define DEPSCLEANUP_libeplayer3
	cd $(DIR_libeplayer3) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/libeplayer3.do_compile
endef

$(DEPDIR)/libeplayer3: bootstrap libstdc++-dev libdvdnav libdvdcss libpng libjpeg ffmpeg libexpat fontconfig bzip2 $(DEPENDS_libeplayer3)
	$(PREPARE_libeplayer3)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_libeplayer3) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
			--includedir=/usr/include \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_libeplayer3)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
# LIBMME-HOST
#
BEGIN[[
libmme_host
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/libmme_host:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libmme_host = "libmme-host"
SRC_URI_libmme_host = "https://code.google.com/p/tdt-amiko/"
PKGR_libmme_host = r1
FILES_libmme_host = \
/lib/libmme_host.*

define DISTCLEANUP_libmme_host
	cd $(DIR_libmme_host) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/libmme_host
	rm -f $(DIR_libmme_host)
endef
define DEPSCLEANUP_libmme_host
	cd $(DIR_libmme_host) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/libmme_host.do_compile
endef

$(DEPDIR)/libmme_host: bootstrap $(DEPENDS_libmme_host)
	$(PREPARE_libmme_host)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_libmme_host) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_libmme_host)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
# LIBMMEIMAGE
#
BEGIN[[
libmmeimage
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_libmmeimage = "libmmeimage"
SRC_URI_libmmeimage = "https://code.google.com/p/tdt-amiko/"
PKGR_libmmeimage = r1
FILES_libmmeimage = \
/lib/libmmeimage.*

define DISTCLEANUP_libmmeimage
	cd $(DIR_libmmeimage) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/libmmeimage
	rm -f $(DIR_libmmeimage)
endef
define DEPSCLEANUP_libmmeimage
	cd $(DIR_libmmeimage) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/libmmeimage.do_compile
endef

$(DEPDIR)/libmmeimage: bootstrap $(DEPENDS_libmmeimage)
	$(PREPARE_libmmeimage)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_libmmeimage) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
			--includedir=/usr/include \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_libmmeimage)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
# SHOWIFRAME
#
BEGIN[[
showiframe
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_showiframe = "showiframe"
SRC_URI_showiframe = "https://code.google.com/p/tdt-amiko/"
PKGR_showiframe =r1
FILES_showiframe = \
/bin/showiframe

define DISTCLEANUP_showiframe
	cd $(DIR_showiframe) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/showiframe
	rm -f $(DIR_showiframe)
endef
define DEPSCLEANUP_showiframe
	cd $(DIR_showiframe) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/showiframe.do_compile
endef

$(DEPDIR)/showiframe: bootstrap $(DEPENDS_showiframe)
	$(PREPARE_showiframe)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_showiframe) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_showiframe)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
#STFBCONTROL
#
BEGIN[[
stfbcontrol
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_stfbcontrol = "stfbcontrol"
SRC_URI_stfbcontrol = "https://code.google.com/p/tdt-amiko/"
PKGR_stfbcontrol = r1
FILES_stfbcontrol = \
/bin/stfbcontrol

define DISTCLEANUP_stfbcontrol
	cd $(DIR_stfbcontrol) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/stfbcontrol
	rm -f $(DIR_stfbcontrol)
endef
define DEPSCLEANUP_stfbcontrol
	cd $(DIR_stfbcontrol) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/stfbcontrol.do_compile
endef

$(DEPDIR)/stfbcontrol: bootstrap $(DEPENDS_stfbcontrol)
	$(PREPARE_stfbcontrol)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_stfbcontrol) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_stfbcontrol)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	[ "x$*" = "x" ] && touch $@ || true

#
# STREAMPROXY
#
BEGIN[[
streamproxy
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_streamproxy = "streamproxy"
SRC_URI_streamproxy = "https://code.google.com/p/tdt-amiko/"
PKGR_streamproxy = r1
FILES_streamproxy = \
/bin/streamproxy

define DISTCLEANUP_streamproxy
	cd $(DIR_streamproxy) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/streamproxy
	rm -f $(DIR_streamproxy)
endef
define DEPSCLEANUP_streamproxy
	cd $(DIR_streamproxy) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/streamproxy.do_compile
endef

$(DEPDIR)/streamproxy: bootstrap $(DEPENDS_streamproxy)
	$(PREPARE_streamproxy)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_streamproxy) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_streamproxy)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	[ "x$*" = "x" ] && touch $@ || true

#
# USTSLAVE
#
BEGIN[[
ustslave
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_ustslave = "ustslave"
SRC_URI_ustslave = "https://code.google.com/p/tdt-amiko/"
PKGR_ustslave = r1
FILES_ustslave = \
/bin/ustslave

define DISTCLEANUP_ustslave
	cd $(DIR_ustslave) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/ustslave
	rm -f $(DIR_ustslave)
endef
define DEPSCLEANUP_ustslave
	cd $(DIR_ustslave) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/ustslave.do_compile
endef

$(DEPDIR)/ustslave: bootstrap $(DEPENDS_ustslave)
	$(PREPARE_ustslave)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_ustslave) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_ustslave)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true

#
# EPLAYER4
#
BEGIN[[
eplayer4
  git
  {PN}-{PV}
  plink:$(appsdir)/misc/tools/{PN}:{PN}-{PV}
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_eplayer4 = "eplayer4"
SRC_URI_eplayer4 = "https://code.google.com/p/tdt-amiko/"
PKGR_eplayer4 = r1
FILES_eplayer4 = \
/bin/eplayer4

define DISTCLEANUP_eplayer4
	cd $(DIR_eplayer4) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/eplayer4
	rm -f $(DIR_eplayer4)
endef
define DEPSCLEANUP_eplayer4
	cd $(DIR_eplayer4) && \
	$(MAKE) distclean
	rm -f $(DEPDIR)/eplayer4.do_compile
endef

$(DEPDIR)/eplayer4: bootstrap $(DEPENDS_eplayer4)
	$(PREPARE_eplayer4)
	$(start_build)
	$(get_git_version)
	export PATH=$(hostprefix)/bin:$(PATH) && \
	cd $(DIR_eplayer4) && \
		libtoolize -f -c && \
		$(CONFIGURE) --prefix= \
		$(if $(MULTICOM406), --enable-multicom406) $(if $(MULTICOM324), --enable-multicom324) \
		$(MAKE) && \
		$(INSTALL_eplayer4)
	CPPFLAGS="\
	$(if $(HL101), -DPLATFORM_HL101) \
	$(if $(PLAYER191), -DPLAYER191)"
	$(tocdk_build)
	$(toflash_build)
	touch $@ || true
#
# Plugins
#
$(DEPDIR)/enigma2-plugins: enigma2_openwebif enigma2_networkbrowser openpli-plugins

#
# enigma2-openwebif
#
BEGIN[[
enigma2_openwebif
  git
  e2openplugin-OpenWebif
  nothing:git://github.com/schpuntik/e2openplugin-OpenWebif.git
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_enigma2_openwebif = "open webinteface plugin for enigma2 by openpli team"
PKGR_enigma2_openwebif = r1
RDEPENDS_enigma2_openwebif = python pythoncheetah grab

$(DEPDIR)/enigma2_openwebif: bootstrap $(RDEPENDS_enigma2_openwebif) $(DEPENDS_enigma2_openwebif)
	$(PREPARE_enigma2_openwebif)
	$(start_build)
	cd $(DIR_enigma2_openwebif) && \
		$(BUILDENV) \
		mkdir -p $(PKDIR)/usr/lib/enigma2/python/Plugins/Extensions && \
		mkdir -p $(PKDIR)/usr/bin/ && \
		cp -a plugin $(PKDIR)/usr/lib/enigma2/python/Plugins/Extensions/OpenWebif && \
		cp -a $(buildprefix)/root/usr/bin/grab.sh $(PKDIR)/usr/bin/
	$(e2extra_build)
	$(DISTCLEANUP_enigma2_openwebif)
	touch $@

#
# enigma2-networkbrowser
#
BEGIN[[
enigma2_networkbrowser
  git
  {PN}-{PV}
  nothing:git://openpli.git.sourceforge.net/gitroot/openpli/plugins-enigma2:sub=networkbrowser
  patch:file://{PN}-support_autofs.patch
  make:install:DESTDIR=PKDIR
;
]]END

DESCRIPTION_enigma2_networkbrowser = "networkbrowser plugin for enigma2"
PKGR_enigma2_networkbrowser = r1

$(DEPDIR)/enigma2_networkbrowser: $(DEPENDS_enigma2_networkbrowser)
	$(PREPARE_enigma2_networkbrowser)
	$(start_build)
	cd $(DIR_enigma2_networkbrowser)/src/lib && \
		$(BUILDENV) \
		sh4-linux-gcc -shared -o netscan.so \
			-I $(targetprefix)/usr/include/python$(PYTHON_VERSION) \
			-include Python.h \
			errors.h \
			list.c \
			list.h \
			main.c \
			nbtscan.c \
			nbtscan.h \
			range.c \
			range.h \
			showmount.c \
			showmount.h \
			smb.h \
			smbinfo.c \
			smbinfo.h \
			statusq.c \
			statusq.h \
			time_compat.h
	cd $(DIR_enigma2_networkbrowser) && \
		mkdir -p $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/NetworkBrowser && \
		cp -a po $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/NetworkBrowser/ && \
		cp -a meta $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/NetworkBrowser/ && \
		cp -a src/* $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/NetworkBrowser/ && \
		cp -a src/lib/netscan.so $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/NetworkBrowser/ && \
		rm -rf $(PKDIR)/usr/lib/enigma2/python/Plugins/SystemPlugins/NetworkBrowser/lib
	$(e2extra_build)
	touch $@

$(DEPDIR)/%-openpli:
	$(call git_fetch_prepare,$*_openpli,git://github.com/E2OpenPlugins/e2openplugin-$*.git)
	$(eval FILES_$*_openpli += /usr/lib/enigma2/python/Plugins)
	$(eval NAME_$*_openpli = enigma2-plugin-extensions-$*)
	$(start_build)
	$(get_git_version)
	cd $(DIR_$*_openpli) && \
		$(hostprefix)/bin/python$(PYTHON_VERSION) setup.py install --root=$(PKDIR) --install-lib=/usr/lib/enigma2/python/Plugins
	$(remove_pyc)
	$(e2extra_build)
	$(DISTCLEANUP_enigma2_networkbrowser)
	touch $@

DESCRIPTION_NewsReader_openpli = RSS reader
DESCRIPTION_AddStreamUrl_openpli = Add a stream url to your channellist
DESCRIPTION_Satscan_openpli = Alternative blind scan plugin for DVB-S
DESCRIPTION_SimpleUmount_openpli = list of mounted mass storage devices and umount one of them
PKGR_openpli_plugins = r1

openpli_plugin_list = \
AddStreamUrl \
NewsReader \
Satscan \
SimpleUmount

# openpli plugins that go to flash
openpli_plugin_distlist = \
SimpleUmount

openpli_plugin_list += $(openpli_plugin_distlist)

$(foreach p,$(openpli_plugin_distlist),$(eval DIST_$p_openpli = $p_openpli))

openpli-plugins: $(addprefix $(DEPDIR)/,$(addsuffix -openpli,$(openpli_plugin_list)))
#
# Make Extern-Plugins
#
#
BEGIN[[
e2plugin
  git
  {PN}
  git://github.com/schpuntik/enigma2-plugins-sh4.git
ifdef ENABLE_PY332
  patch:file://python_m4.diff
  patch:file://e2plugin.diff
  patch:file://e2plugin-python3.diff
endif
;
]]END

DESCRIPTION_e2plugin := Additional plugins for Enigma2

PKGR_e2plugin = r2

NAME_e2plugin_meta := enigma2-plugins-meta
FILES_e2plugin_meta := /usr/share/meta
DESCRIPTION_e2plugin_meta := Enigma2 plugins metadata
PACKAGES_e2plugin = e2plugin_meta
DIST_e2plugin = enigma2_plugin_systemplugins_networkbrowser \
enigma2_plugin_extensions_alternativesoftcammanager \
enigma2_plugin_extensions_webinterface \
enigma2_plugin_systemplugins_libgisclubskin

# This is list of plugins that have files with non-typical path,
# that doesn't start with /usr/lib/enigma2/python/Plugins
enigma2_plugins_nontyp := \
$(DEPDIR)/enigma2-plugins-sh4-networkbrowser \
$(DEPDIR)/enigma2-plugins-sh4-multiquickbutton \
$(DEPDIR)/enigma2-plugins-sh4-libgisclubskin


$(DEPDIR)/enigma2-plugins-sh4.do_prepare: $(DEPENDS_e2plugin)
	$(PREPARE_e2plugin)
	touch $@

$(DIR_e2plugin)/config.status: enigma2-plugins-sh4.do_prepare
	cd $(DIR_e2plugin) && \
		./autogen.sh && \
		sed -e 's|#!/usr/bin/python|#!$(hostprefix)/bin/python$(PYTHON_VERSION)|' -i xml2po.py && \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--datadir=/usr/share \
			--libdir=/usr/lib \
			--prefix=/usr \
			--sysconfdir=/etc \
			STAGING_INCDIR=$(hostprefix)/usr/include \
			STAGING_LIBDIR=$(hostprefix)/usr/lib \
			PY_PATH=$(targetprefix)/usr \
			$(PLATFORM_CPPFLAGS) $(E_CONFIG_OPTS)

enigma2_plugindir = /usr/lib/enigma2/python/Plugins

$(DEPDIR)/enigma2-plugins-bla: $(DIR_e2plugin)/config.status
	$(eval enigma2-plugins-sh4-list = $(shell echo $(DIR_e2plugin)/*/Makefile | tr ' ' '\n' |sed 's:/Makefile::;s:.*/::'))
	make $(addprefix $(DEPDIR)/enigma2-plugins-sh4-,$(enigma2-plugins-sh4-list))

$(DEPDIR)/enigma2-plugins-sh4: $(DIR_e2plugin)/config.status $(enigma2_plugins_nontyp)
	$(call parent_pk,e2plugin)
#	Don't build meta
	$(start_build)
	cd $(DIR_e2plugin) && \
		$(MAKE) install DESTDIR=$(PKDIR)
	rm -rf $(ipkgbuilddir)/*
	$(flash_prebuild)

	echo -e "\
	from split_packages import * \n\
	#print bb_data \n\
	do_split_packages(bb_data, '$(enigma2_plugindir)', '(.*?/.*?)/.*', 'enigma2-plugin-%s', 'Enigma2 Plugin: %s', recursive=True, match_path=True, prepend=True) \n\
	for package in bb_get('PACKAGES').split(): \n\
		pk = bb_get('NAME_' + package).split('-')[-1] \n\
		try: \n\
			read_control_file('$(DIR_e2plugin)/' + pk + '/CONTROL/control') \n\
		except IOError: \n\
			print('skipping', pk) \n\
		for s in ['preinst', 'postinst', 'prerm', 'postrm', 'conffiles']: \n\
			try: \n\
				bb_set(s + '_' + package, open('$(DIR_e2plugin)/' + pk + '/CONTROL/' + s).read()) \n\
			except IOError: \n\
				pass \n\
	do_finish() \n\
	" | $(hostprefix)/bin/python$(PYTHON_VERSION)

	$(call do_build_pkg,none,extra)
	touch $@

#$(enigma2_plugins_nontyp):

$(DEPDIR)/enigma2-plugins-sh4-%: $(DIR_e2plugin)/config.status
	$(call parent_pk,e2plugin)
	$(start_build)
	echo $@
	cd $(DIR_e2plugin)/$* && \
		$(MAKE) install DESTDIR=$(PKDIR)
	rm -rf $(ipkgbuilddir)/*
	$(flash_prebuild)

	echo -e " \n\
	from split_packages import * \n\
	pk = '$*' \n\
	try: \n\
		package = read_control_file('$(DIR_e2plugin)/' + pk + '/CONTROL/control') \n\
		bb_set('PACKAGES', bb_get('PACKAGES') + ' ' + package) \n\
		bb_set('FILES_' + package, '/') \n\
	except IOError: \n\
		print ('skipping', pk) \n\
	for s in ['preinst', 'postinst', 'prerm', 'postrm', 'conffiles']: \n\
		try: \n\
			bb_set(s + '_' + package, open('$(DIR_e2plugin)/' + pk + '/CONTROL/' + s).read()) \n\
		except IOError: \n\
			pass \n\
	do_finish() \n\
	" | $(hostprefix)/bin/python$(PYTHON_VERSION)
	
	rm -r $(ipkgbuilddir)/e2plugin_meta
	$(call do_build_pkg,none,extra)
	touch $@

enigma2-plugins-sh4-clean:
	rm -f $(DEPDIR)/enigma2-plugins-sh4
	rm -f $(DEPDIR)/enigma2-plugins-sh4.do_compile

enigma2-plugins-sh4-distclean: enigma2-plugins-sh4-clean
	rm -f $(DEPDIR)/enigma2-plugins-sh4.do_prepare
	rm -rf $(DIR_e2plugin)
#
# Make Extern-Skins
#
#
BEGIN[[
e2skin
  git
  {PN}
  git://github.com/schpuntik/enigma2-skins-sh4.git:b=master
;
]]END

DESCRIPTION_e2skin := Skins for Enigma2

PKGR_e2skin = r2

NAME_e2skin_meta := enigma2-skins-meta
FILES_e2skin_meta := /usr/share/meta
DESCRIPTION_e2skin_meta := Enigma2 skins metadata
PACKAGES_e2skin = e2skin_meta

$(DEPDIR)/enigma2-skins-sh4.do_prepare: $(DEPENDS_e2skin)
	$(PREPARE_e2skin)

$(DIR_e2skin)/config.status: enigma2-skins-sh4.do_prepare
	cd $(DIR_e2skin) && \
		./autogen.sh && \
		$(BUILDENV) \
		./configure \
			--host=$(target) \
			--prefix=/usr \
			--datadir=/usr/share \
			--sysconfdir=/etc \
			STAGING_INCDIR=$(hostprefix)/usr/include \
			STAGING_LIBDIR=$(hostprefix)/usr/lib \
			PY_PATH=$(targetprefix)/usr \
			$(PLATFORM_CPPFLAGS)
	touch $@

$(DEPDIR)/enigma2-skins-sh4.do_compile: $(DIR_e2skin)/config.status
	cd $(DIR_e2skin) && \
		$(MAKE) all
	touch $@

enigma2_skindir = '/usr/share/enigma2'

$(DEPDIR)/enigma2-skins-sh4: enigma2-skins-sh4.do_compile
	$(call parent_pk,e2skin)
	$(start_build)
	rm -rf $(ipkgbuilddir)/*
	cd $(DIR_e2skin) && \
		$(MAKE) install DESTDIR=$(PKDIR)
	$(flash_prebuild)

	echo -e "\
	from split_packages import * \n\
	import os \n\
	#print bb_data \n\
	do_split_packages(bb_data, $(enigma2_skindir), '(.*?)/.*', 'enigma2-plugin-skin-%s', 'Enigma2 Skin: %s', recursive=True, match_path=True, prepend=True) \n\
	for package in bb_get('PACKAGES').split(): \n\
		pk = bb_get('NAME_' + package).replace('enigma2-plugin-skin-', '') \n\
		dir = '' \n\
		for x in os.listdir('$(DIR_e2skin)/skins'): \n\
			if x.lower() == pk.lower(): \n\
				dir = '$(DIR_e2skin)/skins/' + x \n\
		if not dir: \n\
			print 'not found', pk \n\
			continue \n\
		try: \n\
			read_control_file(dir + '/CONTROL/control') \n\
		except IOError: \n\
			print 'skipping', dir + '/CONTROL/control' \n\
		for s in ['preinst', 'postinst', 'prerm', 'postrm']: \n\
			try: \n\
				bb_set(s + '_' + package, open(dir + '/CONTROL/' + s).read()) \n\
			except IOError: \n\
				pass \n\
	do_finish() \n\
	" | $(hostprefix)/bin/python$(PYTHON_VERSION)

	$(call do_build_pkg,none,extra)
	touch $@

enigma2-skins-sh4-clean:
	rm -f $(DEPDIR)/enigma2-skins-sh4.do_compile

enigma2-skins-sh4-distclean: enigma2-skins-sh4-clean
	rm -f $(DEPDIR)/enigma2-skins-sh4.do_prepare
	rm -rf $(DIR_e2skin)
# tuxbox/enigma2
BEGIN[[
enigma2_pli
  git
  {PN}-nightly

ifdef ENABLE_E2PD0
  git://openpli.git.sourceforge.net/gitroot/openpli/enigma2:r=945aeb939308b3652b56bc6c577853369d54a537
  patch:file://enigma2-pli-nightly.0.diff
endif

ifdef ENABLE_E2PD1
  git://github.com/technic/amiko-e2-pli.git:b=last
  patch:file://enigma2-pli-nightly-last.diff
  patch:file://python_m4.diff
ifdef ENABLE_PY332
  patch:file://enigma2-pli-nightly-last-python3.diff
endif
endif

ifdef ENABLE_E2PD2
  git://github.com/technic/amiko-e2-pli.git:b=master
endif

;
]]END

DESCRIPTION_enigma2_pli := a framebuffer-based zapping application (GUI) for linux
PKGR_enigma2_pli = r3
SRC_URI_enigma2_pli := git://openpli.git.sourceforge.net/gitroot/openpli/enigma2
FILES_enigma2_pli := /usr/lib/ /etc/enigma2 /usr/share /usr/bin
RDEPENDS_enigma2_pli = fp_control \
evremote2 \
devinit \
ustslave \
stfbcontrol \
showiframe

# Select enigma2 keymap.xml
enigma2_keymap_file = keymap$(if $(HL101),_$(HL101)).xml

E_CONFIG_OPTS =

ifdef ENABLE_EXTERNALLCD
E_CONFIG_OPTS += --with-graphlcd
endif

ifdef ENABLE_MEDIAFWGSTREAMER
E_CONFIG_OPTS += --enable-mediafwgstreamer
else
E_CONFIG_OPTS += --enable-libeplayer3 LIBEPLAYER3_CPPFLAGS="-I $(appsdir)/misc/tools/libeplayer3/include"
endif

$(DEPDIR)/enigma2-pli-nightly.do_prepare: $(DEPENDS_enigma2_pli)
	$(PREPARE_enigma2_pli)
	touch $@

ifdef ENABLE_PY332
$(DIR_enigma2_pli)/config.status: bootstrap opkg ethtool libfreetype libexpat fontconfig libpng libjpeg libgif libmme_host libmmeimage libfribidi libid3tag libmad libsigc libreadline font-valis-enigma \
		enigma2-pli-nightly.do_prepare \
		libdvbsipp python libxml2 libxslt elementtree zope_component zope_interface service_identity six pip twisted pycrypto pyusb Pillow pyopenssl pythonwifi lxml libxmlccwrap \
		ncurses-dev libdreamdvd2 tuxtxt32bpp sdparm hotplug_e2 $(MEDIAFW_DEP) $(EXTERNALLCD_DEP)
	cd $(DIR_enigma2_pli) && \
		$(BUILDENV) \
		./autogen.sh && \
		sed -e 's|#!/usr/bin/python|#!$(hostprefix)/bin/python$(PYTHON_VERSION)|' -i po/xml2po.py && \
		./configure \
			--host=$(target) \
			--with-libsdl=no \
			--datadir=/usr/share \
			--libdir=/usr/lib \
			--bindir=/usr/bin \
			--prefix=/usr \
			--sysconfdir=/etc \
			--with-boxtype=none \
			STAGING_INCDIR=$(hostprefix)/usr/include \
			STAGING_LIBDIR=$(hostprefix)/usr/lib \
			PKG_CONFIG=$(hostprefix)/bin/pkg-config \
			PY_PATH=$(targetprefix)/usr \
			$(PLATFORM_CPPFLAGS) $(E_CONFIG_OPTS)
else
$(DIR_enigma2_pli)/config.status: bootstrap opkg ethtool libfreetype libexpat fontconfig libpng libjpeg libgif libmme_host libmmeimage libfribidi libid3tag libmad libsigc libreadline font-valis-enigma \
		enigma2-pli-nightly.do_prepare \
		libdvbsipp python libxml2 libxslt elementtree zope_interface twisted twistedweb2 twistedweb twistedmail pycrypto pyusb Pillow pyopenssl pythonwifi lxml libxmlccwrap \
		ncurses-dev libdreamdvd2 tuxtxt32bpp sdparm hotplug_e2 $(MEDIAFW_DEP) $(EXTERNALLCD_DEP)
	cd $(DIR_enigma2_pli) && \
		$(BUILDENV) \
		./autogen.sh && \
		sed -e 's|#!/usr/bin/python$(PYTHON_VERSION)|#!$(hostprefix)/bin/python$(PYTHON_VERSION)|' -i po/xml2po.py && \
		./configure \
			--host=$(target) \
			--with-libsdl=no \
			--datadir=/usr/share \
			--libdir=/usr/lib \
			--bindir=/usr/bin \
			--prefix=/usr \
			--sysconfdir=/etc \
			--with-boxtype=none \
			STAGING_INCDIR=$(hostprefix)/usr/include \
			STAGING_LIBDIR=$(hostprefix)/usr/lib \
			PKG_CONFIG=$(hostprefix)/bin/pkg-config \
			PY_PATH=$(targetprefix)/usr \
			$(PLATFORM_CPPFLAGS) $(E_CONFIG_OPTS)
endif

$(DEPDIR)/enigma2-pli-nightly.do_compile: $(DIR_enigma2_pli)/config.status
	cd $(DIR_enigma2_pli) && \
		$(MAKE) all
	touch $@

$(DEPDIR)/enigma2-pli-nightly: enigma2-pli-nightly.do_compile
	$(call parent_pk,enigma2_pli)
	$(start_build)
	$(get_git_version)
	cd $(DIR_enigma2_pli) && \
		$(MAKE) install DESTDIR=$(PKDIR)
	$(target)-strip $(PKDIR)/usr/bin/enigma2
	cp -f $(buildprefix)/root/usr/local/share/enigma2/$(enigma2_keymap_file) $(PKDIR)/usr/share/enigma2/keymap.xml
	$(tocdk_build)
	$(toflash_build)
	touch $@

enigma2-pli-nightly-clean:
	rm -f $(DEPDIR)/enigma2-pli-nightly.do_compile
	cd $(DIR_enigma2_pli) && $(MAKE) clean

enigma2-pli-nightly-distclean:
	rm -f $(DEPDIR)/enigma2-pli-nightly
	rm -f $(DEPDIR)/enigma2-pli-nightly.do_compile
	rm -f $(DEPDIR)/enigma2-pli-nightly.do_prepare
	rm -rf $(DIR_enigma2_pli)
#
# BOOTSTRAP
#
$(DEPDIR)/bootstrap: \
	build.env \
	$(FILESYSTEM) \
	| $(GLIBC_DEV) \
	$(CROSS_LIBGCC) \
	libz \
	$(BINUTILS) \
	$(BINUTILS_DEV) \
	$(GMP) \
	$(MPFR) \
	$(MPC) \
	$(LIBSTDC) \
	$(LIBSTDC_DEV)
	touch $@

#
# BARE-OS
#
bare-os: \
	bootstrap \
	$(LIBTERMCAP) \
	$(NCURSES_BASE) \
	$(NCURSES) \
	$(NCURSES_DEV) \
	$(BASE_PASSWD) \
	$(MAKEDEV) \
	$(BASE_FILES) \
	module_init_tools \
	busybox \
	grep \
	$(INITSCRIPTS) \
	$(NETBASE) \
	$(BC) \
	$(SYSVINIT) \
	$(SYSVINITTOOLS) \
	$(DISTRIBUTIONUTILS) \
	u-boot-utils

net-utils: \
	$(NETKIT_FTP) \
	portmap \
	nfs_utils \
	vsftpd \
	ethtool \
	opkg \
	grep \
	$(CIFS)
	touch $@

disk-utils: \
	e2fsprogs \
	$(XFSPROGS) \
	util-linux \
	mtd-utils \
	jfsutils \
	$(SG3)
	touch $@
#
# YAUD
#
yaud-stock: yaud-none stock

yaud-enigma2-nightly: yaud-none \
		host_python \
		lirc \
		stslave \
		boot-elf \
		init-scripts \
		enigma2-nightly \
		release

yaud-enigma2-pli-nightly-base: yaud-none \
		host_python \
		lirc \
		stslave \
		boot-elf \
		init-scripts \
		enigma2-pli-nightly

yaud-enigma2-pli-nightly: yaud-enigma2-pli-nightly-base release

yaud-enigma2-pli-nightly-full: yaud-enigma2-pli-nightly-base min-extras release

yaud-xbmc-nightly: yaud-none host_python boot-elf xbmc-nightly init-scripts-xbmc release_xbmc

yaud-none: \
		bare-os \
		opkg-host \
		libdvdcss \
		libdvdread \
		libdvdnav \
		linux-kernel \
		net-utils \
		disk-utils \
		driver \
		udev \
		fp_control \
		evremote2 \
		devinit \
		ustslave \
		stfbcontrol \
		showiframe \
		streamproxy
#
# EXTRAS
#
min-extras: \
	usb_modeswitch \
	modem-scripts \
	ntfs_3g \
	enigma2_openwebif \
	enigma2-plugins-sh4-networkbrowser \
	enigma2-plugins-sh4-libgisclubskin \
	$(addsuffix -openpli,$(openpli_plugin_distlist)) \
	wireless_tools \
	enigma2-plugins-sh4
	
all-extras: \
	usb_modeswitch \
	modem-scripts \
	enigma2-plugins \
	minidlna \
	xupnpd \
	ntfs_3g \
	enigma2-plugins-sh4 \
	wireless_tools \
	enigma2-skins-sh4 \
	ntpclient \
	udpxy \
	package-index
LIRCD_CONF := lircd_hl101.conf

$(DEPDIR)/misc-cp:
	cp $(buildprefix)/root/sbin/hotplug $(targetprefix)/sbin
	cp $(buildprefix)/root/etc/$(LIRCD_CONF) $(targetprefix)/etc/lircd.conf
	cp -rd $(buildprefix)/root/etc/hotplug $(targetprefix)/etc
	cp -rd $(buildprefix)/root/etc/hotplug.d $(targetprefix)/etc
	touch $@

$(DEPDIR)/misc-e2:
	$(INSTALL_DIR) $(targetprefix)/media/hdd
	$(INSTALL_DIR) $(targetprefix)/media/dvd
	$(INSTALL_DIR) $(targetprefix)/hdd
	$(INSTALL_DIR) $(targetprefix)/hdd/music
	$(INSTALL_DIR) $(targetprefix)/hdd/picture
	$(INSTALL_DIR) $(targetprefix)/hdd/movie
	touch $@

#
# SPLASHUTILS
#
SPLASHUTILS := splashutils
SPLASHUTILS_VERSION := 1.5.4.3-9
SPLASHUTILS_SPEC := stm-target-$(SPLASHUTILS).spec
SPLASHUTILS_SPEC_PATCH :=
SPLASHUTILS_PATCHES :=

SPLASHUTILS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(SPLASHUTILS)-$(SPLASHUTILS_VERSION).sh4.rpm

$(SPLASHUTILS_RPM): \
		$(if $(SPLASHUTILS_SPEC_PATCH),Patches/$(SPLASHUTILS_SPEC_PATCH)) \
		$(if $(SPLASHUTILS_PATCHES),$(SPLASHUTILS_PATCHES:%=Patches/%)) \
		libjpeg libmng libfreetype libpng \
		$(archivedir)/$(STLINUX)-target-$(SPLASHUTILS)-$(SPLASHUTILS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(SPLASHUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(SPLASHUTILS_SPEC) < $(buildprefix)/Patches/$(SPLASHUTILS_SPEC_PATCH) ) &&) \
	$(if $(SPLASHUTILS_PATCHES),cp $(SPLASHUTILS_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	export PKG_CONFIG_PATH=$(targetprefix)/usr/lib/pkgconfig && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(SPLASHUTILS_SPEC)

$(DEPDIR)/$(SPLASHUTILS): $(SPLASHUTILS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	cp root/etc/splash/luxisri.ttf $(targetprefix)/etc/splash/ && \
	cp -rd root/etc/splash/{vdr,liquid,together}_theme $(targetprefix)/etc/splash/ && \
	$(LN_SF) liquid_theme $(targetprefix)/etc/splash/default && \
	$(INSTALL_DIR) $(targetprefix)/lib/lsb && \
	cp root/lib/lsb/splash-functions $(targetprefix)/lib/lsb/ && \
	touch -r $(lastword $^) $@

#
# STSLAVE
#
STSLAVE := stslave
STSLAVE_VERSION := 0.7-28
STSLAVE_SPEC := stm-target-$(STSLAVE).spec
STSLAVE_SPEC_PATCH :=
STSLAVE_PATCHES :=

STSLAVE_RPM := RPMS/sh4/$(STLINUX)-sh4-$(STSLAVE)-$(STSLAVE_VERSION).sh4.rpm

$(STSLAVE_RPM): \
		$(addprefix Patches/,$(STSLAVE_SPEC_PATCH) $(STSLAVE_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(STSLAVE)-$(STSLAVE_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(STSLAVE_SPEC_PATCH),( cd SPECS && patch -p1 $(STSLAVE_SPEC) < $(buildprefix)/Patches/$(STSLAVE_SPEC_PATCH) ) &&) \
	$(if $(STSLAVE_PATCHES),cp $(addprefix Patches/,$(STSLAVE_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(STSLAVE_SPEC)

$(DEPDIR)/$(STSLAVE): $(STSLAVE_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch -r $(lastword $^) $@
	$(start_build)
	$(fromrpm_build)

#
# OPENSSL
#
OPENSSL := openssl
OPENSSL_DEV := openssl-dev
FILES_openssl_dev = \
/usr/lib
FILES_openssl = \
/usr/lib/*.so*

OPENSSL_VERSION := 1.0.1h-31
OPENSSL_SPEC := stm-target-$(OPENSSL).spec
OPENSSL_SPEC_PATCH :=
OPENSSL_PATCHES :=

OPENSSL_RPM := RPMS/sh4/$(STLINUX)-sh4-$(OPENSSL)-$(OPENSSL_VERSION).sh4.rpm
OPENSSL_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(OPENSSL_DEV)-$(OPENSSL_VERSION).sh4.rpm

$(OPENSSL_RPM) $(OPENSSL_DEV_RPM): \
		$(addprefix Patches/,$(OPENSSL_SPEC_PATCH) $(OPENSSL_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(OPENSSL)-$(OPENSSL_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(OPENSSL_SPEC_PATCH),( cd SPECS && patch -p1 $(OPENSSL_SPEC) < $(buildprefix)/Patches/$(OPENSSL_SPEC_PATCH) ) &&) \
	$(if $(OPENSSL_PATCHES),cp $(addprefix Patches/,$(OPENSSL_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(OPENSSL_SPEC)

$(DEPDIR)/$(OPENSSL): $(OPENSSL_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@
	$(start_build)
	$(fromrpm_build)

$(DEPDIR)/$(OPENSSL_DEV): $(OPENSSL) $(OPENSSL_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@
	$(start_build)
	$(fromrpm_build)

#
# ALSALIB
#
ALSALIB := alsa-lib
ALSALIB_DEV := alsa-lib-dev
ALSALIB_VERSION := 1.0.21a-24
ALSALIB_SPEC := stm-target-$(ALSALIB).spec
ALSALIB_SPEC_PATCH :=
ALSALIB_PATCHES :=

ALSALIB_RPM := RPMS/sh4/$(STLINUX)-sh4-$(ALSALIB)-$(ALSALIB_VERSION).sh4.rpm
ALSALIB_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(ALSALIB_DEV)-$(ALSALIB_VERSION).sh4.rpm

$(ALSALIB_RPM) $(ALSALIB_DEV_RPM): \
		$(addprefix Patches/,$(ALSALIB_SPEC_PATCH) $(ALSALIB_PATCHES)) \
		$(archivedir)/$(STLINUX)-target-$(ALSALIB)-$(ALSALIB_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(ALSALIB_SPEC_PATCH),( cd SPECS && patch -p1 $(ALSALIB_SPEC) < $(buildprefix)/Patches/$(ALSALIB_SPEC_PATCH) ) &&) \
	$(if $(ALSALIB_PATCHES),cp $(addprefix Patches/,$(ALSALIB_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(ALSALIB_SPEC)

$(DEPDIR)/$(ALSALIB): $(ALSALIB_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

$(DEPDIR)/$(ALSALIB_DEV): $(ALSALIB) $(ALSALIB_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# ALSAUTILS
#
ALSAUTILS := alsa-utils
ALSAUTILS_VERSION := 1.0.21-17
ALSAUTILS_SPEC := stm-target-$(ALSAUTILS).spec
ALSAUTILS_SPEC_PATCH :=
ALSAUTILS_PATCHES :=

ALSAUTILS_RPM := RPMS/sh4/$(STLINUX)-sh4-$(ALSAUTILS)-$(ALSAUTILS_VERSION).sh4.rpm

$(ALSAUTILS_RPM): \
		$(addprefix Patches/,$(ALSAUTILS_SPEC_PATCH) $(ALSAUTILS_PATCHES)) \
		$(NCURSES_DEV) $(ALSALIB_DEV) \
		$(archivedir)/$(STLINUX)-target-$(ALSAUTILS)-$(ALSAUTILS_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(ALSAUTILS_SPEC_PATCH),( cd SPECS && patch -p1 $(ALSAUTILS_SPEC) < $(buildprefix)/Patches/$(ALSAUTILS_SPEC_PATCH) ) &&) \
	$(if $(ALSAUTILS_PATCHES),cp $(addprefix Patches/,$(ALSAUTILS_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --nodeps --target=sh4-linux SPECS/$(ALSAUTILS_SPEC)

$(DEPDIR)/$(ALSAUTILS): $(ALSAUTILS_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

#
# ALSAPLAYER
#
ALSAPLAYER := alsaplayer
ALSAPLAYER_DEV := alsaplayer-dev
ALSAPLAYER_VERSION := 0.99.77-20
ALSAPLAYER_SPEC := stm-target-$(ALSAPLAYER).spec
ALSAPLAYER_SPEC_PATCH :=
ALSAPLAYER_PATCHES :=

ALSAPLAYER_RPM := RPMS/sh4/$(STLINUX)-sh4-$(ALSAPLAYER)-$(ALSAPLAYER_VERSION).sh4.rpm
ALSAPLAYER_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(ALSAPLAYER_DEV)-$(ALSAPLAYER_VERSION).sh4.rpm

$(ALSAPLAYER_RPM) $(ALSAPLAYER_DEV_RPM): \
		$(addprefix Patches/,$(ALSAPLAYER_SPEC_PATCH) $(ALSAPLAYER_PATCHES)) \
		libmad libid3tag \
		$(archivedir)/$(STLINUX)-target-$(ALSAPLAYER)-$(ALSAPLAYER_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(ALSAPLAYER_SPEC_PATCH),( cd SPECS && patch -p1 $(ALSAPLAYER_SPEC) < $(buildprefix)/Patches/$(ALSAPLAYER_SPEC_PATCH) ) &&) \
	$(if $(ALSAPLAYER_PATCHES),cp $(addprefix Patches/,$(ALSAPLAYER_PATCHES)) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	export PKG_CONFIG_PATH=$(targetprefix)/usr/include/pkgconfig && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(ALSAPLAYER_SPEC)

$(DEPDIR)/$(ALSAPLAYER): $(ALSAPLAYER_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@

$(DEPDIR)/$(ALSAPLAYER_DEV): $(ALSAPLAYER_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^)
	touch $@


#
# LIBEVENT
#

LIBEVENT := libevent
LIBEVENT_DEV := libevent-dev
FILES_libevent_dev = \
/usr/lib
FILES_libevent = \
/usr/lib/*.so*

LIBEVENT_VERSION := 2.0.19-4
LIBEVENT_SPEC := stm-target-$(LIBEVENT).spec
LIBEVENT_SPEC_PATCH := stm-target-$(LIBEVENT).spec.diff
LIBEVENT_PATCHES :=
LIBEVENT_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBEVENT)-$(LIBEVENT_VERSION).sh4.rpm
LIBEVENT_DEV_RPM := RPMS/sh4/$(STLINUX)-sh4-$(LIBEVENT_DEV)-$(LIBEVENT_VERSION).sh4.rpm

$(LIBEVENT_RPM) $(LIBEVENT_DEV_RPM): \
		$(if $(LIBEVENT_SPEC_PATCH),Patches/$(LIBEVENT_SPEC_PATCH)) \
		$(if $(LIBEVENT_PATCHES),$(LIBEVENT_PATCHES:%=Patches/%)) \
		$(archivedir)/$(STLINUX)-target-$(LIBEVENT)-$(LIBEVENT_VERSION).src.rpm
	rpm $(DRPM) --nosignature -Uhv $(lastword $^) && \
	$(if $(LIBEVENT_SPEC_PATCH),( cd SPECS && patch -p1 $(LIBEVENT_SPEC) < $(buildprefix)/Patches/$(LIBEVENT_SPEC_PATCH) ) &&) \
	$(if $(LIBEVENT_PATCHES),cp $(LIBEVENT_PATCHES:%=Patches/%) SOURCES/ &&) \
	export PATH=$(hostprefix)/bin:$(PATH) && \
	rpmbuild $(DRPMBUILD) -bb -v --clean --target=sh4-linux SPECS/$(LIBEVENT_SPEC)

$(DEPDIR)/$(LIBEVENT): $(LIBEVENT_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	touch $@ || true
	$(start_build)
	$(fromrpm_build)

$(DEPDIR)/$(LIBEVENT_DEV): $(LIBEVENT) $(LIBEVENT_DEV_RPM)
	@rpm --dbpath $(prefix)/$*cdkroot-rpmdb $(DRPM) --ignorearch --nodeps -Uhv \
		--badreloc --relocate $(targetprefix)=$(prefix)/$*cdkroot $(lastword $^) && \
	touch $@ || true
	$(start_build)
	$(fromrpm_build)
# This file contains different cleaning targets. They try to be, at least
# in spirit, compatible with the GNU Makefiles standards.

# Note: automake defines targets clean etc, the Makefile author
# therefore should not. Instead, we define targets like clean-local,
# which are called from automake's clean.


# Delete all marker files in .deps, except those belonging to bootstrap,
# thus forcing unpack-patch-install-delete-targets to be rebuilt.
depsclean:
	$(DEPSCLEANUP)

# currently rpmdepsclean is including targets made by tuxbox rules
rpmdepsclean:
	( cd .deps && find . ! -name "*\.*" -delete )

mostlyclean-local: cdk-clean

# Clean tuxbox source directories
cdk-clean:
	-$(MAKE) -C linux-sh4 clean
	-$(MAKE) -C $(driverdir) KERNEL_LOCATION=$(buildprefix)/linux-sh4 \
		BIN_DEST=$(targetprefix)/bin \
		INSTALL_MOD_PATH=$(targetprefix) clean
	-$(MAKE) -C $(appsdir)/misc/tools distclean
#	-$(MAKE) -C root clean
	-rm -rf build

# Clean tuxbox source directories. Clean up in cdkroot as much as the
# uninstall facilities of the components allow.
clean-local: mostlyclean-local depsclean rpmdepsclean misc-tools-clean
	-rm -rf $(hostprefix)
	-rm -rf $(crossprefix)/
	-rm -rf $(configprefix)/
	-rm -rf $(devkitprefix)/
	-rm -rf $(prefix)/*cdkroot/
	-rm -rf $(prefix)/pkgroot/
	-rm -rf $(prefix)/*cdkroot-rpmdb
	-rm -rf $(prefix)/*cdkroot-tftpboot
	-rm -rf $(rpmdbprefix)
	-rm -rf $(prefix)/release*
	-rm -rf SOURCES SPECS BUILD && install -d SOURCES SPECS BUILD
	-rm -rf $(prefix)/ccache
	-rm -rf $(DEPDIR)/u-boot-utils*
	-rm -rf $(DEPDIR)/linux-kernel*
	-rm -rf $(DEPDIR)/enigma2-pli-nightly.do_compile
	-rm -rf $(DEPDIR)/enigma2-nightly.do_compile
	-rm -rf $(DEPDIR)/xbmc-nightly.do_compile



# Be brutal...just nuke it!
distclean-local:
#	-$(MAKE) -C root distclean
	-$(MAKE) -C $(appsdir) distclean
	-$(MAKE) driver-clean
	-rm -f Makefile-archive
	-rm -f rules-downcheck.pl
	-rm -f linux-sh4
	-rm -rf $(DEPDIR)
#	-rm -rf $(targetprefix)
	-rm -rf $(hostprefix)
	-rm -rf $(serversupport)
	-rm -rf $(crossprefix)/
	-rm -rf $(configprefix)/
	-rm -rf $(devkitprefix)/
	-rm -rf $(workprefix)/
	-rm -rf $(KERNEL_DIR)/
	-rm -rf $(prefix)/*cdkroot/
	-rm -rf $(prefix)/ipkcdk/
	-rm -rf $(prefix)/ipkbox/
	-rm -rf $(prefix)/ipkextras/
	-rm -rf $(prefix)/pkgroot/
	-rm -rf $(prefix)/*cdkroot-rpmdb
	-rm -rf $(prefix)/*cdkroot-tftpboot
	-rm -rf $(prefix)/cdkrootrewrite-pkgconfig
	-rm -rf $(rpmdbprefix)/
	-rm -rf $(prefix)/release*
	-rm -rf SOURCES SPECS BUILD BUILDROOT SRPMS RPMS
	-rm -rf $(prefix)/ccache
	-rm -rf $(kernelprefix)/u-boot
	-rm -rf $(STGFB_DIR)
	-$(DISTCLEANUP)
	-rm Makefile

#
# RPM stuff
#
list-clean:
	make $(LIST_CLEAN)

$(LIST_CLEAN): \
%-clean:
	-$(DEPSCLEANUP_$*)

$(RPMLIST_CLEAN): \
%-clean:
	-rpm $(DRPM) -ev --nodeps $(STLINUX)-sh4-$(subst -clean,,$@)
	-$(DEPSCLEANUP_$*)

%-clean:
	-rpm $(DRPM) -ev --nodeps $(STLINUX)-$(subst -clean,,$@)
	-rpm $(DRPM) -ev --nodeps $(STLINUX)-sh4-$(subst -clean,,$@)
	-rm .deps/$(subst -clean,,$@)

list-distclean:
	make $(LIST_DISTCLEAN)

$(LIST_DISTCLEAN): \
%-distclean:
	-$(DISTCLEANUP_$*)
	-$(DEPSDISTCLEANUP_$*)

$(RPMLIST_DISTCLEAN): \
%-distclean:
	-rpm $(DRPM) -ev --nodeps $(STLINUX)-sh4-$(subst -distclean,,$@)
	-rm RPMS/sh4/$(STLINUX)-sh4-$(subst -distclean,,$@)*
	-$(DEPSDISTCLEANUP_$*)

%-distclean:
	-rpm $(DRPM) -ev --nodeps $(STLINUX)-$(subst -distclean,,$@)
	-rpm $(DRPM) -ev --nodeps $(STLINUX)-sh4-$(subst -distclean,,$@)
	-rm RPMS/${host_arch}/$(STLINUX)-$(subst -distclean,,$@)*
	-rm RPMS/noarch/$(STLINUX)-$(subst -distclean,,$@)*
	-rm RPMS/sh4/$(STLINUX)-$(subst -distclean,,$@)*
	-rm RPMS/sh4/$(STLINUX)-sh4-$(subst -distclean,,$@)*
	-rm .deps/$(subst -distclean,,$@)*

.PHONY: depsclean mostlyclean-local cdk-clean distclean-local list-clean
TAGS: Makefile.am $(shell echo make/*.mk)
	etags --language=makefile $^

tags: Makefile.am $(shell echo make/*.mk)
	gnuctags --language=makefile $^
#
# INIT-SCRIPTS customized
#
BEGIN[[
init_scripts
  0.10
  {PN}-{PV}
  pdircreate:{PN}-{PV}
  nothing:file://../root/etc/inittab
  nothing:file://../root/release/hostname
  nothing:file://../root/release/inetd
# for 'nothing:' only 'cp' is executed so '*' is ok.
  nothing:file://../root/release/initmodules_*
  nothing:file://../root/release/halt_*
  nothing:file://../root/release/mountall
  nothing:file://../root/release/mountsysfs
  nothing:file://../root/release/networking
  nothing:file://../root/release/rc
  nothing:file://../root/release/reboot
  nothing:file://../root/release/sendsigs
  nothing:file://../root/release/telnetd
  nothing:file://../root/release/syslogd
  nothing:file://../root/release/crond
  nothing:file://../root/release/umountfs
  nothing:file://../root/release/lircd
  nothing:file://../root/etc/init.d/avahi-daemon
  nothing:file://../root/etc/init.d/rdate
;
]]END

DESCRIPTION_init_scripts = init scripts and rules for system start
init_scripts_initd_files = \
halt \
hostname \
inetd \
initmodules \
mountall \
mountsysfs \
networking \
reboot \
sendsigs \
telnetd \
syslogd \
crond \
lircd \
umountfs \
avahi-daemon

define postinst_init_scripts
#!/bin/sh
$(foreach f,$(init_scripts_initd_files), initdconfig --add $f
)
endef

define prerm_init_scripts
#!/bin/sh
$(foreach f,$(init_scripts_initd_files), initdconfig --del $f
)
endef

$(DEPDIR)/init-scripts: $(DEPENDS_init_scripts)
	$(PREPARE_init_scripts)
	$(start_build)
	$(INSTALL_DIR) $(PKDIR)/etc/init.d

# select initmodules
	cd $(DIR_init_scripts) && \
	mv initmodules_hl101 initmodules
# select halt
	cd $(DIR_init_scripts) && \
	mv halt_hl101 halt
# init.d scripts
	cd $(DIR_init_scripts) && \
		$(INSTALL) inittab $(PKDIR)/etc/ && \
		$(INSTALL) -m 755 rc $(PKDIR)/etc/init.d/rc && \
		$(foreach f,$(init_scripts_initd_files), $(INSTALL) -m 755 $f $(PKDIR)/etc/init.d && ) true
	$(toflash_build)
	touch $@

#
# EXTRA FONTS
#

DESCRIPTION_fonts_extra = Extra fonts to beautify your box
SRC_URI_fonts_extra = git://gitorious.org/~schpuntik/open-duckbox-project-sh4/tdt-amiko.git
PKGV_fonts_extra = 0.1
SRC_URI_font_valis_enigma = $(SRC_URI_fonts_extra)
PKGV_font_valis_enigma = $(PKGV_fonts_extra)

fonts_extra_file_list = $(subst .ttf,,$(shell ls root/usr/share/fonts/))

# This can be used as multipackaging example
# Remember to replace '-' with '_' in variables and package names

PACKAGES_fonts_extra = $(subst -,_,$(addprefix font_,$(fonts_extra_file_list)))
$(foreach f,$(fonts_extra_file_list), \
 $(eval DESCRIPTION_font_$(subst -,_,$f) = font $f ) \
 $(eval FILES_font_$(subst -,_,$f) = /usr/share/fonts/$f*) \
)

$(DEPDIR)/font-valis-enigma: fonts-extra
	$(start_build)
	$(INSTALL) -d $(PKDIR)/usr/share/fonts
	$(INSTALL) -m 644 root/usr/share/fonts/valis_enigma.ttf $(PKDIR)/usr/share/fonts
	$(toflash_build)
	touch $@

$(DEPDIR)/fonts-extra: $(addsuffix .ttf, $(addprefix root/usr/share/fonts/,$(fonts_extra_file_list)))
	$(start_build)
	$(INSTALL) -d $(PKDIR)/usr/share/fonts
	$(INSTALL) -m 644 $^ $(PKDIR)/usr/share/fonts
	$(extra_build)
	touch $@

#
# 3G MODEMS
#
BEGIN[[
modem_scripts
  0.4
  {PN}-{PV}
  pdircreate:{PN}-{PV}
  nothing:file://../root/etc/ppp/ip-*
  nothing:file://../root/usr/bin/modem.sh
  nothing:file://../root/usr/bin/modemctrl.sh
  nothing:file://../root/etc/modem.conf
  nothing:file://../root/etc/modem.list
  nothing:file://../root/etc/55-modem.rules
  nothing:file://../root/etc/30-modemswitcher.rules
;
]]END

DESCRIPTION_modem_scripts = utils to setup 3G modems
RDEPENDS_modem_scripts = usb_modeswitch iptables iptables-dev

$(DEPDIR)/modem-scripts: $(DEPENDS_modem_scripts) $(RDEPENDS_modem_scripts)
	$(PREPARE_modem_scripts)
	$(start_build)
	cd $(DIR_modem_scripts) && \
	$(INSTALL_DIR) $(PKDIR)/etc/ppp/peers && \
	$(INSTALL_DIR) $(PKDIR)/etc/udev/rules.d/ && \
	$(INSTALL_DIR) $(PKDIR)/usr/bin/ && \
	$(INSTALL_BIN) ip-* $(PKDIR)/etc/ppp/ && \
	$(INSTALL_BIN) modem.sh $(PKDIR)/usr/bin/ && \
	$(INSTALL_BIN) modemctrl.sh $(PKDIR)/usr/bin/ && \
	$(INSTALL_FILE) modem.conf $(PKDIR)/etc/ && \
	$(INSTALL_FILE) modem.list $(PKDIR)/etc/ && \
	$(INSTALL_FILE) 55-modem.rules $(PKDIR)/etc/udev/rules.d/ && \
	$(INSTALL_FILE) 30-modemswitcher.rules $(PKDIR)/etc/udev/rules.d/
	$(toflash_build)
	touch $@

DESCRIPTION_driver_ptinp = pti non public
PKGV_driver_ptinp = 0.1
$(eval export PKGV_driver_ptinp = $(PKGV_driver_ptinp)$(KERNELSTMLABEL))
RCONFLICTS_driver_ptinp = driver-pti
SRC_URI_driver_ptinp = unknown

$(DEPDIR)/driver-ptinp:
	$(start_build)
	mkdir -p $(PKDIR)/lib/modules/$(KERNELVERSION)/extra/pti
	$(if $(P0211),cp -dp $(archivedir)/ptinp/pti_211.ko $(PKDIR)/lib/modules/$(KERNELVERSION)/extra/pti/pti.ko) \
	$(if $(P0215),cp -dp $(archivedir)/ptinp/pti_215.ko $(PKDIR)/lib/modules/$(KERNELVERSION)/extra/pti/pti.ko) \
	$(if $(P0308),cp -dp $(archivedir)/ptinp/pti_308.ko $(PKDIR)/lib/modules/$(KERNELVERSION)/extra/pti/pti.ko)
	$(toflash_build)
	touch $@

DESCRIPTION_driver_encrypt = driver encrypt
PKGV_driver_encrypt = 0.1
$(eval export PKGV_driver_encrypt = $(PKGV_driver_encrypt)$(KERNELSTMLABEL))
SRC_URI_driver_encrypt = unknown

$(DEPDIR)/driver-encrypt:
	$(start_build)
	mkdir -p $(PKDIR)/lib/modules/$(KERNELVERSION)/extra/encrypt
	$(toflash_build)
	touch $@

#
# boot-elf
#

DESCRIPTION_boot_elf = firmware non public
SRC_URI_boot_elf = unknown
PKGV_boot_elf = r2
RDEPENDS_boot_elf :=


$(DEPDIR)/boot-elf: firmware $(RDEPENDS_boot_elf)
	$(start_build)
	$(INSTALL_DIR) $(PKDIR)/lib/firmware/
	$(INSTALL_FILE) $(archivedir)/boot/video_7109.elf $(PKDIR)/lib/firmware/video.elf
	$(INSTALL_FILE) $(archivedir)/boot/audio_7109.elf $(PKDIR)/lib/firmware/audio.elf
	$(toflash_build)
	touch $@

#
# opkg plugin nonfree feed
#

DESCRIPTION_enigma2_plugin_nonfree_feed = Download non free plugins and skins
SRC_URI_enigma2_plugin_nonfree_feed = unknown
PKGV_enigma2_plugin_nonfree_feed = r3
RDEPENDS_enigma2_plugin_nonfree_feed :=

define postinst_enigma2_plugin_nonfree_feed
#!/bin/sh
# postinst script for nonfree-feed
(sleep 10; opkg update) &
exit 0
endef

$(DEPDIR)/enigma2-plugin-nonfree-feed: $(RDEPENDS_enigma2_plugin_nonfree_feed)
	$(start_build)
	$(INSTALL_DIR) $(PKDIR)/etc/opkg/ && \
	$(INSTALL_FILE) $(buildprefix)/root/etc/ipkg/non-free-feed.conf $(PKDIR)/etc/opkg/non-free-feed.conf
	$(e2extra_build)
	touch $@
	
#
# firmware
#

DESCRIPTION_firmware = firmware non public
SRC_URI_firmware = unknown
PKGV_firmware = r1
RDEPENDS_firmware :=

$(DEPDIR)/firmware:  $(RDEPENDS_firmware)
	$(start_build)
	$(INSTALL_DIR) $(PKDIR)/lib/firmware/
	$(toflash_build)
	touch $@

# auxiliary targets for model-specific builds
release_common_utils:
# opkg config
	mkdir -p $(prefix)/release/etc/opkg
	mkdir -p $(prefix)/release/usr/lib/locale
	cp -f $(buildprefix)/root/release/official-feed.conf $(prefix)/release/etc/opkg/
	cp -f $(buildprefix)/root/release/opkg.conf $(prefix)/release/etc/
	$(call initdconfig,$(shell ls $(prefix)/release/etc/init.d))
	
release_base: driver-ptinp
	rm -rf $(prefix)/release || true
	$(INSTALL_DIR) $(prefix)/release && \
	cp -rp $(prefix)/pkgroot/* $(prefix)/release
# filesystem
	$(INSTALL_DIR) $(prefix)/release/bin && \
	$(INSTALL_DIR) $(prefix)/release/sbin && \
	$(INSTALL_DIR) $(prefix)/release/boot && \
	$(INSTALL_DIR) $(prefix)/release/dev && \
	$(INSTALL_DIR) $(prefix)/release/dev.static && \
	$(INSTALL_DIR) $(prefix)/release/etc && \
	$(INSTALL_DIR) $(prefix)/release/etc/fonts && \
	$(INSTALL_DIR) $(prefix)/release/etc/init.d && \
	$(INSTALL_DIR) $(prefix)/release/etc/modprobe.d && \
	$(INSTALL_DIR) $(prefix)/release/etc/network && \
	$(INSTALL_DIR) $(prefix)/release/etc/network/if-down.d && \
	$(INSTALL_DIR) $(prefix)/release/etc/network/if-post-up.d && \
	$(INSTALL_DIR) $(prefix)/release/etc/network/if-post-down.d && \
	$(INSTALL_DIR) $(prefix)/release/etc/network/if-pre-up.d && \
	$(INSTALL_DIR) $(prefix)/release/etc/network/if-pre-down.d && \
	$(INSTALL_DIR) $(prefix)/release/etc/network/if-up.d && \
	$(INSTALL_DIR) $(prefix)/release/etc/tuxbox && \
	$(INSTALL_DIR) $(prefix)/release/etc/enigma2 && \
	$(INSTALL_DIR) $(prefix)/release/media && \
	$(INSTALL_DIR) $(prefix)/release/media/dvd && \
	$(INSTALL_DIR) $(prefix)/release/media/net && \
	$(INSTALL_DIR) $(prefix)/release/mnt && \
	$(INSTALL_DIR) $(prefix)/release/mnt/usb && \
	$(INSTALL_DIR) $(prefix)/release/mnt/hdd && \
	$(INSTALL_DIR) $(prefix)/release/mnt/nfs && \
	$(INSTALL_DIR) $(prefix)/release/root && \
	$(INSTALL_DIR) $(prefix)/release/proc && \
	$(INSTALL_DIR) $(prefix)/release/sys && \
	$(INSTALL_DIR) $(prefix)/release/tmp && \
	$(INSTALL_DIR) $(prefix)/release/usr && \
	$(INSTALL_DIR) $(prefix)/release/usr/bin && \
	$(INSTALL_DIR) $(prefix)/release/media/hdd && \
	$(INSTALL_DIR) $(prefix)/release/media/hdd/music && \
	$(INSTALL_DIR) $(prefix)/release/media/hdd/picture && \
	$(INSTALL_DIR) $(prefix)/release/lib && \
	$(INSTALL_DIR) $(prefix)/release/lib/modules && \
	$(INSTALL_DIR) $(prefix)/release/lib/firmware && \
	$(INSTALL_DIR) $(prefix)/release/ram && \
	$(INSTALL_DIR) $(prefix)/release/var && \
	$(INSTALL_DIR) $(prefix)/release/var/etc && \
	mkdir -p $(prefix)/release/var/run/lirc && \
	$(INSTALL_DIR) $(prefix)/release/usr/lib/opkg && \
	ln -sf /usr/bin/opkg-cl  $(prefix)/release/usr/bin/ipkg-cl && \
	ln -sf /usr/bin/opkg-cl  $(prefix)/release/usr/bin/opkg && \
	ln -sf /usr/bin/opkg-cl  $(prefix)/release/usr/bin/ipkg
# rc.d directories
	mkdir -p $(prefix)/release/etc/rc.d/rc{0,1,2,3,4,5,6,S}.d
	ln -sf ../init.d $(prefix)/release/etc/rc.d

# zoneinfo
	$(INSTALL_DIR) $(prefix)/release/usr/share/zoneinfo && \
	cp -aR $(buildprefix)/root/usr/share/zoneinfo/* $(prefix)/release/usr/share/zoneinfo/
# udhcpc
	$(INSTALL_DIR) $(prefix)/release/usr/share/udhcpc && \
	cp -aR $(buildprefix)/root/usr/share/udhcpc/* $(prefix)/release/usr/share/udhcpc/ && \
	cp -dp $(buildprefix)/root/etc/init.d/udhcpc $(prefix)/release/etc/init.d/ && \
	cp $(buildprefix)/root/etc/timezone.xml $(prefix)/release/etc/ && \
	cp -a $(buildprefix)/root/etc/Wireless $(prefix)/release/etc/ && \
	cp -dp $(buildprefix)/root/firmware/*.bin $(prefix)/release/lib/firmware/ && \
	cp -dp $(targetprefix)/etc/network/options $(prefix)/release/etc/network/ && \
	ln -sf /etc/timezone.xml $(prefix)/release/etc/tuxbox/timezone.xml && \
	ln -sf /usr/local/share/keymaps $(prefix)/release/usr/share/keymaps
	if [ -e $(targetprefix)/usr/share/alsa ]; then \
	mkdir -p $(prefix)/release/usr/share/alsa/; \
	mkdir -p $(prefix)/release/usr/share/alsa/cards/; \
	mkdir -p $(prefix)/release/usr/share/alsa/pcm/; \
	cp $(targetprefix)/etc/tuxbox/satellites.xml $(prefix)/release/etc/tuxbox/ && \
	cp $(targetprefix)/etc/tuxbox/cables.xml $(prefix)/release/etc/tuxbox/ && \
	cp $(targetprefix)/etc/tuxbox/terrestrial.xml $(prefix)/release/etc/tuxbox/ && \
	cp $(kernelprefix)/linux-sh4/arch/sh/boot/uImage $(prefix)/release/boot/ && \
	cp $(targetprefix)/usr/share/alsa/alsa.conf          $(prefix)/release/usr/share/alsa/alsa.conf; \
	cp $(targetprefix)/usr/share/alsa/cards/aliases.conf $(prefix)/release/usr/share/alsa/cards/; \
	cp $(targetprefix)/usr/share/alsa/pcm/default.conf   $(prefix)/release/usr/share/alsa/pcm/; \
	cp $(targetprefix)/usr/share/alsa/pcm/dmix.conf      $(prefix)/release/usr/share/alsa/pcm/; fi
# AUTOFS
	if [ -d $(prefix)/release/usr/lib/autofs ]; then \
		cp -f $(buildprefix)/root/release/auto.hotplug $(prefix)/release/etc/; \
		cp -f $(buildprefix)/root/release/auto.usb $(prefix)/release/etc/; \
		cp -f $(buildprefix)/root/release/auto.network $(prefix)/release/etc/; \
		cp -f $(buildprefix)/root/release/autofs $(prefix)/release/etc/init.d/; \
	fi

# Copy lircd.conf
	touch $(prefix)/release/var/etc/.firstboot && \
	cp -f $(buildprefix)/root/bootscreen/bootlogo.mvi $(prefix)/release/boot/ && \
	cp -f $(buildprefix)/root/bin/autologin $(prefix)/release/bin/ && \
	cp -f $(buildprefix)/root/bin/vdstandby $(prefix)/release/bin/ && \
	cp -f $(buildprefix)/root/etc/vdstandby.cfg $(prefix)/release/etc/ && \
	cp -f $(buildprefix)/root/etc/network/interfaces $(prefix)/release/etc/network/ && \
	cp -f $(buildprefix)/root/sbin/flash_* $(prefix)/release/sbin/ && \
	cp -f $(buildprefix)/root/sbin/nand* $(prefix)/release/sbin/ && \
	cp -f $(buildprefix)/root/etc/image-version $(prefix)/release/etc/ && \
	cp -dp $(buildprefix)/root/etc/fstab $(prefix)/release/etc/ && \
	cp -dp $(targetprefix)/etc/group $(prefix)/release/etc/ && \
	cp -dp $(targetprefix)/etc/host.conf $(prefix)/release/etc/ && \
	cp -dp $(buildprefix)/root/etc/hostname $(prefix)/release/etc/ && \
	cp -dp $(targetprefix)/etc/hosts $(prefix)/release/etc/ && \
	cp -dp $(buildprefix)/root/etc/inetd.conf $(prefix)/release/etc/ && \
	ln -s /usr/share/zoneinfo/Europe/Berlin $(prefix)/release/etc/localtime && \
	cp -dp $(targetprefix)/etc/mtab $(prefix)/release/etc/ && \
	cp -dp $(buildprefix)/root/etc/motd $(prefix)/release/etc/ && \
	cp -dp $(targetprefix)/etc/passwd $(prefix)/release/etc/ && \
	cp -dp $(buildprefix)/root/etc/profile $(prefix)/release/etc/ && \
	cp -dp $(targetprefix)/etc/protocols $(prefix)/release/etc/ && \
	cp -dp $(buildprefix)/root/etc/resolv.conf $(prefix)/release/etc/ && \
	cp -dp $(targetprefix)/etc/services $(prefix)/release/etc/ && \
	cp -dp $(targetprefix)/etc/shells $(prefix)/release/etc/ && \
	cp -dp $(targetprefix)/etc/shells.conf $(prefix)/release/etc/ && \
	$(INSTALL_DIR) $(prefix)/release/etc/tuxbox && \
	$(INSTALL_FILE) root/etc/tuxbox/satellites.xml $(prefix)/release/etc/tuxbox/ && \
	$(INSTALL_FILE) root/etc/tuxbox/cables.xml $(prefix)/release/etc/tuxbox/ && \
	$(INSTALL_FILE) root/etc/tuxbox/terrestrial.xml $(prefix)/release/etc/tuxbox/ && \
	$(INSTALL_FILE) root/etc/tuxbox/timezone.xml $(prefix)/release/etc/ && \
	echo "576i50" > $(prefix)/release/etc/videomode

release_hl101:
	echo "hl101" > $(prefix)/release/etc/hostname && \
	cp -f $(buildprefix)/root/release/fstab_hl101 $(prefix)/release/etc/fstab
	cp $(buildprefix)/root/firmware/dvb-fe-avl2108.fw $(prefix)/release/lib/firmware/ && \
	cp $(buildprefix)/root/firmware/dvb-fe-stv6306.fw $(prefix)/release/lib/firmware/
	cp -dp $(buildprefix)/root/etc/11-usbhd-automount.rules $(prefix)/release/etc/udev/rules.d
	cp -dp $(buildprefix)/root/release/auto_rb_st.sh $(prefix)/release/etc/init.d
	cp -dp $(buildprefix)/root/etc/init.d/rdate.sh $(prefix)/release/etc/init.d
	ln -sf /etc/init.d/rdate.sh $(prefix)/release/etc/rc.d/rcS.d/S99rdate.sh
	rm -Rf $(prefix)/release/usr/share/meta

# The main target depends on the model.
# IMPORTANT: it is assumed that only one variable is set. Otherwise the target name won't be resolved.
#
$(DEPDIR)/release: $(DEPDIR)/%release:boot-elf release_base release_common_utils release_hl101
# Post tweaks
	$(DEPMOD) -b $(prefix)/release $(KERNELVERSION)
	touch $@

release-clean:
	rm -f $(DEPDIR)/release
	rm -f $(DEPDIR)/release_base
	rm -f $(DEPDIR)/release_$(HL101)
	rm -f $(DEPDIR)/release_common_utils 

######## FOR YOUR OWN CHANGES use these folder in cdk/own_build/enigma2 #############
	cp -RP $(buildprefix)/own_build/enigma2/* $(prefix)/release/
#-------------------------------
#---Update versions from vcs----
#---like git, svn---------------
#-------------------------------

# echo targets to launch
vcs-update-list:
	echo $(LIST_AUTOPKGV) |perl -pe 's/ /\n/g'

# remove and remake version .deps
vcs-update: $(LIST_AUTOPKGV)
	rm -f $^
	make $^
